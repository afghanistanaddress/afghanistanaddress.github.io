<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1656.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>类和对象的学习心得 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">类和对象的学习心得</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <div>  &nbsp; </div> <div>  &nbsp; </div> <div>  1，<br />  <strong>类和对象的定义：</strong> </div> <div>  <span style="color:#333333;">类就是一类对象的统称。对象就是这一类具体化的一个实例。</span> </div> <div>  <span style="color:#333333;">2，<strong>类和类的实例化</strong></span> </div> <div>  <span style="color:#333333;">用类型创建对象的过程，称为类的实例化 </span> </div> <div> <div>   <span style="color:#333333;">1. </span><br />   <span style="color:#333333;">类只是</span><br />   <span style="color:#333333;">一个</span><br />   <span style="color:#333333;">模型</span><br />   <span style="color:#333333;">一样的东西，限定了类有哪些成员</span><br />   <span style="color:#333333;">. </span>  </div> <div>   <span style="color:#333333;">2. </span><br />   <span style="color:#333333;">一个类可以实例化出多个对象，实例化出的对象占用实际的物理空间，存储类成员变量。</span>  </div> <div>   <span style="color:#333333;">创建：</span>  </div> <div> <pre><code>class Person{     //成员属性     public String name ;          //访问修饰限定符：public   private   protected  什么都不写     public int age  ;             //name和age是实例成员变量     public static int count;       //静态成员变量，在方法区，不管new多少个，只有一个count     /*public boolean flg;     public char ch;*/     //成员方法     public void eat(){         System.out.println("吃饭");     } }</code></pre> <p>实例化：</p> <pre><code>public static void main(String[]args){         //Person是类型  person是局部变量（属于引用类型）          //person 1在栈上   new Person在堆上          Person person1 = new Person();//对象的实例化          Person person2 = new Person();          Person person3 = new Person();          Person person4 = new Person();          Person person5 = new Person();          System.out.println(person1);          System.out.println(person2);</code></pre> <p>访问：</p> <pre><code>public static void main(String[] args) {         Person person = new Person(); //实例化一个对象         System.out.println(person.age);         System.out.println(person.name);         person.eat();          /*System.out.println(person.flg);         System.out.println(person.ch);         int a;         System.out.println(a);   */     }</code></pre> <p><strong>局部变量</strong>：定义在方法当中，特点是当方法结束后该变量也随之消失，因为他存储在栈上。</p> <p>1.作用域：在当前方法的括号内</p> <p>2.生命周期：当方法结束，方法内的局部变量也随之消失。</p> </p></div> <p><strong>成员属性</strong>：（定义在类内部，方法外部的变量）</p> <p>1，实例成员变量&nbsp; ：age&nbsp; &nbsp;name （在堆上）</p> <p>2，静态成员变量&nbsp; ：count&nbsp; &nbsp;（在方法区）</p> <p>接下来看一下如何调用：</p> <pre><code>class Person {     //成员属性     public String name;          //访问修饰限定符：public   private   protected  什么都不写     public int age;             //name和age是实例成员变量     public static int count;       //静态成员变量，在方法区，不管new多少个，只有一个count      /*public boolean flg;     public char ch;*/     //成员方法     public void eat() {         System.out.println("吃饭");     }      public static void func() {         System.out.println("静态的方法");     }      public void show() {         System.out.println("姓名：" + name + "年龄" + age);     } } public class TestDemo {     public static void main(String[] args) {         Person person1 = new Person();         person1.name = "佐助";         person1.show();         System.out.println(person1);     }      public static void main7(String[] args) {         Person person1 = new Person();         person1.name = "佩奇001";         //person2这个引用指向了person1这个对象         Person person2 = person1;         System.out.println(person2.name);     }       public static void main6(String[] args) {         Person person1 = null;         person1.name = "佩奇";         System.out.println(person1.name);     }</code></pre> <p><strong>Alt+Insert快捷键直接生产show函数</strong></p> <p><strong>static关键字</strong></p> <p>1，修饰成员变量：静态成员变量</p> <p>2，修饰成员方法：静态成员方法</p> <p>3，修饰代码块：</p> <p>注意：静态的方法内部不能有实例数据成员。</p> <p>原因：1.静态的方法不依赖于对象，而实例数据成员需要通过实例化才能产生（new）</p> <p>2.静态的方法和静态的数据-&gt;静态的优先被执行的</p> <pre><code>public String name;          //访问修饰限定符：public   private   protected  什么都不写     public int age;             //name和age是实例成员变量     public static int count;  //静态成员变量，在方法区，不管new多少个，只有一个count     // 加static是静态的     public final int SIZE1 = 10;  //被final修饰的常量，对象，和final没关系，堆     public static final int SIZE2 = 10;  //方法区</code></pre> <p><strong>封装：</strong></p> <p><span style="color:#333333;"><strong>private</strong></span><span style="color:#333333;"><strong>实现封装 </strong></span>：</p> <pre><code>class Person2{     private String name;     private int age;     public void setName(String myName){         name = myName;     }     public void setAge(int myAge){         age = myAge;     }     public int getAge(){         return age;     }     public String getName(){         return name;     } } public class TestDemo2 {     public static void main(String[] args) {         Person2 person2 = new Person2();         person2.setAge(15);         person2.setName("卡卡西");         System.out.println(person2.getAge());         System.out.println(person2.getName());      } }</code></pre> <p>普通方法：public&nbsp; 返回值&nbsp; 方法名&nbsp; （参数列表）{<!-- --></p> <p>方法体</p> <p>}</p> <p><strong>构造方法：</strong></p> <p>前提问题：实例化一个对象分为几步？</p> <p>1.为对象分配内存</p> <p>2.调用合适的构造方法，才会产生一个对象。</p> <pre><code>class Person2{     private String name;     private int age;     //alt+insert     // (get and setter)快速生成     //(Constructor)     //this代表当前对象的引用。      public Person2(){         System.out.println("Person2()");     }     public Person2(String name){         this.name = name;         System.out.println("Person2(String)");         System.out.println(this.name);     }     public Person2(String name,int age){      this.name = name;      this.age = age;         System.out.println("Person2(String,int)");     }      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public int getAge() {         return age;     }      public void setAge(int age) {         this.age = age;     }        private void func4(){         System.out.println("func()");     }     public void  func2(){         func4();     }    }   public class TestDemo2 {     public static void main(String[] args) {         Person2 person2 = new Person2();         Person2 person3 = new Person2("Java");         Person2 person4 = new Person2("鸣人",18);     }       public static void main1(String[] args) {         Person2 person2 = new Person2();         person2.setAge(15);         person2.setName("卡卡西");         person2.func2();         System.out.println(person2.getAge());         System.out.println(person2.getName());      } }</code></pre> <p>到此为止，下集更精彩</p> </div></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1655.htm">git下载安装教程</a></p>
                                                        <p>下一个：<a href="/html/category/article-1657.htm">IDEA配置Maven详细版教程</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7224.htm" title="开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）">开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）</a></li>
                        <li class="py-2"><a href="/html/category/article-6011.htm" title="宠物店利润有多大（宠物店利润有多大啊）">宠物店利润有多大（宠物店利润有多大啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7500.htm" title="全国宠物粮食基地排名前十（全国宠物粮食基地排名前十名）">全国宠物粮食基地排名前十（全国宠物粮食基地排名前十名）</a></li>
                        <li class="py-2"><a href="/html/category/article-6205.htm" title="宠物粮食创业项目名称大全 宠物粮食创业项目名称大全集">宠物粮食创业项目名称大全 宠物粮食创业项目名称大全集</a></li>
                        <li class="py-2"><a href="/html/category/article-6029.htm" title="重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）">重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-7179.htm" title="被家猫抓伤轻微出血伤口有点疼要紧吗（被家猫抓伤出了一点点血）">被家猫抓伤轻微出血伤口有点疼要紧吗（被家猫抓伤出了一点点血）</a></li>
                        <li class="py-2"><a href="/html/category/article-6949.htm" title="北京宠物鸟医院（北京哪家宠物医院能看鸟）">北京宠物鸟医院（北京哪家宠物医院能看鸟）</a></li>
                        <li class="py-2"><a href="/html/category/article-7409.htm" title="学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）">学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6764.htm" title="动物医院实践心得500字怎么写的 动物医院实践心得500字怎么写的啊">动物医院实践心得500字怎么写的 动物医院实践心得500字怎么写的啊</a></li>
                        <li class="py-2"><a href="/html/category/article-6580.htm" title="宠物批发微信一手货源（宠物批发平台）">宠物批发微信一手货源（宠物批发平台）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>