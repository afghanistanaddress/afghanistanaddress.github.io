<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1658.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>vue3使用vuex实现页面实时更新数据（setup） - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">vue3使用vuex实现页面实时更新数据（setup）</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>我项目中使用ws获取数据，因为数据是不断更新的，vue页面只更新一次就不更新了，然后暂时只能想到vuex来保存更新状态，页面监听数据实现实时更新。下面是我测试时用的数据，没有用ws，用的是定时器模拟定时发送数据。<br /> 1.项目引入vue</p> <pre><code class="prism language-html">npm i vuex </code></pre> <p>2.main.js引入vuex</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token keyword">import</span> <span class="token string">'./style.css'</span> <span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span> <span class="token comment">//vuex</span> <span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store/index.js'</span> <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">'echarts'</span> <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span> <span class="token comment">// 全局挂载echarts</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$echarts <span class="token operator">=</span> echarts <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span> </code></pre> <p>3.新建store文件夹<br /> index.js里写vuex</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>         <span class="token literal-property property">iotData</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>          <span class="token function-variable function">getStateCount</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'想发火啊'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> state<span class="token punctuation">.</span>iotData<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>         <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>count <span class="token operator">+=</span> payload         <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token function">setIOTData</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>iotData <span class="token operator">=</span> data             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'setIOTData方法'</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>iotData<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token function">updateIOTTagConfig</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">//重点，要不然页面数据不更新</span>             state<span class="token punctuation">.</span>iotData<span class="token operator">=</span><span class="token keyword">null</span>             state<span class="token punctuation">.</span>iotData <span class="token operator">=</span> data             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>iotData<span class="token punctuation">,</span> <span class="token string">'进入mutations'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>         <span class="token function">asyncAddStoreCount</span><span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">// 第一个参数是vuex固定的参数，不需要手动去传递</span>             store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"addCount"</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token function">asyncupdateIOTTagConfig</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{<!-- --></span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'updateIOTTagConfig'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>      <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> store  </code></pre> <p>3.在传输数据的页面引入vuex (api.js)<br /> (注意，这里我用的是定时器，另外不要在意这么多方法传这个数组，你也可以就一个方法里使用vuex，我这个就是测试写的）</p> <pre><code class="prism language-javascript"><span class="token keyword">let</span> timer <span class="token keyword">import</span>  store  <span class="token keyword">from</span> <span class="token string">"../store/index"</span><span class="token punctuation">;</span> <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">myStopEcharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">startEcharts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>       timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">var</span> ydata1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             ydata1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> <span class="token string-property property">'id'</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">'serialNumber'</span><span class="token operator">:</span> <span class="token number">2001</span><span class="token punctuation">,</span> <span class="token string-property property">'time'</span><span class="token operator">:</span> <span class="token number">2022</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token function">jj</span><span class="token punctuation">(</span>ydata1<span class="token punctuation">)</span>             <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">jj</span><span class="token punctuation">(</span><span class="token parameter">ydata1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">const</span> messageList <span class="token operator">=</span> ydata1     <span class="token function">hh</span><span class="token punctuation">(</span>messageList<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">hh</span><span class="token punctuation">(</span><span class="token parameter">messageList</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token function">runExit</span><span class="token punctuation">(</span>messageList<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">runExit</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token function">exit</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">var</span> exitArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">function</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>        exitArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>exitArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>          exitArr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span>         <span class="token comment">// console.log(s,exitArr,'pos');</span>     <span class="token punctuation">}</span>      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'asyncupdateIOTTagConfig'</span><span class="token punctuation">,</span>exitArr<span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>4.渲染页面</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>   {<!-- -->{name}}    <span class="token comment">&lt;!-- &lt;h1&gt;vuex中的数据{<!-- -->{ store.state.count }}&lt;/h1&gt;   &lt;button @click="changeStoreCount"&gt;改变vuex数据&lt;/button&gt;   &lt;button @click="asyncChangeStoreCount"&gt;异步改变vuex数据&lt;/button&gt; --&gt;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>echarts</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>echarts</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> <span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> defineComponent<span class="token punctuation">,</span> computed<span class="token punctuation">,</span>ref<span class="token punctuation">,</span> watch<span class="token punctuation">,</span> toRaw <span class="token punctuation">,</span>onUnmounted<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span> <span class="token keyword">import</span> echarts <span class="token keyword">from</span> <span class="token string">"./echarts.vue"</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vuex"</span><span class="token punctuation">;</span> <span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>   <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"HelloWorld"</span><span class="token punctuation">,</span>   <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span>echarts<span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">let</span> <span class="token punctuation">{<!-- --></span>state<span class="token punctuation">,</span> commit<span class="token punctuation">,</span>getters<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用计算属性动态拿到vuex的值</span>     <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>iotData<span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token comment">// let UserInfoNoParams = computed(() =&gt; getters['getStateCount'])</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>state<span class="token punctuation">.</span>iotData<span class="token punctuation">,</span><span class="token string">'哎'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// commit("setIOTData", 1);</span>     <span class="token comment">// const nextAge = computed({<!-- --></span>     <span class="token comment">//    get() {<!-- --></span>     <span class="token comment">//     return store.iotData</span>     <span class="token comment">//   },</span>     <span class="token comment">//   // set(value) {<!-- --></span>     <span class="token comment">//   //   console.log(value)  //  输出新修改的值</span>     <span class="token comment">//   //   return age.value = value - 1</span>     <span class="token comment">//   // }</span>     <span class="token comment">// })</span>     <span class="token comment">//监听数据</span>      <span class="token function">watch</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">"改变的值"</span><span class="token punctuation">,</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"旧"</span><span class="token punctuation">,</span>oldVal<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">immediate</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// console.log(nextAge,'nextAge');</span>     <span class="token keyword">return</span> <span class="token punctuation">{<!-- --></span>name<span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token comment">//   const changeStoreCount = () =&gt; {<!-- --></span>     <span class="token comment">//     store.commit("addCount", 1)</span>     <span class="token comment">//   }</span>     <span class="token comment">//   const asyncChangeStoreCount = () =&gt; {<!-- --></span>     <span class="token comment">//     setTimeout(() =&gt; {<!-- --></span>     <span class="token comment">//  // asyncAddStoreCount是mutations中的方法，2是传递过去的数据</span>     <span class="token comment">//  // 异步改变vuex用dispatch方法，这里用setTimeout模拟异步操作</span>     <span class="token comment">//       store.dispatch("asyncAddStoreCount", 2)</span>     <span class="token comment">//     }, 1000)</span>     <span class="token comment">//   }</span>     <span class="token comment">// return { store, changeStoreCount, asyncChangeStoreCount }</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>代码可能有点乱，不过能实现效果。</p> </p></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1657.htm">IDEA配置Maven详细版教程</a></p>
                                                        <p>下一个：<a href="/html/category/article-1659.htm">JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-1923.htm" title="layUI利用JQuery设置select下拉列表的值重新渲染">layUI利用JQuery设置select下拉列表的值重新渲染</a></li>
                        <li class="py-2"><a href="/html/category/article-1910.htm" title="[转载] Python中format函数用法">[转载] Python中format函数用法</a></li>
                        <li class="py-2"><a href="/html/category/article-1884.htm" title="Springboot：拦截器和过滤器">Springboot：拦截器和过滤器</a></li>
                        <li class="py-2"><a href="/html/category/article-1864.htm" title="springboot基础(6):整合ActiveMQ">springboot基础(6):整合ActiveMQ</a></li>
                        <li class="py-2"><a href="/html/category/article-1924.htm" title="js制作简易秒表效果详细讲解、开始、暂停与结束（定时器制作和时间戳制作）">js制作简易秒表效果详细讲解、开始、暂停与结束（定时器制作和时间戳制作）</a></li>
                        <li class="py-2"><a href="/html/category/article-1966.htm" title="JavaScript如何将数组与值是数组的对象合并方法详解">JavaScript如何将数组与值是数组的对象合并方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1907.htm" title="为MySQL创建高性能索引_Mysql_">为MySQL创建高性能索引_Mysql_</a></li>
                        <li class="py-2"><a href="/html/category/article-1896.htm" title="一、重写了equals为什么还要重写hashcode">一、重写了equals为什么还要重写hashcode</a></li>
                        <li class="py-2"><a href="/html/category/article-1951.htm" title="设计模式学习笔记（十三）组合模式及其在树形结构中的应用">设计模式学习笔记（十三）组合模式及其在树形结构中的应用</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>