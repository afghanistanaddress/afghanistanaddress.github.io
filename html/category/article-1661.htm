<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1661.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>vue 内置组件 component 的用法 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">vue 内置组件 component 的用法</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <h3><u><span style="color:#ff0000;">component is 内置组件切换方法一：</span></u></h3> <p>component组件（单独拿出一个组件来专门进行切换使用）</p> <p>使用is来绑定你的组件：如下面的reviewedPlan&nbsp; planDetailsList&nbsp; &nbsp;attachmentList等引入的组件名</p> <p>changeViewFun 是用来切换组件的方法 通过给is绑定的currentView来实现切换组件</p> <p>pathUrl就是当前的路由</p> <pre><code class="language-html"></code></pre> <pre class="has"><code class="language-html">&lt;template&gt;     &lt;div class="reviewed"&gt;         &lt;component             :is="currentView"             @changeview="changeViewFun"             :pathUrl="pathUrl"         &gt;&lt;/component&gt;     &lt;/div&gt; &lt;/template&gt; &lt;script&gt;      //引入三个需要切换的组件     import reviewedPlan from '../modules/reviewedPlan.vue';     import planDetailsList from './planDetailsList';     import attachmentList from './attachmentList.vue';     export default {         name: "reviewed",         data() {             return {                 currentView:'reviewedPlan',                 pathUrl:'',                 hrefIndex:"",             }         },         components: {             reviewedPlan,             planDetailsList,             attachmentList         },         created () {               this.hrefIndex=window.location.href.indexOf('jxjh')-1;               this.pathUrl=window.location.href.substring(this.hrefIndex);               if(this.$route.query.currentView){                   this.$route.query.currentView = this.$route.query.currentView===this.currentView?this.$route.query.currentView:this.currentView;               }           },         methods:{           //组件切换方法             changeViewFun(val){                 this.currentView = val;             }         },     } &lt;/script&gt; &lt;style lang="less" scoped&gt;     @import "~@/libs/less/theme/theme.less";  &lt;/style&gt;</code></pre> <p>每个切换的组件</p> <pre class="has"><code class="language-html">this.$emit("changeview","planDetailsList");  //父组件监听到changeview，给is绑定的currentView重新赋值 this.$router.push({        path: this.pathUrl,  //通过props接收  props:{pathUrl:String}        query: {           id: params.row.id,   //参数名           from:"reviewedPlan"  //这里加from原因是要区分多个组件的情况下通过路由from参数来区分是通过那个组件切换过来的        }  })</code></pre> <p>返回组件内部方法&nbsp; (点击返回的时候执行的操作)</p> <pre class="has"><code class="language-html">var url =  this.$route.query.from;  //取路由from，区分是那个通过那个组件传递过来的，返回的时候可返回到对应的组件 this.$emit("changeview",url); this.$router.push({       path: this.pathUrl,       query: {              currentView:url,         } })</code></pre> <h3><u><span style="color:#ff0000;">component is 内置组件切换方法二：</span></u></h3> <p>实现的结果是：组件A调转组件B，组件A里面有个查看按钮，点击查看，跳转到组件B，组件B里面点击返回跳转到组件A，使用component，从组件A跳到组件B，在组件B里面刷新之后还是停留在组件B，还有就是点击tab切换的时候也可以，点击那个tab，当前tab发请求。具体实现：</p> <p>1、封装routePlugin.js插件</p> <pre class="has"><code class="language-javascript">const addQuery=function(queryDate){     var query={};     Object.assign(query,this.$route.query,queryDate);     this.$router.push({         path:this.$route.path,         query:query     }); }; const delQuery=function(){     var query={};     var arg=Array.prototype.slice.call(arguments);     Object.assign(query,this.$route.query);     arg.forEach(item=&gt;{         delete query[item];//删除参数     })     this.$router.push({         path:this.$route.path,         query:query     }); }; var install = {     install(Vue) {         Vue.mixin({             beforeCreate() {                 var self=this;                 this.$routePlugin={                     addQuery:addQuery.bind(self),                     delQuery:delQuery.bind(self)                 }             }         })     } } export default install;</code></pre> <p>2、在main.js中注册到全局，<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import routePlugin from "./libs/js/vueExtend/routePlugin.js";</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vue.use(routePlugin); //修改参数方法</p> <p>3、在组件内部使用</p> <p>&nbsp; &nbsp; 说明：需要三个组件：第一个：component主控制组件、第二个：初始化组件内容、第三个：跳转过去的组件</p> <p>第一个：studentIndex.vue</p> <pre class="has"><code class="language-javascript">&lt;template&gt;     &lt;component         :is="viewName"         @updateView="updateView"     &gt;     &lt;/component&gt; &lt;/template&gt; &lt;script&gt;  import studentGrowthPortfolio from './studentGrowthPortfolio.vue';  //学生 index import fileDetails from './fileDetails.vue';  //成长档案 详情 export default {     data(){         return{             viewName:"studentGrowthPortfolio",         }     },     components:{         studentGrowthPortfolio,         fileDetails     },     mounted(){         this.viewName=this.$route.query.viewName?this.$route.query.viewName:this.viewName;     },     created () {     },     methods:{         /**          * 接收子组件数据          * @param data {Object}          * @return {Void} 无          */          updateView(name){              this.viewName = name              if(!name){                  this.$routePlugin.delQuery('viewName');              }else{                  this.$routePlugin.addQuery({viewName:name});              }          },     }, } &lt;/script&gt; &lt;style scoped lang="less"&gt;     @import "~@/libs/less/theme/theme.less";  &lt;/style&gt;</code></pre> <p>4、第二个：studentGrowthPortfolio.vue，点击查看需要执行的代码</p> <pre class="has"><code class="language-javascript">click: () =&gt; {         this.$emit("updateView","fileDetails");         this.$routePlugin.addQuery({                viewName:'fileDetails',                identity:'student'           })  }</code></pre> <p>5、第三个：fileDetails.vue，点击返回时需要执行的代码</p> <pre class="has"><code class="language-javascript">click:()=&gt;{      this.$emit('updateView', 'studentGrowthPortfolio') }</code></pre> <p>fileDetails.vue添加beforeDestoy，当离开当前组件时，销毁路由上的identity,和viewName参数</p> <p>beforeDestroy(){<!-- --></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.$routePlugin.delQuery('identity','viewName')</p> <p>&nbsp;},</p> <p>一切都ok了</p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1660.htm">Vue2.0 Vue路由 全局后置路由守卫</a></p>
                                                        <p>下一个：<a href="/html/category/article-1662.htm">探索 SocketChannel 的核心原理</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1870.htm" title="SpringBoot 简洁明了将导入Excel到数据库">SpringBoot 简洁明了将导入Excel到数据库</a></li>
                        <li class="py-2"><a href="/html/category/article-1872.htm" title="python数据可视化-matplotlib入门(5)-饼图和堆叠图">python数据可视化-matplotlib入门(5)-饼图和堆叠图</a></li>
                        <li class="py-2"><a href="/html/category/article-1937.htm" title="VScode离线安装插件的方法">VScode离线安装插件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1889.htm" title="win11系统照相机亮度怎么调节">win11系统照相机亮度怎么调节</a></li>
                        <li class="py-2"><a href="/html/category/article-1864.htm" title="springboot基础(6):整合ActiveMQ">springboot基础(6):整合ActiveMQ</a></li>
                        <li class="py-2"><a href="/html/category/article-1876.htm" title="python入门基础字典及相关操作详解">python入门基础字典及相关操作详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1867.htm" title="C ++ STL中的list_remove()和list remove_if()">C ++ STL中的list_remove()和list remove_if()</a></li>
                        <li class="py-2"><a href="/html/category/article-1965.htm" title="设置网页脚本动态顺序加载">设置网页脚本动态顺序加载</a></li>
                        <li class="py-2"><a href="/html/category/article-1861.htm" title="如何从javascript中的集合中删除所有元素？">如何从javascript中的集合中删除所有元素？</a></li>
                        <li class="py-2"><a href="/html/category/article-1888.htm" title="pandas 分批读取大量数据">pandas 分批读取大量数据</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>