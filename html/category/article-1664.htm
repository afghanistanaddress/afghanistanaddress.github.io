<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1664.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>k8s入门之PV和PVC - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">k8s入门之PV和PVC</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>某些应用是要持久化数据的，如果直接持久化在pod所在节点，当pod因为某种原因重建或被调度另外一台节点，是无法访问到之前持久化的数据，所以需要一个公共存储数据的地方，无论pod删除重建或重新调度到其他节点都能访问原来的数据，使用nfs就可以到达此目的。</p> <p><strong>一、安装nfs</strong></p> <p><strong>1.在k8sMaster主节点上安装nfs服务端</strong></p> <pre><code>apt install -y nfs-kernel-server systemctl start nfs-server systemctl enable nfs-server systemctl status nfs-server</code></pre> <p>查看安装后的状态为active</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/879cebab13db5835f7e4285ae6ae8dba.jpg" alt="k8s入门之PV和PVC"></p> <p>创建目录并设置权限</p> <pre><code>mkdir -p /nfs/data echo "/nfs/data/ *(insecure,rw,sync,no_root_squash)" &gt; /etc/exports</code></pre> <p>不要忘了重启nfs-server</p> <pre><code>systemctl restart nfs-server</code></pre> <p><strong>2.在两台k8sworker节点上安装nfs客户端</strong></p> <pre><code>apt install -y nfs-common mkdir -p /nfs/data # 把本地的/nfs/data挂载到主节点上 mount 192.168.59.110:/nfs/data /nfs/data</code></pre> <p><strong>3.测试</strong></p> <p>在某台worker节点上往目录中写入测试文件数据</p> <pre><code>echo "nfs data" &gt;&gt; /nfs/data/test.txt</code></pre> <p>在所有节点上都能查看到写入的数据，并且是一样的</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d0733bdecbdd9fe156711c05d2b1406c.jpg" alt="k8s入门之PV和PVC"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e757bc998a6abce471855a7a7ff5f10c.jpg" alt="k8s入门之PV和PVC"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7cb643e3c01a69386a74146eda1eea0b.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>二、使用原始方式挂载pod数据目录</strong></p> <p><strong>1.先删除之前dev名称空间下的所有资源</strong></p> <pre><code>kubectl delete ns dev</code></pre> <p><strong>2.把ns、deployment、svc资源的描述合并在一个yaml文件中</strong></p> <pre><code>vi nginx-deploy-svc.yaml</code></pre> <pre><code>apiVersion: v1 kind: Namespace metadata:   name: dev --- apiVersion: apps/v1 kind: Deployment metadata:   labels:     app: nginx   name: nginx   namespace: dev spec:   replicas: 3   selector:     matchLabels:       app: nginx   template:     metadata:       labels:         app: nginx     spec:       containers:       - image: nginx         name: nginx         volumeMounts:         - name: nginxvolume           mountPath: /usr/share/nginx/html       volumes:       - name: nginxvolume         #通过nfs服务挂载         nfs:           server: 192.168.59.110           # 此处要特别注意：一定要手动创建nginx子目录，否则pod在过载的时候会报目录不存在异常           path: /nfs/data/nginx --- apiVersion: v1 kind: Service metadata:   labels:     app: svc-nginx   name: svc-nginx   namespace: dev spec:   selector:     app: nginx   type: NodePort   ports:   - port: 8000     protocol: TCP     targetPort: 80</code></pre> <p><strong>3.创建资源对象</strong></p> <pre><code>kubectl apply -f nginx-deploy-svc.yaml</code></pre> <p>查看svc的ip与端口号</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/faa3957448e67853d2d9dc563fcc8224.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>4.测试</strong></p> <p>在挂载目录中创建index.html</p> <pre><code>echo "hello,nfs" &gt;&gt; /nfs/data/nginx/index.html</code></pre> <p>通过ip端口访问，可以看到读取的就是nfs目录中的内容</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c602dcb7183e54f2f1d553cdbfcc0edd.jpg" alt="k8s入门之PV和PVC"></p> <p>现在你可以把dev名称空间删除，然后重新创建这些资源，再次访问的时候，发现数据还在。</p> <p><strong>三、PV</strong></p> <p>PV：持久卷（Persistent Volume），将应用需要持久化的数据保存到指定位置，与namespace无关</p> <p><strong>1.先创建nfs目录</strong></p> <pre><code># 在master节点执行 mkdir -p /nfs/data/01 mkdir -p /nfs/data/02 mkdir -p /nfs/data/03</code></pre> <p><strong>2.创建基于nfs的pv对象</strong></p> <p>（1）创建pv资源文件</p> <pre><code>vi pv.yaml</code></pre> <p>（2）编写三个pv资源对象，大小分别是：10M，1G，5G</p> <pre><code>apiVersion: v1 kind: PersistentVolume metadata:   name: pv-10m spec:   capacity:     storage: 10M   accessModes:     - ReadWriteMany   storageClassName: nfs   nfs:     path: /nfs/data/01     server: 192.168.59.110 ---  apiVersion: v1 kind: PersistentVolume metadata:   name: pv-1gi spec:   capacity:     storage: 1Gi   accessModes:     - ReadWriteMany   storageClassName: nfs   nfs:     path: /nfs/data/02     server: 192.168.59.110 ---  apiVersion: v1 kind: PersistentVolume metadata:   name: pv-5gi spec:   capacity:     storage: 5Gi   accessModes:     - ReadWriteMany   storageClassName: nfs   nfs:     path: /nfs/data/03     server: 192.168.59.110</code></pre> <p>（3）创建pv对象</p> <pre><code>kubectl apply -f pv.yaml</code></pre> <p><strong>3.查看创建结果</strong></p> <pre><code>kubectl get pv</code></pre> <p>pv对象列表</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8db63d2059dd5b170077a57224fbbff2.jpg" alt="k8s入门之PV和PVC"></p> <p>某个pv对象的详细信息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/92b9f69416add6a9dff26473fdfb5e9c.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>四、PVC</strong></p> <p>PVC：持久卷申明（Persistent Volume Claim），申明需要使用的持久卷规格</p> <p><strong>1.创建pvc</strong></p> <p>（1）创建pvc资源文件</p> <pre><code>vi pvc.yaml</code></pre> <p>（2）编写pvc资源申明信息</p> <pre><code>kind: PersistentVolumeClaim apiVersion: v1 metadata:   name: nginx-pvc   namespace: dev spec:   accessModes:     - ReadWriteMany   resources:     requests:       # 申请200M的空间       storage: 200Mi   storageClassName: nfs</code></pre> <p>（3）创建pvc对象</p> <pre><code>kubectl apply -f pvc.yaml</code></pre> <p><strong>2.查看创建结果</strong></p> <pre><code>kubectl get pvc -owide -n dev</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/07ca156768fbf72114ce5488eb6e6c80.jpg" alt="k8s入门之PV和PVC"></p> <p>由于申请的是200M空间，可以看到k8s自定绑定到合适的pv对象上，即选择大小为1G的pv对象。</p> <p>再回过头来查看pv对象的绑定信息，可以看到已经和刚刚创建的pvc对象绑定了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/dbc7ee03eb3611855b59b650887914df.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>五、绑定pod与pvc</strong></p> <p><strong>1.创建新的yaml文件</strong></p> <p>（1）新建资源文件</p> <pre><code>vi nginx-dp-svc-pvc.yaml</code></pre> <p>（2）使用persistentVolumeClaim属性指定刚刚创建的nginx-pvc对象</p> <pre><code>apiVersion: v1 kind: Namespace metadata:   name: dev --- apiVersion: apps/v1 kind: Deployment metadata:   labels:     app: nginx   name: nginx   namespace: dev spec:   replicas: 3   selector:     matchLabels:       app: nginx   template:     metadata:       labels:         app: nginx     spec:       containers:       - image: nginx         name: nginx         volumeMounts:         - name: nginxvolume           mountPath: /usr/share/nginx/html       volumes:       - name: nginxvolume         # 使用pvc         persistentVolumeClaim:           claimName: nginx-pvc --- apiVersion: v1 kind: Service metadata:   labels:     app: svc-nginx   name: svc-nginx   namespace: dev spec:   selector:     app: nginx   type: NodePort   ports:   - port: 8000     protocol: TCP     targetPort: 80</code></pre> <p>（3）创建pod，svc对象</p> <pre><code>kubectl apply -f nginx-dp-svc-pvc.yaml</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ffc5f7f523bf11c8701b840fc7f2bdd2.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>2.测试</strong></p> <p>由于申请的是pvc是与名称为pv-1gi的pv对象绑定的，所以往/nfs/data/02文件夹中写入index.htm文件进行测试</p> <pre><code>echo "hello,pv" &gt;&gt; /nfs/data/02/index.html</code></pre> <p>使用ip访问服务，可以看到正确输出了内容</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f96076fb5aa52f923ffaa7dd68b24c73.jpg" alt="k8s入门之PV和PVC"></p> <p>再次查看pv,pvc信息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3e8c5c37d3f303aabc038d4fa75733f7.jpg" alt="k8s入门之PV和PVC"></p> <p><strong>3.删除pod</strong></p> <p>当删除pod，与之绑定的pvc对象也会被删除，pv对象的状态变成Released</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b5a8f726d0e5a1b4cabd708888c9f8bf.jpg" alt="k8s入门之PV和PVC"></p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1663.htm">vue中给buttion按钮添加键盘回车（enter）事件</a></p>
                                                        <p>下一个：<a href="/html/category/article-1665.htm">检测IP地址的正则表达式</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1896.htm" title="一、重写了equals为什么还要重写hashcode">一、重写了equals为什么还要重写hashcode</a></li>
                        <li class="py-2"><a href="/html/category/article-1906.htm" title="Java Random随机数">Java Random随机数</a></li>
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-4305.htm" title="同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）">同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）</a></li>
                        <li class="py-2"><a href="/html/category/article-4334.htm" title="和田宠物医院污水处理方案 和田宠物医院污水处理方案公示">和田宠物医院污水处理方案 和田宠物医院污水处理方案公示</a></li>
                        <li class="py-2"><a href="/html/category/article-4304.htm" title="有什么出售宠物的app（有没有专业出售宠物的平台）">有什么出售宠物的app（有没有专业出售宠物的平台）</a></li>
                        <li class="py-2"><a href="/html/category/article-1909.htm" title="Redis的高并发是如何支持的">Redis的高并发是如何支持的</a></li>
                        <li class="py-2"><a href="/html/category/article-3767.htm" title="vue &#8211; vue基础/vue核心内容（2）_在线工具">vue &#8211; vue基础/vue核心内容（2）_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-1924.htm" title="js制作简易秒表效果详细讲解、开始、暂停与结束（定时器制作和时间戳制作）">js制作简易秒表效果详细讲解、开始、暂停与结束（定时器制作和时间戳制作）</a></li>
                        <li class="py-2"><a href="/html/category/article-3134.htm" title="SpringMVC-@RequestMapping注解">SpringMVC-@RequestMapping注解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>