<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1682.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>C#中检查null的语法糖_在线工具 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">C#中检查null的语法糖_在线工具</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>今天看到已经更新了devblogs，新增的C# 11的!!（用于检查null的语法）经过非常长的讨论，最后取消了。然后我又想起来null检查，这个可以说一说。</p> <h2 id="函数参数null检查">函数参数null检查</h2> <h3 id="传统写法">传统写法</h3> <p>写一个函数的时候，最经典的检查，估计也是大家最常使用的null检查，应该是这样的吧：</p> <pre><code class="language-c#">public static void GetV1(string prompt) {     if (prompt is null) throw new ArgumentNullException(nameof(prompt));     Console.WriteLine(prompt); } </code></pre> <h3 id="throwifnull">ThrowIfNull</h3> <p>这个写起来也没啥问题，但是总觉得有点不舒适。.NET 6在<code>ArgumentNullException</code>中新增了<code>ThrowIfNull</code>方法，可以写的更优雅一点。</p> <pre><code class="language-c#">public static void GetV2(string prompt) {     ArgumentNullException.ThrowIfNull(prompt);     Console.WriteLine(prompt); }  </code></pre> <p>异常的时候，就会出现：<code>System.ArgumentNullException: 'Value cannot be null. (Parameter 'prompt')'</code>。这个是不是简单了点？可是还是需要写一行。</p> <h3 id="c-11的语法已经取消">C# 11的!!语法（已经取消）</h3> <p>C# 11刚preview的时候，我就瞄到了这个特性，现在依然可以通过设置<langversion>preview</langversion>来进行启用，但是以后正式发布估计就不行了。</p> <p>它通过在参数后面叠加!!表示此参数不可为空，运行时会自动进行检查，如果是null就直接弹出错误。</p> <pre><code class="language-c#">public static void GetV3(string prompt!!) {     Console.WriteLine(prompt); } </code></pre> <p>这个代码会被编译器翻译成：</p> <pre><code class="language-C#">public static void GetV3(string prompt!!) {     if (prompt is null) {         throw new ArgumentNullException(nameof(prompt));     }     Console.WriteLine(prompt); } </code></pre> <p>这样大家就可以专注于业务代码，不需要经常考虑异常检查了。至于为什么这个东西最后还是被删除了，可以从讨论中看到一丝端倪，首先是感觉非常纠结于这个语法，两个叹号；然后就是已经有比较多的方式可以实现检查了，这个东西是否有必要。反正最终是以后再讨论了，不过也可以看出来C#语言工作组对语言的特性讨论非常谨慎。</p> <p>他们还讨论了很多别的形式，每种都提出了各自的优缺点挺有意思的，能看出来有一点设计语言的严谨和小强迫症在，点赞~</p> <pre><code>void M(string s!!); void M(string! s); void M(string s!); void M(notnull string s); void M(string s ?? throw); void M(string s is not null); void M(checked string s); void M(string s) where s is not null; </code></pre> <h2 id="有关null的一些操作">有关null的一些操作</h2> <p>说起这个，就顺便说说c#处理null的另外几个语法糖吧。</p> <h3 id="">??</h3> <p>如果左边是的null，那么返回右边的操作数，否则就返回左边的操作数，这个在给变量赋予默认值非常好用。</p> <pre><code class="language-c#">int? a = null; int b = a ?? -1; Console.WriteLine(b);  // output: -1 </code></pre> <h3 id="-1">??=</h3> <p>当左边是null，那么就对左边的变量赋值成右边的</p> <pre><code class="language-C#">int? a = null; a ??= -1; Console.WriteLine(a);  // output: -1 </code></pre> <h3 id="-2">?.</h3> <p>当左边是null，那么不执行后面的操作，直接返回空，否则就返回实际操作的值。</p> <pre><code class="language-c#">using System; public class C {     public static void Main() {         string i = null;         int? length = i?.Length;         Console.WriteLine(length ?? -1); //output: -1     } } </code></pre> <h3 id="-3">?[]</h3> <p>索引器操作，和上面的操作类似</p> <pre><code class="language-c#">using System; public class C {     public static void Main() {         string[] i = null;         string result = i?[1];         Console.WriteLine(result ?? "null"); // output:null     } } </code></pre> <blockquote> <p>注意，如果链式使用的过程中，只要前面运算中有一个是null，那么将直接返回null结果，不会继续计算。下面两个操作会有不同的结果。</p> <pre><code class="language-c#">using System; public class C {     public static void Main() {         string[] i = null;         Console.WriteLine(i?[1]?.Substring(0).Length); //不弹错误         Console.WriteLine((i?[1]?.Substring(0)).Length) // System.NullReferenceException: Object reference not set to an instance of an object.     } } </code></pre> </blockquote> <h2 id="一些操作">一些操作</h2> <pre><code class="language-c#">//参数给予默认值 if(x == null) x = "str"; //替换 x ??= "str";   //条件判断 string x; if(i<3)      x = y; else  {       if(z != null) x = z;      else z = "notnull"; } //替换 var x = i < 3 ? y : z ?? "notnull"   //防止对象为null的时候，依然执行代码 if(obj != null)      obj.Act(); //替换 obj?.Act();  //Dictionary取值与赋值 string result; if(dict.ContainKey(key)) {     if(dict[key] == null) result = "有结果为null";     else result = dict[key]; } else      result = "无结果为null"; //替换 var result= dict.TryGetValue(key, out var value) ? value ?? "有结果为null" : "无结果为null"; </code></pre> <h2 id="结语">结语</h2> <p>原来新定的C# 11提供了一个新的??，话说我个人还是挺喜欢这个特性的，不管以什么形式出现吧，期待以后再见。</p> <blockquote> <p>C#中为了处理null给我们准备了许多的语法糖，只能说非常简便了。有很多人会说这个可读性不好，或者觉得这是“茴字的几种写法”似的歪门邪道，我只能说，传统的语法也不是说取消了，语言有发展，只要还是比较审慎的，我觉得还是一件好事。</p> </blockquote> <h2 id="参考资料">参考资料</h2> <ul> <li>https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-</li> <li>https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/null-coalescing-operator</li> </ul> <h2 id="后记">后记</h2> <p>一定要夸一下博客园，写完这篇文章想登陆博客园发布的时候，被登陆卡住了。弹出来和google一样的验证画面，找红绿灯找人行横道什么的，只能说我找了几分钟也没找明白，我确信我已经点的正确了，所有的区块，占上了有一点算不算？不知道也没有反馈，就点呀点呀，密码我已经按照要求设置的够复杂了，还有必要通过这种反人类的东西来验证吗？不理解，京东阿里之类的购物网站的验证也就拖一下完事，这博客园的后台估计比那些个地方还要敏感吧，赞一个！太赞了！</p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1681.htm">这几种方法帮你快速实现回到页面顶部</a></p>
                                                        <p>下一个：<a href="/html/category/article-1683.htm">vue3.0下如何使用mapState，mapGetters和mapActions</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7409.htm" title="学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）">学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-4491.htm" title="宠物医院治仓鼠吗（宠物医院治仓鼠的病吗）">宠物医院治仓鼠吗（宠物医院治仓鼠的病吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6204.htm" title="宠物粮食市场营销调查问卷 宠物粮食市场营销调查问卷模板">宠物粮食市场营销调查问卷 宠物粮食市场营销调查问卷模板</a></li>
                        <li class="py-2"><a href="/html/category/article-6995.htm" title="宠物粮食生产配方表最新（宠物粮的配方）">宠物粮食生产配方表最新（宠物粮的配方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6116.htm" title="被猫挠出血了过24小时了（被猫挠出血了过24小时了没打针）">被猫挠出血了过24小时了（被猫挠出血了过24小时了没打针）</a></li>
                        <li class="py-2"><a href="/html/category/article-5940.htm" title="北京宠物店兼职（北京宠物医院兼职）">北京宠物店兼职（北京宠物医院兼职）</a></li>
                        <li class="py-2"><a href="/html/category/article-7132.htm" title="法内情2002（袁咏仪法内情国语第一集）">法内情2002（袁咏仪法内情国语第一集）</a></li>
                        <li class="py-2"><a href="/html/category/article-6811.htm" title="猫咪多长时间做一次体内外驱虫啊（猫咪多长时间驱虫）">猫咪多长时间做一次体内外驱虫啊（猫咪多长时间驱虫）</a></li>
                        <li class="py-2"><a href="/html/category/article-6160.htm" title="饲料加盟免费代理鱼饲料（鱼饲料加工厂加盟）">饲料加盟免费代理鱼饲料（鱼饲料加工厂加盟）</a></li>
                        <li class="py-2"><a href="/html/category/article-6581.htm" title="同城宠物狗免费领养在哪里（有没有同城领养宠物的小程序）">同城宠物狗免费领养在哪里（有没有同城领养宠物的小程序）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">14</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>