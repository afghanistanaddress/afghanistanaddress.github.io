<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1685.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Android基础——动态加载so库 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Android基础——动态加载so库</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> Android中动态加载so</h1> <p>原因：如果把so文件直接放在libs目录下，在android程序启动的时候会默认加载libs目录下的所有so库，但这些so库可能会在某些地方存在冲突，使用动态加载so库，就可以通过一些条件判断是否要加载这个so库。<br /> 介绍：so的动态加载是把so库打包成apk的时候剔除，在合适的时候通过网络包下载的方式，在运行的时候进行分离加载。<br /> 优点：so文件是动态加载的，不是绑定死的，更便于修改，在so库有问题的时候可以动态更新；<br /> so库文件动态加载可以极大地减小apk包的体积；<br /> 解决多个第三方库文件同时加载可能出现冲突的问题。</p> <h2> 一、Android的so库文件的加载</h2> <ol> <li>Android中加载so：<br /> （1）调用load()方法，传递so文件的绝对路径；<br /> （2）调用loadLibrary()方法，传递so文件的名称，而且so文件必须放在apk的lib目录下，而且so的名称必须去掉前面的lib和后边的“.so”。<br /> 只能加载两个目录下的so文件：<br /> （1）/system/lib<br /> （2）应用程序安装包的路径：/data/data/packgename/…<br /> 对于两种加载so文件的方法，在Android源码System.java中可以看到<br />源码链接 </li> </ol> <pre><code class="prism language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> filename<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load0</span><span class="token punctuation">(</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <pre><code class="prism language-java">        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token class-name">String</span> libname<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadLibrary0</span><span class="token punctuation">(</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> libname<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <ol start="2"> <li>上边两种方法都调用了Runtime中的getRuntime函数，用来获取Runtime的实例<br />源码链接 </li> </ol> <pre><code class="prism language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Runtime</span> <span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> currentRuntime<span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <ol start="3"> <li>在加载so时也调用了loadLibrary0方法<br />源码链接<br /> 在loadLibrary0中可以看到根据ClassLoader是否为空，有两种不同的处理形式。</li> </ol> <pre><code class="prism language-java">    <span class="token keyword">private</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">loadLibrary0</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation"><</span><span class="token operator">?</span><span class="token punctuation">></span></span> callerClass<span class="token punctuation">,</span> <span class="token class-name">String</span> libname<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>libname<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">File</span><span class="token punctuation">.</span>separatorChar<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsatisfiedLinkError</span><span class="token punctuation">(</span>     <span class="token string">"Directory separator should not appear in library name: "</span> <span class="token operator">+</span> libname<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token class-name">String</span> libraryName <span class="token operator">=</span> libname<span class="token punctuation">;</span>         <span class="token comment">//ClassLoader不为空时（程序中通过System.loadlibrary()方式，这个loader就不会为空）</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>loader <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&&</span> <span class="token operator">!</span><span class="token punctuation">(</span>loader <span class="token keyword">instanceof</span> <span class="token class-name">BootClassLoader</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">//通过ClassLoader的findLibrary方法查找so的文件名称，寻找so文件是否存在</span>             <span class="token class-name">String</span> filename <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">findLibrary</span><span class="token punctuation">(</span>libraryName<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//判断，如果未找到so文件，并且类加载器存在</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>filename <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&&</span>                     <span class="token punctuation">(</span>loader<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">PathClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">||</span>                      loader<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">DelegateLastClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 filename <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">mapLibraryName</span><span class="token punctuation">(</span>libraryName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//拼接so文件名</span>             <span class="token punctuation">}</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>filename <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsatisfiedLinkError</span><span class="token punctuation">(</span>loader <span class="token operator">+</span> <span class="token string">" couldn't find \""</span> <span class="token operator">+</span>                                                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">mapLibraryName</span><span class="token punctuation">(</span>libraryName<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token comment">//so文件存在，加载它</span>             <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token function">nativeLoad</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">//加载异常，加载失败</span>                 <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsatisfiedLinkError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token comment">//ClassLoader为空时，传入library name和System.mapLibraryName获得真正的library name。</span>         <span class="token comment">//具体深入的实现过程，可以到Android源码继续查看getLibPaths()和mapLibraryName的实现</span>         <span class="token function">getLibPaths</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">String</span> filename <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">mapLibraryName</span><span class="token punctuation">(</span>libraryName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//mapLibraryName用于拼接so文件名的前缀:lib和后缀.so</span>         <span class="token comment">//例如传入的是wudong，得到的就会是libwudong.so,然后在mLibPaths查找'libwudong.so'，最终确定library的path。</span>         <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token function">nativeLoad</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> loader<span class="token punctuation">,</span> callerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span><span class="token comment">//加载异常</span>             <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsatisfiedLinkError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ol start="4"> <li>在查找so文件的过程中，调用了loader.findLibrary的方法去寻找so文件，如果可以找到，会返回so文件的绝对路径，然后交由nativeLoad()去加载。</li> </ol> <h2> 二、实现so的动态加载</h2> <p>1.首先把so库放在assets资源目录下，一般会放两个so库，一个32位一个64位的；<br /> 2.动态加载，就是在需要使用的时候，从assets资源目录下复制到app/libs目录下；<br /> 3.通过 System.load(String filename) 或者 System.loadLibrary(String libname) 方法去加载 so。<br /> ·在so原本的加载过程中，是系统通过ClassLoader检索native目录里是否存在so库进行加载的，那就需要把下载存放so的路径添加到ClassLoader的libs路径里，这些libs路径在app启动的时候就已经生成了，那就需要利用反射，在运行时把路径添加进去。</p> <h5> 将存放so的路径放到ClassLoader中</h5> <p>利用反射将存放so的路径放到ClassLoader中，开源项目tinker的TinkerLoadLibrary也有实现发方法，我们就不用自己实现了，可以拿过来直接使用。</p> <pre><code class="prism language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> V25 <span class="token punctuation">{<!-- --></span>         <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">,</span> <span class="token class-name">File</span> folder<span class="token punctuation">)</span>  <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">final</span> <span class="token class-name">Field</span> pathListField <span class="token operator">=</span> <span class="token class-name">ShareReflectUtil</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> <span class="token string">"pathList"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">final</span> <span class="token class-name">Object</span> dexPathList <span class="token operator">=</span> pathListField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">final</span> <span class="token class-name">Field</span> nativeLibraryDirectories <span class="token operator">=</span> <span class="token class-name">ShareReflectUtil</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> <span class="token string">"nativeLibraryDirectories"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span> origLibDirs <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> nativeLibraryDirectories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>origLibDirs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 origLibDirs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation"><</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">final</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span> libDirIt <span class="token operator">=</span> origLibDirs<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">while</span> <span class="token punctuation">(</span>libDirIt<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">final</span> <span class="token class-name">File</span> libDir <span class="token operator">=</span> libDirIt<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>folder<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>libDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     libDirIt<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">break</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>             origLibDirs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> folder<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">final</span> <span class="token class-name">Field</span> systemNativeLibraryDirectories <span class="token operator">=</span> <span class="token class-name">ShareReflectUtil</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> <span class="token string">"systemNativeLibraryDirectories"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span> origSystemLibDirs <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> systemNativeLibraryDirectories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>origSystemLibDirs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 origSystemLibDirs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation"><</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>              <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">File</span><span class="token punctuation">></span></span> newLibDirs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation"><</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>origLibDirs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> origSystemLibDirs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             newLibDirs<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>origLibDirs<span class="token punctuation">)</span><span class="token punctuation">;</span>             newLibDirs<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>origSystemLibDirs<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">final</span> <span class="token class-name">Method</span> makeElements <span class="token operator">=</span> <span class="token class-name">ShareReflectUtil</span><span class="token punctuation">.</span><span class="token function">findMethod</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> <span class="token string">"makePathElements"</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> makeElements<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> newLibDirs<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">final</span> <span class="token class-name">Field</span> nativeLibraryPathElements <span class="token operator">=</span> <span class="token class-name">ShareReflectUtil</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> <span class="token string">"nativeLibraryPathElements"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             nativeLibraryPathElements<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>dexPathList<span class="token punctuation">,</span> elements<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>这样路径就可以添加进ClassLoader的nativeLibraryDirectories中了。</p> </p></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1684.htm">React+ts 中定义事件声明类型</a></p>
                                                        <p>下一个：<a href="/html/category/article-1686.htm">vuecli中npm run lint 报错</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7776.htm" title="南京领养猫咪的平台（南京猫猫领养中心）">南京领养猫咪的平台（南京猫猫领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-6764.htm" title="动物医院实践心得500字怎么写的 动物医院实践心得500字怎么写的啊">动物医院实践心得500字怎么写的 动物医院实践心得500字怎么写的啊</a></li>
                        <li class="py-2"><a href="/html/category/article-7501.htm" title="三生三世枕上书男女主什么时候在一起（一看就会）">三生三世枕上书男女主什么时候在一起（一看就会）</a></li>
                        <li class="py-2"><a href="/html/category/article-7455.htm" title="动物打一针疫苗多少钱啊（动物打疫苗的作用）">动物打一针疫苗多少钱啊（动物打疫苗的作用）</a></li>
                        <li class="py-2"><a href="/html/category/article-7179.htm" title="被家猫抓伤轻微出血伤口有点疼要紧吗（被家猫抓伤出了一点点血）">被家猫抓伤轻微出血伤口有点疼要紧吗（被家猫抓伤出了一点点血）</a></li>
                        <li class="py-2"><a href="/html/category/article-6856.htm" title="扬州宠物店在什么地方（扬州宠物店在什么地方开）">扬州宠物店在什么地方（扬州宠物店在什么地方开）</a></li>
                        <li class="py-2"><a href="/html/category/article-7271.htm" title="想开宠物店需要多少钱（我想开个宠物店大概的多少钱）">想开宠物店需要多少钱（我想开个宠物店大概的多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-6857.htm" title="上海宠物领养中心地址电话号码查询（上海的宠物领养中心）">上海宠物领养中心地址电话号码查询（上海的宠物领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-7362.htm" title="新相亲时代 李丹（万万没想到）">新相亲时代 李丹（万万没想到）</a></li>
                        <li class="py-2"><a href="/html/category/article-7317.htm" title="宠物领养网页设计图片素材（宠物领养网站源码）">宠物领养网页设计图片素材（宠物领养网站源码）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>