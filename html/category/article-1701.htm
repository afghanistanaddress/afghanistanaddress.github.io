<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1701.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>java学习 枚举和注解 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">java学习 枚举和注解</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>java学习----枚举和注解</h3> <ul> <li><a href="#_1" rel="nofollow">枚举</a></li> <li> <ul> <li><a href="#_2" rel="nofollow">自定义类实现枚举</a></li> <li><a href="#enum_47" rel="nofollow">使用enum关键字实现枚举</a></li> <li><a href="#enum_91" rel="nofollow">enum常用方法举例</a></li> <li><a href="#_119" rel="nofollow">使用细节</a></li> </ul> </li> <li><a href="#_126" rel="nofollow">注解</a></li> <li> <ul> <li><a href="#_127" rel="nofollow">注解的理解</a></li> <li><a href="#_192" rel="nofollow">元注解</a></li> <li> <ul> <li><a href="#Retention__201" rel="nofollow">@Retention 注解</a></li> <li><a href="#Documented_212" rel="nofollow">@Documented</a></li> </ul> </li> </ul> </li> </ul> </div> <h1><a id="_1" rel="nofollow"></a>枚举</h1> <h2><a id="_2" rel="nofollow"></a>自定义类实现枚举</h2> <p><strong>步骤：</strong><br /> 1.不需要提供setxxx方法，因为枚举对象的属性只需读。</p> <p>2.对枚举对象使用 final + static修饰，实现底层优化。</p> <p>3.枚举对象名通常全部使用大写，这是一个命名规范。</p> <p>4.构造器私有化，但是对象向外暴露。</p> <pre><code class="prism language-javascript"><span class="token keyword">package</span> Enum<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">DefineMyself</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">String<span class="token punctuation">[</span><span class="token punctuation">]</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Season<span class="token punctuation">.</span><span class="token constant">SPRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Season<span class="token punctuation">.</span><span class="token constant">SUMMER</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span><span class="token class-name">Season</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token keyword">private</span> String weather<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span> final Season<span class="token constant">SPRING</span><span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"春天"</span><span class="token punctuation">,</span><span class="token string">"温暖"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span> final Season<span class="token constant">SUMMER</span><span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"夏天"</span><span class="token punctuation">,</span><span class="token string">"炎热"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token function">Season</span><span class="token punctuation">(</span><span class="token parameter">String name<span class="token punctuation">,</span> String weather</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>weather<span class="token operator">=</span> weather<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> weather<span class="token punctuation">;</span><span class="token punctuation">}</span>      @Override<span class="token keyword">public</span> String<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token string">"Season{"</span><span class="token operator">+</span><span class="token string">"name='"</span><span class="token operator">+</span> name<span class="token operator">+</span><span class="token string">'\''</span><span class="token operator">+</span><span class="token string">", weather='"</span><span class="token operator">+</span> weather<span class="token operator">+</span><span class="token string">'\''</span><span class="token operator">+</span><span class="token string">'}'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h2><a id="enum_47" rel="nofollow"></a>使用enum关键字实现枚举</h2> <blockquote> <p>1.但我们使用enum关键字来创建一个枚举类时，默认会继承Enum类，同时该类使用了final修饰。</p> </blockquote> <blockquote> <p>2.传统的 public static final Season SPRING = new Season(“春天”,“温暖”); 变成了SPRING(“春天”,“温暖”),我们要注意它调用的是哪一个构造器。</p> </blockquote> <blockquote> <p>3.如果调用的是无参构造器创建的枚举对象，则实参列表和小括号都可以省略。</p> </blockquote> <blockquote> <p>枚举对象必须放在枚举类的首行。</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">package</span> Enum<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">DefineMyself</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">String<span class="token punctuation">[</span><span class="token punctuation">]</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Season<span class="token punctuation">.</span><span class="token constant">SPRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Season<span class="token punctuation">.</span><span class="token constant">SUMMER</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">enum</span> Season<span class="token punctuation">{<!-- --></span><span class="token constant">SPRING</span><span class="token punctuation">(</span><span class="token string">"春天"</span><span class="token punctuation">,</span><span class="token string">"温暖"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">SUMMER</span><span class="token punctuation">(</span><span class="token string">"夏天"</span><span class="token punctuation">,</span><span class="token string">"炎热"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> String name<span class="token punctuation">;</span><span class="token keyword">public</span> String weather<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token function">Season</span><span class="token punctuation">(</span><span class="token parameter">String name<span class="token punctuation">,</span> String weather</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>weather<span class="token operator">=</span> weather<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> weather<span class="token punctuation">;</span><span class="token punctuation">}</span>      @Override<span class="token keyword">public</span> String<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token string">"Season{"</span><span class="token operator">+</span><span class="token string">"name='"</span><span class="token operator">+</span> name<span class="token operator">+</span><span class="token string">'\''</span><span class="token operator">+</span><span class="token string">", weather='"</span><span class="token operator">+</span> weather<span class="token operator">+</span><span class="token string">'\''</span><span class="token operator">+</span><span class="token string">'}'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>注意使用enum关键字创建枚举类时对象依然有 static 和 final 修饰<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/77e922b4517082740b819b1091ee10b7.jpg" alt="java学习 枚举和注解"></p> <h2><a id="enum_91" rel="nofollow"></a>enum常用方法举例</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/c53288b3dabbf05c560994c1d40aa541.jpg" alt="java学习 枚举和注解"><br /> values : 返回当前枚举类中的所有常量。返回的是一个数组。</p> <pre><code class="prism language-javascript"><span class="token keyword">class</span><span class="token class-name">Untitled</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">String<span class="token punctuation">[</span><span class="token punctuation">]</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		Season season<span class="token operator">=</span> Season<span class="token punctuation">.</span><span class="token constant">SPRING</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>season<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>season<span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出0</span> 		Season<span class="token punctuation">[</span><span class="token punctuation">]</span> seasons<span class="token operator">=</span> Season<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>Season s1<span class="token operator">:</span> seasons<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出SPRING和SUMMER</span><span class="token punctuation">}</span> 		Season value<span class="token operator">=</span> Season<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"SPRING"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出SPRING</span> 		System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>season<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>Season<span class="token punctuation">.</span><span class="token constant">SUMMER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0-1=-1，输出-1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">enum</span> Season<span class="token punctuation">{<!-- --></span><span class="token constant">SPRING</span><span class="token punctuation">(</span><span class="token string">"春天"</span><span class="token punctuation">,</span><span class="token string">"温暖"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">SUMMER</span><span class="token punctuation">(</span><span class="token string">"夏天"</span><span class="token punctuation">,</span><span class="token string">"炎热"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token keyword">private</span> String weather<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token function">Season</span><span class="token punctuation">(</span><span class="token parameter">String name<span class="token punctuation">,</span>String weather</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>weather<span class="token operator">=</span> weather<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h2><a id="_119" rel="nofollow"></a>使用细节</h2> <p>1.使用enum关键字后，就不能再继承其他类了，因为enum会隐式继承Enum,而JAVA是单继承机制。</p> <p>2.枚举类和普通类一样，可以实现接口。</p> <pre><code class="prism language-javascript"><span class="token keyword">enum</span> 类名<span class="token keyword">implements</span> 接口<span class="token number">1</span>，接口<span class="token number">2</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h1><a id="_126" rel="nofollow"></a>注解</h1> <h2><a id="_127" rel="nofollow"></a>注解的理解</h2> <blockquote> <p>注解（Annotation）也被称为元数据，用于修饰解释，包，类，方法，属性，构造器，局部变量的数据信息。</p> </blockquote> <blockquote> <p>和注释一样，不影响程序的逻辑，但注解可以被编译和运行，相当于嵌入在代码中的补充信息。</p> </blockquote> <p>使用Annotation时要在前面加@符号，并把Annotation当成修饰符使用，用于修饰它支持的程序元素。</p> <p><strong>三个基本的Annotation:</strong><br /> 1.@Override :限定某个方法，是重写父类方法，该注解只能用于方法。</p> <p>说明：如果使用了@Override，则接下来的方法必须重写父类方法，如果没有，那么编译器会报错。</p> <pre><code class="prism language-javascript"><span class="token comment">//@Override的源码</span> @<span class="token function">Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span> @<span class="token function">Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span><span class="token constant">SOURCE</span><span class="token punctuation">)</span><span class="token keyword">public</span> @<span class="token keyword">interface</span><span class="token class-name">Override</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span></code></pre> <p>注意：@interface表示一个注解类，不是接口。<br /> @Target是修饰注解的注解，称为元注解。</p> <p>2.@Deprecated : 用于表示某个程序元素(类，方法等)已经过时。</p> <pre><code class="prism language-javascript"><span class="token keyword">package</span> annotation_<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">deprecated_</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">String<span class="token punctuation">[</span><span class="token punctuation">]</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//A上出现一个横线，表示过时，不推荐使用，但是仍可以使用</span><span class="token constant">A</span> a<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span> @Deprecated<span class="token keyword">class</span><span class="token class-name">A</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span> int n1<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>@Deprecated可以用作JDK新旧版本的兼容和过渡使用。</p> <p>3.@SuppressWarnings : 抑制编译器警告。</p> <pre><code class="prism language-javascript"><span class="token keyword">package</span> annotation_<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span> @<span class="token function">SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token string">"all"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">SuppressWarnings_</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">String<span class="token punctuation">[</span><span class="token punctuation">]</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>         List list<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"jack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//作用的类型TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE</span><span class="token comment">//可以传入一个数组</span><span class="token comment">/* @Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE}) @Retention(RetentionPolicy.SOURCE) public @interface SuppressWarnings {     String[] value(); }  */</span></code></pre> <h2><a id="_192" rel="nofollow"></a>元注解</h2> <p>JDK 的元 Annotation 用于修饰其他 Annotation，可以增强对源代码的理解</p> <p><strong>元注解的种类：</strong></p> <p>(1) Retention //指定注解的作用范围，三种 SOURCE,CLASS,RUNTIME<br /> (2) Target // 指定注解可以在哪些地方使用<br /> (3) Documented //指定该注解是否会在 javadoc 体现<br /> (4) Inherited //子类会继承父类注解</p> <h3><a id="Retention__201" rel="nofollow"></a>@Retention 注解</h3> <blockquote> <p>说明只能用于修饰一个 Annotation 定义, 用于指定该 Annotation 可以保留多长时间, @Rentention 包含一个 RetentionPolicy 类型的成员变量, 使用 @Rentention 时必须为该 value 成员变量指定值:</p> </blockquote> <p>@Retention 的三种值<br /> (1) RetentionPolicy.SOURCE: 编译器使用后，直接丢弃这种策略的注释</p> <p>(2) RetentionPolicy.CLASS: 编译器将把注解记录在 class 文件中. 当运行 Java 程序时, JVM 不会保留注解。 这是默认值</p> <p>(3) RetentionPolicy.RUNTIME:编译器将把注解记录在 class 文件中. 当运行 Java 程序时, JVM 会保留注解. 程序可以 通过反射获取该注解</p> <h3><a id="Documented_212" rel="nofollow"></a>@Documented</h3> <blockquote> <p>用于指定被元注解修饰的注解类将被javadoc工具提取成文档，即在生成文档时，可以看到该注解。</p> </blockquote> <p>定义Documented的注解的Rentention必须设置为RUNTIME</p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1700.htm">Python 查找算法_众里寻他千百度，蓦然回首那人却在灯火阑珊处（线性、二分，分块、插值查找算法)</a></p>
                                                        <p>下一个：<a href="/html/category/article-1702.htm">js下拉列表二级联动</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2541.htm" title="Spring Cloud Feign 分析之FeignClient注解实现版本兼容">Spring Cloud Feign 分析之FeignClient注解实现版本兼容</a></li>
                        <li class="py-2"><a href="/html/category/article-4080.htm" title="python的collections.Counter方法">python的collections.Counter方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1884.htm" title="Springboot：拦截器和过滤器">Springboot：拦截器和过滤器</a></li>
                        <li class="py-2"><a href="/html/category/article-3435.htm" title="SpringMVC之@RequestMapping注解">SpringMVC之@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-1898.htm" title="Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]">Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]</a></li>
                        <li class="py-2"><a href="/html/category/article-1952.htm" title="深入理解Spring的@Order注解和Ordered接口">深入理解Spring的@Order注解和Ordered接口</a></li>
                        <li class="py-2"><a href="/html/category/article-1937.htm" title="VScode离线安装插件的方法">VScode离线安装插件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1903.htm" title="基于JDK的动态代理原理分析">基于JDK的动态代理原理分析</a></li>
                        <li class="py-2"><a href="/html/category/article-3742.htm" title="SpringBoot之HandlerInterceptor拦截器的使用">SpringBoot之HandlerInterceptor拦截器的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-1902.htm" title="树的同构（java实现）">树的同构（java实现）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>