<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1751.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>详谈GoLang的panic和error - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">详谈GoLang的panic和error</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p>首先说一下：&nbsp;错误指的是可能出现问题的地方出现了问题。如打开件失败，这种情况在意料之中 。异常指的是不应该出现问题的地方出现了问题。如引用了空指针，这种情况在意料之外</p> <p><code>Go</code>&nbsp;提供两种错误处理方式</p> <ul> <li>函数返回&nbsp;<code>error</code>&nbsp;类型对象判断错误</li> <li> <code>panic</code>&nbsp;异常</li> </ul> <h2>1. panic</h2> <p>Go的类型系统会在编译时捕获很多错误，但有些错误只能在运行时检查，如数组访问越界、空指针引用等。这些运行时错误会引起painc异常。</p> <p>一般而言，<strong>当panic异常发生时，程序会中断运行，并立即执行在该goroutine（可以先理解成线程）中被延迟的函数（defer 机制）</strong>。随后，程序崩溃并输出日志信息。日志信息包括panic value和函数调用的堆栈跟踪信息。panic value通常是某种错误信息。对于每个goroutine，日志信息中都会有与之相对的，发生panic时的函数调用堆栈跟踪信息。通常，我们不需要再次运行程序去定位问题，日志信息已经提供了足够的诊断依据。因此，在我们填写问题报告时，一般会将panic异常和日志信息一并记录。不是所有的panic异常都来自运行时，直接调用内置的panic函数也会引发panic异常；panic函数接受任何值作为参数。当某些不应该发生的场景发生时，我们就应该调用panic。虽然Go的panic机制类似于其他语言的异常，但panic的适用场景有一些不同。<strong>由于panic会引起程序的崩溃，因此panic一般用于严重错误</strong>，如程序内部的逻辑不一致。</p> <p><code>panic</code>可以手工调用，但是&nbsp;<code>Go</code>&nbsp;官方建议尽量不要使用<code>panic</code>，每一个异常都应该用&nbsp;<code>error</code>&nbsp;对象捕获。如果异常出现了，但没有被捕获并恢复，<code>Go</code>&nbsp;程序的执行就会被终止，即便出现异常的位置不在主&nbsp;<code>Goroutine</code>&nbsp;中也会这样。</p> <p>总结来说：</p> <p>panic是一个严重错误机制，它会导致程序终止，并<strong>依次逆序执行 panic 所在函数可能存在的 defer 函数列表</strong>，然后返回该函数的调用方。<strong>recover 内置函数可用于捕获 panic，重新恢复程序正常执行流程，但是 recover 函数只有在 defer 内部使用才有效</strong></p> <p><strong>此外，</strong>当&nbsp;<code>panic()</code>&nbsp;触发的宕机发生时，&nbsp;<code>panic()</code>&nbsp;后面的代码将不会被运行，但是在&nbsp;<code>panic()</code>&nbsp;函数前面已经运行过的&nbsp;<code>defer</code>&nbsp;语句依然会在宕机发生时发生作用</p> <h2>2. recover</h2> <p>1. <code>recover</code>&nbsp;是一个&nbsp;<code>Go</code>&nbsp;语言的内建函数，可以让进入宕机流程中的&nbsp;<code>goroutine</code>&nbsp;恢复过来。<br /> 2. 用来控制一个goroutine的panicking行为，捕获panic，从而影响应用的行为<br /> 3. 一般的调用建议<br /> a). 在defer函数中，通过recever来终止一个gojroutine的panicking过程，从而恢复正常代码的执行<br /> b). 可以获取通过panic传递的error<br /> 简单来讲：go中可以抛出一个panic的异常，然后在defer中通过recover捕获这个异常，然后正常处理。</p> <p>4.&nbsp;在正常的执行过程中，调用&nbsp;<code>recover</code>&nbsp;会返回&nbsp;<code>nil</code>&nbsp;并且没有其他任何效果；</p> <p>注意：利用recover处理panic指令，defer必须在panic之前声明，否则当panic时，recover无法捕获到panic．</p> <p>总结来说&nbsp;<strong><code>Go</code>&nbsp;语言没有异常系统，其使用&nbsp;<code>panic</code>&nbsp;触发宕机类似于其他语言的抛出异常，&nbsp;<code>recover</code>&nbsp;的宕机恢复机制就对应其它语言中的&nbsp;<code>try/catch</code>&nbsp;机制。</strong></p> <p><strong>panic 和 recover 的关系</strong></p> <p><strong>panic 和 recover 的组合有如下特性：</strong></p> <p><strong>有 panic 没 recover ，程序宕机。<br /> 有 panic 也有 recover ，程序不会宕机，执行完对应的 defer 后，从宕机点退出当前函数后继续执行。<br /> 注意：在 panic 触发的 defer 函数内，可以继续调用 panic ，进一步将错误外抛，直到程序整体崩溃。如果想在捕获错误时设置当前函数的返回值，可以对返回值使用命名返回值方式直接进行设置。</strong></p> <p>示例：</p> <pre><code>package main  func test() { 	defer func() { 		if err := recover(); err != nil { // recover 捕获错误。 			println(err.(string)) // 将 interface{} 转型为具体类型。 		} 	}() 	panic("panic error!")	// panic 抛出错误 } func main() { 	test() }  </code></pre> <h2>3. error</h2> <p>go中的错误处理，是通过返回值的形式来出来，要么你忽略，要么你处理（处理也可以是继续返回给调用者），对于golang这种设计方式，我们会在代码中写大量的if判断，以便做出决定。</p> <p>对于err如果是nil就代表没有错误，如果不是nil就代表程序出问题了，需要对错误进行处理了。</p> <p>示例：</p> <pre><code>func main() { 	conent,err:=ioutil.ReadFile("filepath") 	if err !=nil{ 		//错误处理 	}else { 		fmt.Println(string(conent)) 	} } </code></pre> <p>此外，error类型是go语言的一种内置类型，使用的时候不用特定去import,他本质上是一个接口,</p> <pre><code> type error interface{   Error() string //Error()是每一个订制的error对象需要填充的错误消息,可以理解成是一个字段Error }</code></pre> </p></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1750.htm">SpringBoot注解内容的动态配置</a></p>
                                                        <p>下一个：<a href="/html/category/article-1752.htm">SpringSecurity核心功能详解</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4108.htm" title="C#关于在返回值为Task方法中使用Thread.Sleep引发的思考">C#关于在返回值为Task方法中使用Thread.Sleep引发的思考</a></li>
                        <li class="py-2"><a href="/html/category/article-4079.htm" title="vue使用canvas绘制圆环_vue.js_">vue使用canvas绘制圆环_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-3133.htm" title="微服务与领域驱动设计，架构实践总结">微服务与领域驱动设计，架构实践总结</a></li>
                        <li class="py-2"><a href="/html/category/article-1904.htm" title="在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala">在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</a></li>
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-1893.htm" title="JavaScript中querySelector和getElementByld(getXXXBy XX)的区别">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1906.htm" title="Java Random随机数">Java Random随机数</a></li>
                        <li class="py-2"><a href="/html/category/article-1899.htm" title="Azure DevOps通过SSH部署上传到服务器的应用">Azure DevOps通过SSH部署上传到服务器的应用</a></li>
                        <li class="py-2"><a href="/html/category/article-1903.htm" title="基于JDK的动态代理原理分析">基于JDK的动态代理原理分析</a></li>
                        <li class="py-2"><a href="/html/category/article-1938.htm" title="JavaScript数字数组的均等分割方法详解">JavaScript数字数组的均等分割方法详解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>