<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1754.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <div class="article fmt article__content"> <blockquote> <p>大家好，我给大家分享一下仿豆瓣app的教程。当然了，我们不是用原生去实现，而是用前端框架vuejs来实现豆瓣app。————第一次写文章，写得不好请见谅。</p> </blockquote> <p><strong>为什么我们选择豆瓣app 来做这样一个教程？</strong></p> <blockquote> <p>是因为我很早就接触豆瓣这个网站，我比较喜欢看豆瓣里面电影和文章的点评。并且豆瓣提供了非常丰富的一个api接口供我们使用。也就是说我们可以不通过后端，直接通过前端ajax来获取电影和图书的数据，来组装我们app。</p> </blockquote> <p>我们可以看一下豆瓣app首页是一个什么样子 gif</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/4130e85b363c093d230e8017d7eb7835.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>以上就是豆瓣app的一个截图。</p> <p><strong>我们先来分析一下</strong></p> <blockquote> <p>首页分为四个部分。第一个就是顶部的搜索框。搜索框下面就是一个banner图切换。在下面就是一些热点的文章列表。最底部就是一个tab切换。在这篇教程中，我们通过vue的组件来实现这样一个首页的布局。</p> </blockquote> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*<br /><strong>创建豆瓣项目</strong></p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>我们可以通过官方vue-cli初始化项目,这里我们采用webpack示例</p> <pre><code>vue init webpack douban</code></pre> <p>填写项目描述，作者，安装vue-router</p> <pre><code>? Project name douban ? Project description douban ? Author afei ? Vue build standalone ? Install vue-router? Yes ? Use ESLint to lint your code? No ? Setup unit tests with Karma + Mocha? No ? Setup e2e tests with Nightwatch? No     vue-cli · Generated "douban".     To get started:       cd douban      npm install      npm run dev     Documentation can be found at https://vuejs-templates.github.io/webpack</code></pre> <p>初始化后，通过npm install安装依赖</p> <pre><code>cd douban npm install</code></pre> <p>运行项目,可以看到基于官方vue-cli的模版就创建好了</p> <pre><code>npm run dev</code></pre> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/b773e01c3639c091675ec779452e9110.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>将所需要用的资源，拷贝到项目中，这里我通过解压豆瓣app获得他的一些图片素材，拷入到src/assets/images目录里。</p> <p>css这里我用到了normaliz.css</p> <p>在src下，新建了一个pages目录，存放每一个页面组件，可以看一下我们的目录</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/e4c1c9f4724be814222c2735c7a71e6d.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>由于我们的首页更改了位置，所以在router里面的index.js需要更改为</p> <pre><code>import Vue from 'vue' import Router from 'vue-router' import Index from '../pages/Index'  Vue.use(Router)  export default new Router({   routes: [     {       path: '/',       name: 'Index',       component: Index     }   ] }) </code></pre> <p>每一个组件的css我们通过less来编写，所有需要通过npm安装less插件</p> <pre><code>npm install less less-loader --save</code></pre> <p>使用less预处理器需要在页面添加 lang='less'</p> <pre><code><style scoped lang="less">      </style></code></pre> <p><strong>第一个组件 tabbar</strong></p> <p>如何创建自定义组件tabbar，也就是豆瓣app底部的工具栏。这里的结构我们参考了mint-ui</p> <p>这是我们将要实现的效果图。</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/85b65dcb3d2126d418bc0b0204219134.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>我们先来分析一下这个组件的结构。</p> <p>这个组件分为两部分：第一个是组件的外层容器，第二个是组件的子容器item，子组件里面又分为图片和文字组合。子组件有2个状态，一个默认灰色的状态，一个选中状态，我们来实现一下这个组件的布局。在index.vue里面</p> <p>template</p> <pre><code><div class="m-tabbar">        <span class="m-tabbar-item-icon">        < img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="">     </span>      <span class="m-tabbar-item-text">             首页     </span>            <span class="m-tabbar-item-icon">        < img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="">     </span>      <span class="m-tabbar-item-text">             书影音     </span>            <span class="m-tabbar-item-icon">        < img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="">     </span>      <span class="m-tabbar-item-text">             广播     </span>            <span class="m-tabbar-item-icon">        < img src="../assets/images/ic_tab_group_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="">     </span>      <span class="m-tabbar-item-text">             小组     </span>            <span class="m-tabbar-item-icon">        < img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="">     </span>      <span class="m-tabbar-item-text">             我的     </span>     </div></code></pre> <p>style</p> <pre><code><style lang="less"> .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4;          .m-tabbar-item{       flex: 1;       text-align: center;       .m-tabbar-item-icon{           display: block;           padding-top: 2px;           img{               width: 28px;               height: 28px;           }       }       .m-tabbar-item-text{           display: block;           font-size: 10px;           color:#949494;       }       &.is-active{           .m-tabbar-item-text{               color: #42bd56;           }       }   } } </style></code></pre> <p>布局大功告成~~~~</p> <p>前面我们说的是，通过组件的方式来实现这个app。</p> <p>如果像上面代码这样的话肯定是不行的！既然我们大体布局已经写好了，现在就可以通过组件的方式来调用。当然我们还要改造一下代码。</p> <p>先在components文件夹下面，新建两个组件，通过这两个组件来组合实现我们底部的tab组件：</p> <p><strong>一个是tabbar-item.vue，实现子组件的item项，</strong></p> <p><strong>tabbar-item.vue</strong></p> <pre><code><template>              <span class="m-tabbar-item-icon"><slot name="icon-normal"></slot></span>         <span class="m-tabbar-item-text"><slot></slot></span>      </template>  <style lang="less"> .m-tabbar-item{     flex: 1;     text-align: center;     .m-tabbar-item-icon{         display: block;         padding-top: 2px;         img{             width: 28px;             height: 28px;         }      }     .m-tabbar-item-text{         display: block;         font-size: 10px;         color:#949494;     }     &.is-active{         .m-tabbar-item-text{             color: #42bd56;         }     } } </style></code></pre> <p><strong>一个是tabbar.vue，实现tab的外层容器，</strong></p> <p><strong>tabbar.vue</strong></p> <pre><code><template>     <div class="m-tabbar">        <slot></slot>     </div> </template> <style lang="less"> .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4; } </style></code></pre> <p>在Index.vue中组合这两个组件，实现tab组件效果</p> <pre><code><template>   <div>     <m-tabbar>       <m-tabbar-item id='tab1'>         < img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          首页       </m-tabbar-item>       <m-tabbar-item id='tab2'>         < img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          书影音       </m-tabbar-item>       <m-tabbar-item id='tab3'>         < img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          广播       </m-tabbar-item>       <m-tabbar-item id='tab4'>         ![](../assets/images/ic_tab_group_normal.png)          小组       </m-tabbar-item>        <m-tabbar-item id='tab5'>         < img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          我的       </m-tabbar-item>     </m-tabbar>   </div> </template>  <script>   import mTabbar from '../components/tabbar'   import mTabbarItem from '../components/tabbar-item'   export default {     name: 'index',     components: {       mTabbar,       mTabbarItem     }   } </script> </code></pre> <p>完成的效果。</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/c167a4273bb9f4bbbb3453c8067c3552.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*</p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p><strong>光有一个死的界面，没有点击切换的效果怎么能行？</strong></p> <p>以下我们通过vue使用自定义事件的表单输入组件来实现点击切换的效果。</p> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*</p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>先给Index.vue里面的tab组件加上v-model 来进行数据双向绑定，通过select来达到选择item，在item里面再添加一个选中的active图片</p> <pre><code><template>   <div>     测试     <m-tabbar v-model="select">       <m-tabbar-item id='tab1'>         < img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          < img src="../assets/images/ic_tab_home_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active">          首页       </m-tabbar-item>       <m-tabbar-item id='tab2'>         < img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          < img src="../assets/images/ic_tab_subject_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active">          书影音       </m-tabbar-item>       <m-tabbar-item id='tab3'>         < img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          < img src="../assets/images/ic_tab_status_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active">          广播       </m-tabbar-item>       <m-tabbar-item id='tab4'>         < img src="../assets/images/ic_tab_group_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          < img src="../assets/images/ic_tab_group_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          小组       </m-tabbar-item>        <m-tabbar-item id='tab5'>         < img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          < img src="../assets/images/ic_tab_profile_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal">          我的       </m-tabbar-item>     </m-tabbar>   </div> </template>  <script>   import mTabbar from '../components/tabbar'   import mTabbarItem from '../components/tabbar-item'   export default {     name: 'index',     components: {       mTabbar,       mTabbarItem     },     data() {       return {         select:"tab1"       }     }   } </script></code></pre> <p>tabbar.vue里面通过props来传递数据vaule</p> <pre><code><template>     <div class="m-tabbar">        <slot></slot>     </div> </template> <script>     import mTabbarItem from './tabbar-item';     export default {         props: ['value']     } </script> <style lang="less"> .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4; } </style></code></pre> <p>tabbar-item.vue组件：根据父组件的value和当前组件的id判断是否为选中状态,通过 $parent.$emit('input',id) - 触发父组件的自定义事件，添加选中的图片，根据isActive来显示隐藏</p> <pre><code><template>              <span class="m-tabbar-item-icon" v-show="!isActive"><slot name="icon-normal"></slot></span>         <span class="m-tabbar-item-icon" v-show="isActive"><slot name="icon-active"></slot></span>         <span class="m-tabbar-item-text"><slot></slot></span>      </template> <script>     export default{         props: ['id'],         computed: {            isActive(){                if(this.$parent.value===this.id){                    return true;                }            }         }     } </script> <style lang="less"> .m-tabbar-item{     flex: 1;     text-align: center;     .m-tabbar-item-icon{         display: block;         padding-top: 2px;         img{             width: 28px;             height: 28px;         }      }     .m-tabbar-item-text{         display: block;         font-size: 10px;         color:#949494;     }     &.is-active{         .m-tabbar-item-text{             color: #42bd56;         }     } } </style></code></pre> <p>大功告成，tabbar组件就完成了<del>~</del></p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/e2816005af19a86536cdc33b8987d8c5.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>感谢饿了么团队给我们带来了这么好的ui组件！</p> <p>源码下载 链接：http://pan.baidu.com/s/1qYlR8g0 密码：9yph</p> <p>下载安装</p> <pre><code>npm install npm run dev</code></pre> </div></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1753.htm">Python编程语言基础</a></p>
                                                        <p>下一个：<a href="/html/category/article-1755.htm">Docker基础数据卷容器的说明与共享数据原理详解</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7041.htm" title="猫狗身上的跳蚤会跳到人身上吗（猫狗身上的跳蚤会跳到人身上吗视频）">猫狗身上的跳蚤会跳到人身上吗（猫狗身上的跳蚤会跳到人身上吗视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-7087.htm" title="附近免费领养狗挪威犬的地方（哪有领养狗狗的地方）">附近免费领养狗挪威犬的地方（哪有领养狗狗的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6116.htm" title="被猫挠出血了过24小时了（被猫挠出血了过24小时了没打针）">被猫挠出血了过24小时了（被猫挠出血了过24小时了没打针）</a></li>
                        <li class="py-2"><a href="/html/category/article-6029.htm" title="重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）">重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-6204.htm" title="宠物粮食市场营销调查问卷 宠物粮食市场营销调查问卷模板">宠物粮食市场营销调查问卷 宠物粮食市场营销调查问卷模板</a></li>
                        <li class="py-2"><a href="/html/category/article-6948.htm" title="关于动物疫苗接种途径有哪些类型的接种方法的信息">关于动物疫苗接种途径有哪些类型的接种方法的信息</a></li>
                        <li class="py-2"><a href="/html/category/article-6627.htm" title="两个月的猫抓了出了一点血横（两个月的猫抓了一下）">两个月的猫抓了出了一点血横（两个月的猫抓了一下）</a></li>
                        <li class="py-2"><a href="/html/category/article-7409.htm" title="学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）">学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6072.htm" title="紫菜饭团的做法（紫菜饭团的做法和配料）">紫菜饭团的做法（紫菜饭团的做法和配料）</a></li>
                        <li class="py-2"><a href="/html/category/article-7362.htm" title="新相亲时代 李丹（万万没想到）">新相亲时代 李丹（万万没想到）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">14</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>