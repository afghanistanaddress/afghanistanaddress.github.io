<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1760.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Vue3知识点整理 常用Composition API（3）- 生命周期、自定义hook、toRef - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Vue3知识点整理 常用Composition API（3）- 生命周期、自定义hook、toRef</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><span style="font-size: 2em;">一、生命周期</span></p> <blockquote> <p>Vue2.x生命周期相关：<a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/JHY97/article/details/124137199"  title="Vue知识点整理（一）- Vue核心（6）- 生命周期（重要）" rel="nofollow">Vue知识点整理（一）- Vue核心（6）- 生命周期（重要）</a></p> <p><a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90"  title="Vue2官方文档 - 生命周期钩子" rel="nofollow">Vue2官方文档 - 生命周期钩子</a></p> </blockquote> <h2 id="1.1%20Vue3%20%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA">1.1 Vue3 生命周期图示</h2> <p>官方Vue3生命周期图示</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220606/78f6ca6fd68b35cae79dbd006cfd167d.jpg"></p> <h2 id="1.2%C2%A0Vue3.0%E4%B8%AD%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90">1.2&nbsp;Vue3.0中生命周期钩子</h2> <p>Vue3.0中可以继续使用Vue2.x中的生命周期钩子，但有有两个被更名：</p> <ul> <li>beforeDestroy 改名为 beforeUnmount</li> <li>destroyed 改名为 unmounted</li> </ul> <p><strong>简单案例练习</strong></p> <ul> <li>创建一个组件Demo.vue，并定义一个sum属性，添加点击事件更新sum的内容</li> <li>Demo.vue 内添加生命周期钩子，并在控制台输出</li> <li>App.vue中引入Demo组件，并使用<span style="background-color:#d7d8d9;">v-if API</span> 和 添加点击事件控制 Demo组件 显示和隐藏</li> </ul> <p>效果展示</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220606/87c45058913c53e352e01c4ff8d53800.jpg"></p> <p>相关代码：</p> <blockquote> <p><strong>Demo.vue</strong></p> <pre><code>&lt;template&gt;   &lt;h2&gt;当前求和为：{<!-- -->{ sum }}&lt;/h2&gt;   &lt;button @click="sum++"&gt;点击+1&lt;/button&gt; &lt;/template&gt;  &lt;script&gt; import { ref } from "vue"; export default {   name: "Demo",   setup() {     console.log("-----setup-----");     // 数据     let sum = ref(0);      return {       sum,     };   },   beforeCreate() {     console.log("-----beforeCreate-----");   },   created() {     console.log("-----created-----");   },   beforeMount() {     console.log("-----beforeMount-----");   },   mounted() {     console.log("-----mounted-----");   },   beforeUpdate() {     console.log("-----beforeUpdate-----");   },   updated() {     console.log("-----updated-----");   },   beforeUnmount() {     console.log("-----beforeUnmount-----");   },   unmounted() {     console.log("-----unmounted-----");   }, }; &lt;/script&gt;  &lt;style&gt;&lt;/style&gt;</code></pre> </blockquote> <blockquote> <p><strong>App.vue</strong></p> <pre><code>&lt;template&gt;   &lt;button @click="isShowDemo = !isShowDemo"&gt;控制Demo组件显示/隐藏&lt;/button&gt;   &lt;Demo v-if="isShowDemo"&gt;&lt;/Demo&gt; &lt;/template&gt;  &lt;script&gt; import Demo from "./components/Demo.vue"; import { ref } from "vue"; export default {   name: "App",   components: { Demo },   setup() {     let isShowDemo = ref(true);      return { isShowDemo };   }, }; &lt;/script&gt;</code></pre> </blockquote> <h2 id="1.3%C2%A0Composition%20API%20%E5%BD%A2%E5%BC%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90">1.3&nbsp;Composition API 形式的生命周期钩子</h2> <blockquote> <p><a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://v3.cn.vuejs.org/guide/composition-api-lifecycle-hooks.html"  title="Vue3官方文档 - 组合式API -&nbsp;生命周期钩子" rel="nofollow">Vue3官方文档 - 组合式API -&nbsp;生命周期钩子</a></p> </blockquote> <p>Vue3.0也提供了 Composition API 形式的生命周期钩子，与Vue2.x中钩子对应关系如下：</p> <table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"> <caption>   setup () 内部调用生命周期钩子</caption> <tbody> <tr> <th>选项式 API</th> <th>Hook inside<code>setup</code></th> </tr> <tr> <td style="text-align:center;">beforeCreate</td> <td style="text-align:center;">Not needed*</td> </tr> <tr> <td style="text-align:center;">created</td> <td style="text-align:center;">Not needed*</td> </tr> <tr> <td style="text-align:center;">beforeMount</td> <td style="text-align:center;">onBeforeMount</td> </tr> <tr> <td style="text-align:center;">mounted</td> <td style="text-align:center;">onMounted</td> </tr> <tr> <td style="text-align:center;">beforeUpdate</td> <td style="text-align:center;">onBeforeUpdate</td> </tr> <tr> <td style="text-align:center;">updated</td> <td style="text-align:center;">onUpdated</td> </tr> <tr> <td style="text-align:center;">beforeUnmount</td> <td style="text-align:center;">onBeforeUnmount</td> </tr> <tr> <td style="text-align:center;">unmounted</td> <td style="text-align:center;">onUnmounted</td> </tr> <tr> <td style="text-align:center;">errorCaptured</td> <td style="text-align:center;">onErrorCaptured</td> </tr> <tr> <td style="text-align:center;">renderTracked</td> <td style="text-align:center;">onRenderTracked</td> </tr> <tr> <td style="text-align:center;">renderTriggered</td> <td style="text-align:center;">onRenderTriggered</td> </tr> <tr> <td style="text-align:center;">activated</td> <td style="text-align:center;">onActivated</td> </tr> <tr> <td style="text-align:center;">deactivated</td> <td style="text-align:center;">onDeactivated</td> </tr> </tbody> </table> <p>TIP：</p> <ul> <li>因为<span style="background-color:#d7d8d9;">setup</span> 是围绕<span style="background-color:#d7d8d9;">beforeCreate</span> 和<span style="background-color:#d7d8d9;">created</span> 生命周期钩子运行的，所以不需要显式地定义它们。换句话说，在这些钩子中编写的任何代码都应该直接在<span style="background-color:#d7d8d9;">setup</span> 函数中编写。</li> </ul> <p><strong>简单案例练习</strong></p> <ul> <li>创建一个组件Demo.vue，并定义一个sum属性，添加点击事件更新sum的内容</li> <li>Demo.vue 中setup函数中添加 Composition API 形式的生命周期钩子，并在控制台输出</li> <li>App.vue中引入Demo组件，并使用<span style="background-color:#d7d8d9;">v-if API</span> 和 添加点击事件控制 Demo组件 显示和隐藏</li> </ul> <p>效果展示</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220606/14a80788a1df7a40b952259d8c9771e5.jpg"></p> <p>&nbsp;仅需修改<strong>Demo.vue</strong>中相关代码即可</p> <pre><code>&lt;script&gt; import {   ref,   onBeforeMount,   onMounted,   onBeforeUpdate,   onUpdated,   onBeforeUnmount,   onUnmounted, } from "vue"; export default {   name: "Demo",   setup() {     console.log("-----setup-----");     // 数据     let sum = ref(0);      onBeforeMount(() =&gt; {       console.log("-----onBeforeMount-----");     });     onMounted(() =&gt; {       console.log("-----onMounted-----");     });     onBeforeUpdate(() =&gt; {       console.log("-----onBeforeUpdate-----");     });     onUpdated(() =&gt; {       console.log("-----onUpdated-----");     });     onBeforeUnmount(() =&gt; {       console.log("-----onBeforeUnmount-----");     });     onUnmounted(() =&gt; {       console.log("-----onUnmounted-----");     });      return { sum };   }, }; &lt;/script&gt;</code></pre> <hr/> <h1 id="%E4%BA%8C%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89hook%E5%87%BD%E6%95%B0">二、自定义hook函数</h1> <ul> <li>hook：本质是一个函数，把setup函数中使用的 Composition API进行封装</li> <li>类似于Vue2.x中的minxin</li> <li>自定义hook的优势：复用代码，让setup中的逻辑更清楚易懂</li> </ul> <p><strong>简单案例练习</strong></p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220606/956aab113f3fb1f36b70701a31d4a043.jpg"></p> <ul> <li>在hooks文件夹下创建一个usePoint.js文件，并在其内编写鼠标点击事件，并获取相关坐标的方法与数据</li> <li>在Demo.vue组件内引用&nbsp;usePoint.js</li> <li>在Demo组件隐藏后，usePoint 不生效</li> </ul> <blockquote> <p><strong>usePoint.js</strong></p> <pre><code>import { reactive, onMounted, onBeforeUnmount } from "vue"; export default function () {   // 实现鼠标"打点"相关的数据   let point = reactive({     x: 0,     y: 0,   });    // 实现鼠标"打点"相关的方法   function savePoint(event) {     point.x = event.pageX;     point.y = event.pageY;     console.log(event.pageX, event.pageY);   }    //   实现鼠标"打点"相关的生命周期钩子   onMounted(() =&gt; {     window.addEventListener("click", savePoint);   });    onBeforeUnmount(() =&gt; {     window.removeEventListener("click", savePoint);   });    return point; }</code></pre> </blockquote> <blockquote> <p><strong>Demo.vue</strong></p> <pre><code>&lt;template&gt;   &lt;h2&gt;当前求和为：{<!-- -->{ sum }}&lt;/h2&gt;   &lt;button @click="sum++"&gt;点击+1&lt;/button&gt;   &lt;hr /&gt;   &lt;h2&gt;当前点击时鼠标的坐标为：x：{<!-- -->{ point.x }}, y：{<!-- -->{ point.y }}&lt;/h2&gt; &lt;/template&gt;  &lt;script&gt; import { ref } from "vue"; import usePoint from "../hooks/usePoint"; export default {   name: "Demo",   setup() {     // 数据     let sum = ref(0);     let point = usePoint();     return { sum, point };   }, }; &lt;/script&gt;</code></pre> </blockquote> <hr/> <h1 id="%E4%B8%89%E3%80%81toRef%20%E4%B8%8E%20toRefs">三、toRef 与 toRefs</h1> <blockquote> <p><a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://v3.cn.vuejs.org/api/refs-api.html#toref"  title="Vue3官方文档 - toRef" rel="nofollow">Vue3官方文档 - toRef</a></p> <p><a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://v3.cn.vuejs.org/api/refs-api.html#torefs"  title="Vue3官方文档 - toRefs" rel="nofollow">Vue3官方文档 - toRefs</a></p> </blockquote> <h2 id="3.1%20%E4%BD%9C%E7%94%A8">3.1 作用</h2> <p>创建一个ref对象，其value值指向另一个对象中的某个属性</p> <h2 id="3.2%20%E8%AF%AD%E6%B3%95">3.2 语法</h2> <pre><code>const fooRef = toRef(state, 'foo')</code></pre> <h2 id="3.3%20%E5%BA%94%E7%94%A8">3.3 应用</h2> <p>要将响应式对象中的某个属性单独提供给外部使用时</p> <h2 id="3.4%20%E6%89%A9%E5%B1%95">3.4 扩展</h2> <p>toRefs 与 toRef 功能一致，但可以批量创建多个ref对象，例如</p> <pre><code>const stateAsRefs = toRefs(state)</code></pre> <h2 id="3.5%20%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B%E7%BB%83%E4%B9%A0">3.5 简单案例练习</h2> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220606/cabd62410b224388b51f88f582fa0330.jpg"></p> <ul> <li>使用toRef</li> </ul> <pre><code>&lt;template&gt;   &lt;h2&gt;姓名：{<!-- -->{ name }}&lt;/h2&gt;   &lt;h2&gt;年龄：{<!-- -->{ age }}&lt;/h2&gt;   &lt;h2&gt;零用钱:{<!-- -->{ money }}&lt;/h2&gt;   &lt;button @click="name += '!'"&gt;姓名添加上！&lt;/button&gt;   &lt;button @click="age++"&gt;年龄增长&lt;/button&gt;   &lt;button @click="money++"&gt;零花钱增加&lt;/button&gt; &lt;/template&gt;  &lt;script&gt; import { reactive, toRef } from "vue"; export default {   name: "App",   setup() {     let person = reactive({       name: "周星星",       age: 25,       item: {         wallet: {           money: 100,         },       },     });      return {       // 使用toRef       name: toRef(person, "name"),       age: toRef(person, "age"),       money: toRef(person.item.wallet, "money"),     };   }, }; &lt;/script&gt;</code></pre> <ul> <li>使用toRefs</li> </ul> <pre><code>&lt;template&gt;   &lt;h2&gt;姓名：{<!-- -->{ name }}&lt;/h2&gt;   &lt;h2&gt;年龄：{<!-- -->{ age }}&lt;/h2&gt;   &lt;h2&gt;零用钱:{<!-- -->{ item.wallet.money }}&lt;/h2&gt;   &lt;button @click="name += '!'"&gt;姓名添加上！&lt;/button&gt;   &lt;button @click="age++"&gt;年龄增长&lt;/button&gt;   &lt;button @click="item.wallet.money++"&gt;零花钱增加&lt;/button&gt; &lt;/template&gt;  &lt;script&gt; import { reactive, toRef, toRefs } from "vue"; export default {   name: "App",   setup() {     let person = reactive({       name: "周星星",       age: 25,       item: {         wallet: {           money: 100,         },       },     });      return {       // 使用toRef       // name: toRef(person, "name"),       // age: toRef(person, "age"),       // money: toRef(person.item.wallet, "money"),        // 使用toRefs       ...toRefs(person),     };   }, }; &lt;/script&gt;  &lt;style&gt;&lt;/style&gt;</code></pre> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1759.htm">Springboot使用@JsonSerialize和@JsonDeserialize</a></p>
                                                        <p>下一个：<a href="/html/category/article-1761.htm">go-micro使用Consul做服务发现的方法和原理_在线工具</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3134.htm" title="SpringMVC-@RequestMapping注解">SpringMVC-@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-1891.htm" title="八大基本数据类型及数据类型之间的转换&#8212;zixiao">八大基本数据类型及数据类型之间的转换&#8212;zixiao</a></li>
                        <li class="py-2"><a href="/html/category/article-1886.htm" title="TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s">TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s</a></li>
                        <li class="py-2"><a href="/html/category/article-1871.htm" title="Git基础Git创建本地版本库详解">Git基础Git创建本地版本库详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1883.htm" title="C#实现文件Move和Copy操作_C#教程_">C#实现文件Move和Copy操作_C#教程_</a></li>
                        <li class="py-2"><a href="/html/category/article-1910.htm" title="[转载] Python中format函数用法">[转载] Python中format函数用法</a></li>
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-1901.htm" title="如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？">如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？</a></li>
                        <li class="py-2"><a href="/html/category/article-1890.htm" title="解决Redis并发带来的雪崩，击穿和穿透问题，以及搭建一个Redis伪集群">解决Redis并发带来的雪崩，击穿和穿透问题，以及搭建一个Redis伪集群</a></li>
                        <li class="py-2"><a href="/html/category/article-1882.htm" title="yum安装nginx后报错nginx: [error] open() “/run/nginx.pid“ failed">yum安装nginx后报错nginx: [error] open() “/run/nginx.pid“ failed</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>