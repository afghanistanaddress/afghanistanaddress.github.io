<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1786.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Docker极简入门：使用Docker-Compose 搭建redis集群 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Docker极简入门：使用Docker-Compose 搭建redis集群</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>为了构建一个集群，我们首先要让 redis 启用集群模式<br /> 一个简单的配置文件如下<code>redis.conf</code></p> <pre><code class="language-shell"># redis.conf file port 6379 cluster-enabled yes cluster-config-file nodes.conf cluster-node-timeout 5000 appendonly yes</code></pre> <p>因为是在单机上演示，所以我们得修改 port 防止冲突<br /> 比如我们要创建3主5副的集群，那么这八个 redis 实例启动的时候就应该用不同的端口(7000,7001...7007)，这样能防止冲突。</p> <pre><code class="language-shell">. ├── 7000 │   └── redis.conf ├── 7001 │   └── redis.conf ├── 7002 │   └── redis.conf ├── 7003 │   └── redis.conf ├── 7004 │   └── redis.conf ├── 7005 │   └── redis.conf ├── 7006 │   └── redis.conf ├── 7007 │   └── redis.conf</code></pre> <p><code>./7000/redis.conf</code> 中的 port 设置成7000,依此类推<code>./7007/redis.conf</code>中的 port 应该设置成7007</p> <p>万事俱备，只需运行<code>redis-server ./redis.conf</code>命令即可，当然你需要依次启动八个 redis server</p> <pre><code class="language-shell">for i in `seq 7000 7007`; do 	exec redis-server ./${i}/redis.conf &amp; done  redis-cli --cluster create\ 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003\ 127.0.0.1:7004 127.0.0.1:7005 127.0.0.1:7006 127.0.0.1:7007\ --cluster-replicas 1</code></pre> <p>这样整个集群就搭建好了，你可以选择运行在 port 7000-7007中的任意一个 servr 登录，然后去执行一些你喜欢的命令验证一下[狗头]</p> <h2 id="使用docker-compose构建集群">使用Docker-Compose构建集群</h2> <p>现在让我们来明确一下流程，首先我们需要启动八个 redis server 实例，然后运行<code>redis-cli --cluster create</code> 命令创建集群，这意味着我们需要创建一个 docker network 使得集群成员能够互相通讯</p> <p>创建一个 network 也很简单</p> <pre><code class="language-shell">networks:   redis-network:     name: redis-network     ## 使用网桥     driver: bridge     ipam:       driver: default       ## 指定网段，需要注意不能与已有的 docker network 相冲突       config:         - subnet: 172.18.0.0/24</code></pre> <p>还记得之前命令行是如何启动集群的吗？最后需要运行命令<code>redis-cli --cluster create</code>，整个集群才算成功创建，那在 yml 文件中该怎么写呢？<br /> 我们可以借助<code>depends_on</code>来告诉 docker 当前的 service 依赖其他的 service<br /> 具体的细节请看完整的yml文件</p> <pre><code class="language-shell">## redis.conf port 6379 cluster-enabled yes cluster-config-file nodes-redis.conf cluster-node-timeout 5000 appendonly yes appendfilename "appendonly-redis.aof"</code></pre> <pre><code class="language-yaml">version: "3.7"  networks:   redis-network:     name: redis-network     driver: bridge     ipam:       driver: default       config:         - subnet: 172.18.0.0/24  services:   redis-cluster:     image: redis:6-alpine     command: 'redis-cli --cluster create      172.18.0.11:6379 172.18.0.12:6379 172.18.0.13:6379 172.18.0.14:6379      172.18.0.15:6379 172.18.0.16:6379 172.18.0.17:6379 172.18.0.18:6379     --cluster-yes --cluster-replicas 1'     networks:       - redis-network     depends_on:       - redis1       - redis2       - redis3       - redis4       - redis5       - redis6       - redis7       - redis8    redis1:     image: redis:6-alpine     container_name: redis1     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.11     expose:       - 6379     volumes:       - $PWD/docker-data/redis1:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf    redis2:     image: redis:6-alpine     container_name: redis2     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.12     expose:       - 6379     volumes:       - $PWD/docker-data/redis2:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf    redis3:     image: redis:6-alpine     container_name: redis3     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.13     expose:       - 6379     volumes:       - $PWD/docker-data/redis3:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf    redis4:     image: redis:6-alpine     container_name: redis4     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.14     expose:       - 6379     volumes:       - $PWD/docker-data/redis4:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf          redis5:     image: redis:6-alpine     container_name: redis5     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.15     expose:       - 6379     volumes:       - $PWD/docker-data/redis5:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf          redis6:     image: redis:6-alpine     container_name: redis6     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.16     expose:       - 6379     volumes:       - $PWD/docker-data/redis6:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf                redis7:     image: redis:6-alpine     container_name: redis7     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.17     expose:       - 6379     volumes:       - $PWD/docker-data/redis7:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf          redis8:     image: redis:6-alpine     container_name: redis8     command: redis-server /usr/local/etc/redis/redis.conf     networks:       redis-network:         ipv4_address: 172.18.0.18     expose:       - 6379     volumes:       - $PWD/docker-data/redis8:/data       - $PWD/docker-config/redis.conf:/usr/local/etc/redis/redis.conf</code></pre> <p>最后不要忘记了最基本的命令</p> <pre><code class="language-shell">sudo docker-compose up # 在当前命令下运行，启动集群 sudo docker-compose down # 关闭集群的同时会将 docker-network也一并删除</code></pre> <h3 id="如何与集群通信">如何与集群通信</h3> <pre><code class="language-shell"># 登录任意一个节点执行命令即可，集群会根据key的哈希值，将你的命令重定位 sudo docker exec -it redis5 redis-cli -p 6379 set foo bar</code></pre> <pre><code class="language-shell">sudo docker exec -it redis1 redis-cli -p 6379 get foo # output bar</code></pre> <h3 id="参考">参考</h3> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://university.redis.com/courses/ru301/"  target="_blank" rel="nofollow">reids官网 course</a></p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1785.htm">如何使用 Redis 缓存</a></p>
                                                        <p>下一个：<a href="/html/category/article-1787.htm">DRF-认证权限频率</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4107.htm" title="pyspark读取和存入数据的三种方法">pyspark读取和存入数据的三种方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4079.htm" title="vue使用canvas绘制圆环_vue.js_">vue使用canvas绘制圆环_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-4380.htm" title="12种最适合学生养的宠物便宜（学生能养的宠物）">12种最适合学生养的宠物便宜（学生能养的宠物）</a></li>
                        <li class="py-2"><a href="/html/category/article-1923.htm" title="layUI利用JQuery设置select下拉列表的值重新渲染">layUI利用JQuery设置select下拉列表的值重新渲染</a></li>
                        <li class="py-2"><a href="/html/category/article-4455.htm" title="我们城市有个动物园英语作文（我们城市有一个大动物园翻译）">我们城市有个动物园英语作文（我们城市有一个大动物园翻译）</a></li>
                        <li class="py-2"><a href="/html/category/article-3134.htm" title="SpringMVC-@RequestMapping注解">SpringMVC-@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-4334.htm" title="和田宠物医院污水处理方案 和田宠物医院污水处理方案公示">和田宠物医院污水处理方案 和田宠物医院污水处理方案公示</a></li>
                        <li class="py-2"><a href="/html/category/article-3435.htm" title="SpringMVC之@RequestMapping注解">SpringMVC之@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-4136.htm" title="C语言实现扫雷游戏（代码）">C语言实现扫雷游戏（代码）</a></li>
                        <li class="py-2"><a href="/html/category/article-1902.htm" title="树的同构（java实现）">树的同构（java实现）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>