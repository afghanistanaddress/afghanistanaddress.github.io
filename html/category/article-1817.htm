<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1817.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h1>vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目</h1> <h2>准备工作</h2> <p>1.先搭建一个vue工程，这里有两种办法，一种是使用vue-cli ,另一种是使用vite(一种新的构建工具)，具体搭建传送门<br /> 2.搭建好项目后，我们就可以安装对应的库了，这里需要安装以下的这些库：</p> <ul> <li>npm install --save<code>axios</code> 这个库不需要说使用next版本，vue升级和发起http请求没有直接的关系，所以axios不用说要不要升级安装axios官网</li> <li>npm install<code>element-plus</code> --save 这个库是element 团队针对vue3而专门开发的库，对于vue3的库，除了elment-plus外，还有ant-design 等element-plus 官网</li> <li>npm install<code>vue-router@4</code> 这个是vue router 专门的库,现在还是带测试的版本，但是如果需要在vue3中使用路由，那么需要使用这个库，官网</li> <li>npm install<code>sass</code> -D 这个是sass 的库，这里为啥不需要安装<code>sass--loader</code> 或者<code>style-loader</code> 或者 node-sass 呢？ 这个在设计的时候，vue3 的缔造者 在设计vue 的时候已经考虑过这件事情，vite 这个构建工具里面集成了scss, less ,stylus 等， 原话如下<code>That said, Vite does provide built-in support for .scss, .sass, .less, .styl and .stylus files. There is no need to install Vite-specific plugins for them, but the corresponding pre-processor itself must be installed as a peer dependency:</code>vite 的官网</li> <li>npm install<code>vuex@next</code> --save 这个是vuex的库，如果需要使用则需要安装这个库，vuex官网</li> </ul> <p>最后我的package.json 的情况如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220606/0c31bae28d3b035be78c0f7af03bb154.jpg" alt="vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目"></p> <h2>项目编写</h2> <p>在项目编写阶段，由于本人现在也是在体验vue3的阶段，下面可能也会有理解错误的地方，还请大家多多指教</p> <h3>配置vue的环境</h3> <blockquote> <p>直接在根目录建立vite.config.js，里面的常用配置如下：</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">const</span> path<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 代理，最重要，其他的都可以有默认配置</span>         proxy<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">'/api'</span><span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>                 target<span class="token punctuation">:</span><span class="token string">'http://localhost:9011'</span><span class="token punctuation">,</span>                 changeOrigin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 入口</span>         entry<span class="token punctuation">:</span><span class="token string">'index.html'</span><span class="token punctuation">,</span><span class="token comment">// 出口</span>         outDir<span class="token punctuation">:</span><span class="token string">'./../public/html'</span><span class="token punctuation">,</span><span class="token comment">// 打包后的跟路径</span>         base<span class="token punctuation">:</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token comment">// 输出的静态资源的文件夹名称</span>         assetsDir<span class="token punctuation">:</span><span class="token string">'assets'</span><span class="token punctuation">,</span><span class="token comment">// 是否开启ssr服务断渲染</span>         ssr<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 重命名路径  path.resolve(__dirname, './src')</span>         alias<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">'/@/'</span><span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'./src'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 端口</span>         port<span class="token punctuation">:</span><span class="token number">3002</span><span class="token punctuation">,</span><span class="token comment">// 是否自动开启浏览器</span>         open<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 开启控制台输出日志</span>         silent<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 那个包不需要打包</span>          optimizeDeps<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>             exclude<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'element-plus'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// css预设的配置</span>         cssPreprocessOptions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>             scss<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>                 additionalData<span class="token punctuation">:</span><span class="token string">'@import "style/var.scss";'</span><span class="token punctuation">,</span><span class="token comment">// 添加公共样式</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>详细配置</p> <h3>起步的main.js</h3> <blockquote> <p>创建一个vue的实例，导入element-plus, 导入vue-router,<br /> 或者vuex，但是这里都需要通过createApp链式调用来使用插件</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createApp<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span> App<span class="token keyword">from</span><span class="token string">'./App.vue'</span><span class="token keyword">import</span> ElementPlus<span class="token keyword">from</span><span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token string">'../style/index.scss'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token string">'element-plus/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> router<span class="token keyword">from</span><span class="token string">"./router"</span><span class="token punctuation">;</span><span class="token keyword">import</span> vuex<span class="token keyword">from</span><span class="token string">"./vuex"</span><span class="token punctuation">;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre> <h3>创建路由</h3> <blockquote> <p>在src文件夹下面创建router文件夹，里面配置vue的路由</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>routes<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"./routes"</span><span class="token punctuation">;</span><span class="token keyword">const</span> router<span class="token operator">=</span><span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     history<span class="token punctuation">:</span><span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 路由的history模式</span>     routes<span class="token punctuation">,</span><span class="token comment">// 导入路由的配置， 和vue2里面的路由一样</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span><span class="token keyword">default</span> router<span class="token punctuation">;</span><span class="token comment">//注意： 在.vue组件中如果需要使用router,则需要导入useRouter这个方法，需要使用route,则需要导入，useRoute这个方法</span></code></pre> <h3>是否需要状态管理工具</h3> <blockquote> <p>如果需要使用状态管理工具，那个在src下面创建一个store文件夹，然后里面写vuex的配置，我这里使用的是模块，模块里面的内容和vuex3是一样的，调用方式也是一样的</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token keyword">import</span> userModule<span class="token keyword">from</span><span class="token string">"./userModule"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     modules<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>         userModule<span class="token punctuation">:</span> userModule<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//模块例子</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span>     namespaced<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>     state<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>         isLoading<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>         data<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     mutations<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 设置是否正在加载</span><span class="token function">setIsLoading</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>isLoading<span class="token operator">=</span> payload<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 设置用户数据</span><span class="token function">setData</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>data<span class="token operator">=</span> payload<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     actions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 登录</span><span class="token keyword">async</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>commit<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span>loginId<span class="token punctuation">,</span> loginPwd<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setIsLoading'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> r<span class="token operator">=</span><span class="token keyword">await</span><span class="token function">login</span><span class="token punctuation">(</span>loginId<span class="token punctuation">,</span> loginPwd<span class="token punctuation">)</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setData'</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setIsLoading'</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 注意： 如果在.vue组件中需要使用store,需要导入 userStore的这个方法</span><span class="token comment">// 例如：在vue的setup函数中使用</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vuex"</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>computed<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useRouter<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> store<span class="token operator">=</span><span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router<span class="token operator">=</span><span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token function-variable function">loginOut</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{<!-- --></span>       store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'userModule/loginOut'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>       isLoading<span class="token punctuation">:</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userModule<span class="token punctuation">.</span>isLoading<span class="token punctuation">)</span><span class="token punctuation">,</span>       data<span class="token punctuation">:</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userModule<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>       loginOut<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3>直接撸代码</h3> <p>对于撸代码的话，和vue2里面的差不多，只是vue3里面增加了compositionAPI 里面有比较大的改动，在写代码的时候，难免会有磕磕碰碰，祝愿大家在写代码的时候，写的都对。</p> <p>这篇文章是基于本人想实现一个图片的网站，后台使用node,前台使用vue3，作为自己的练手项目，毕竟公司里面现在使用vue3对自己也哪方面都不好。 有兴趣的可以看看项目地址演示地址</p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1816.htm">Sentinel基础应用详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-1818.htm">MySQL Router重装后重新连接集群进行引导出现的——此主机中之前已配置过的问题</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7914.htm" title="猫不打疫苗有事吗（猫不打疫苗有啥危害）">猫不打疫苗有事吗（猫不打疫苗有啥危害）</a></li>
                        <li class="py-2"><a href="/html/category/article-7040.htm" title="广州猫领养中心地址查询电话（广州猫领养中心地址查询电话号码）">广州猫领养中心地址查询电话（广州猫领养中心地址查询电话号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-8053.htm" title="宠物疫苗妙三多和辉瑞哪个好?（辉瑞妙三多一共打几针）">宠物疫苗妙三多和辉瑞哪个好?（辉瑞妙三多一共打几针）</a></li>
                        <li class="py-2"><a href="/html/category/article-7408.htm" title="自考本科报名官网入口河北省（河北自考办官网报名）">自考本科报名官网入口河北省（河北自考办官网报名）</a></li>
                        <li class="py-2"><a href="/html/category/article-7224.htm" title="开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）">开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）</a></li>
                        <li class="py-2"><a href="/html/category/article-8006.htm" title="动物疫苗价格表最新图片及价格查询 动物疫苗价格表最新图片及价格查询大全">动物疫苗价格表最新图片及价格查询 动物疫苗价格表最新图片及价格查询大全</a></li>
                        <li class="py-2"><a href="/html/category/article-8420.htm" title="动物医院连锁店有哪些（动物医院诊疗范围）">动物医院连锁店有哪些（动物医院诊疗范围）</a></li>
                        <li class="py-2"><a href="/html/category/article-7592.htm" title="动物疫苗监管部门电话号码的简单介绍">动物疫苗监管部门电话号码的简单介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-7132.htm" title="法内情2002（袁咏仪法内情国语第一集）">法内情2002（袁咏仪法内情国语第一集）</a></li>
                        <li class="py-2"><a href="/html/category/article-7270.htm" title="国内十大兽药厂排名（全国排名前十的兽药厂）">国内十大兽药厂排名（全国排名前十的兽药厂）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>