<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1867.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>C ++ STL中的list_remove()和list remove_if() - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">C ++ STL中的list_remove()和list remove_if()</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>给出的任务是显示STL中C ++中的功能列表remove()和list remove_if()函数。</p> <h2>什么是STL中的列表？</h2> <p>列表是允许在任何地方按顺序进行恒定时间插入和删除的容器。列表被实现为双链表。列表允许不连续的内存分配。与数组，向量和双端队列相比，列表在容器中的任何位置执行元素的插入提取和移动效果更好。在列表中，对元素的直接访问很慢，并且列表与forward_list相似，但是转发列表对象是单个链接列表，并且只能迭代转发。</p> <h2>什么是remove()？</h2> <p>此函数用于删除参数中传递给函数的给定值。</p> <h2>语法</h2> <pre>listname.remove(val);</pre> <h2>参数</h2> <p><strong>val-</strong>它定义了要删除的值。</p> <h2>示例</h2> <pre>Input&nbsp;List:&nbsp;1&nbsp;2&nbsp;3&nbsp;3&nbsp;4&nbsp;5 Output&nbsp;New&nbsp;List:&nbsp;1&nbsp;2&nbsp;4&nbsp;5 In&nbsp;this&nbsp;List&nbsp;element&nbsp;3&nbsp;is&nbsp;removed.  Input&nbsp;List:&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;8&nbsp;8&nbsp;9 Output&nbsp;New&nbsp;List:&nbsp;5&nbsp;7&nbsp;8&nbsp;8&nbsp;8&nbsp;9 In&nbsp;this&nbsp;list&nbsp;element&nbsp;6&nbsp;in&nbsp;removed</pre> <h3>可以遵循的方法</h3> <ul class="list-paddingleft-2"> <li> <p>首先，我们声明列表。</p> </li> <li> <p>然后我们打印列表。</p> </li> <li> <p>然后我们定义remove()函数。</p> </li> </ul> <p>通过使用上述方法，我们可以删除给定的元素。</p> <h2>示例</h2> <pre>//&nbsp;C++&nbsp;code&nbsp;to&nbsp;demonstrate&nbsp;the&nbsp;working&nbsp;of&nbsp;list&nbsp;remove(&nbsp;)&nbsp;function&nbsp;in&nbsp;STL #include&lt;iostream.h&gt; #include&lt;list.h&gt; Using&nbsp;namespace&nbsp;std; int&nbsp;main&nbsp;(&nbsp;){ &nbsp;&nbsp;&nbsp;List&lt;int&gt;&nbsp;list&nbsp;=&nbsp;{&nbsp;21,&nbsp;24,&nbsp;28,&nbsp;26,&nbsp;27,&nbsp;25&nbsp;}; &nbsp;&nbsp;&nbsp;//&nbsp;print&nbsp;the&nbsp;list &nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;"&nbsp;list:&nbsp;"; &nbsp;&nbsp;&nbsp;for(&nbsp;auto&nbsp;x&nbsp;=&nbsp;list.begin(&nbsp;);&nbsp;x&nbsp;!=&nbsp;list.end(&nbsp;);&nbsp;++x) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;*x&nbsp;&lt;&lt;&nbsp;"&nbsp;"; &nbsp;&nbsp;&nbsp;//&nbsp;defining&nbsp;remove(&nbsp;)&nbsp;function &nbsp;&nbsp;&nbsp;list.remove(27); &nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;"&nbsp;New&nbsp;List:”; &nbsp;&nbsp;&nbsp;for(&nbsp;x&nbsp;=&nbsp;list.begin(&nbsp;);&nbsp;x&nbsp;!=&nbsp;list.end(&nbsp;);&nbsp;++x) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;'&nbsp;"&nbsp;"&nbsp;&lt;&lt;&nbsp;*x; &nbsp;&nbsp;&nbsp;return&nbsp;0; }</pre> <p>输出结果</p> <p>如果我们运行上面的代码，那么它将生成以下输出</p> <pre>Input&nbsp;-&nbsp;List:&nbsp;21&nbsp;24&nbsp;28&nbsp;26&nbsp;27&nbsp;25 Output&nbsp;-&nbsp;New&nbsp;List:&nbsp;21&nbsp;24&nbsp;28&nbsp;26&nbsp;25 Input&nbsp;–&nbsp;List:&nbsp;45&nbsp;46&nbsp;47&nbsp;48&nbsp;49&nbsp;50 Output&nbsp;–&nbsp;New&nbsp;List:&nbsp;45&nbsp;46&nbsp;48&nbsp;49&nbsp;50</pre> <h2>什么是remove_if()函数？</h2> <p>此函数用于删除返回谓词为true或对于作为参数传递的条件返回true的值。</p> <h2>语法</h2> <pre>listname.remove_if(predicate)</pre> <h2>参数</h2> <p><strong>谓词</strong>-它定义一个条件作为参数传递。</p> <h2>示例</h2> <pre>Input&nbsp;–&nbsp;List:&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;9&nbsp;10 Output&nbsp;–&nbsp;New&nbsp;List:&nbsp;5&nbsp;7&nbsp;9 In&nbsp;this&nbsp;list&nbsp;we&nbsp;remove&nbsp;all&nbsp;the&nbsp;even&nbsp;elements.  Input&nbsp;–&nbsp;List:5&nbsp;10&nbsp;15&nbsp;20&nbsp;25&nbsp;30 Output&nbsp;–&nbsp;New&nbsp;List:&nbsp;5&nbsp;15&nbsp;25 In&nbsp;this&nbsp;List&nbsp;we&nbsp;remove&nbsp;all&nbsp;the&nbsp;elements&nbsp;which&nbsp;is&nbsp;divisible&nbsp;by&nbsp;10.</pre> <h3>可以遵循的方法</h3> <ul class="list-paddingleft-2"> <li> <p>首先，我们声明谓词函数。</p> </li> <li> <p>然后我们声明列表。</p> </li> <li> <p>然后我们打印列表。</p> </li> <li> <p>然后我们声明remove_if()函数。</p> </li> </ul> <p>通过使用上述方法，我们可以删除任何给定条件下的元素。在声明remove_if()函数时，我们将谓词作为参数传递。</p> <h2>示例</h2> <pre>//&nbsp;C++&nbsp;code&nbsp;to&nbsp;demonstrate&nbsp;the&nbsp;working&nbsp;of&nbsp;list&nbsp;remove_if(&nbsp;)&nbsp;function&nbsp;in&nbsp;STL #include&lt;iostream.h&gt; #include&lt;list.h&gt; Using&nbsp;namespace&nbsp;std; Bool&nbsp;div3(&nbsp;const&nbsp;int&amp;&nbsp;val){ &nbsp;&nbsp;&nbsp;return(&nbsp;val&nbsp;%&nbsp;3)&nbsp;==&nbsp;0); } int&nbsp;main(&nbsp;){ &nbsp;&nbsp;&nbsp;List&lt;int&gt;&nbsp;list&nbsp;=&nbsp;{&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;15,&nbsp;9,&nbsp;7,&nbsp;21,&nbsp;24,&nbsp;13&nbsp;}; &nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;"&nbsp;List:&nbsp;"; &nbsp;&nbsp;&nbsp;for(&nbsp;auto&nbsp;x&nbsp;=&nbsp;list.begin(&nbsp;);&nbsp;x&nbsp;!=&nbsp;list.end(&nbsp;);&nbsp;++x) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;*x&nbsp;&lt;&lt;&nbsp;"&nbsp;"; &nbsp;&nbsp;&nbsp;//&nbsp;declaring&nbsp;remove_if(&nbsp;)&nbsp;function &nbsp;&nbsp;&nbsp;list.remove_if(div3); &nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;"&nbsp;New&nbsp;List:”; &nbsp;&nbsp;&nbsp;for(&nbsp;x=&nbsp;list.begin(&nbsp;);&nbsp;x&nbsp;!=&nbsp;end(&nbsp;);&nbsp;++x) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&nbsp;"&nbsp;"&nbsp;&lt;&lt;&nbsp;*x; &nbsp;&nbsp;&nbsp;return&nbsp;0; }</pre> <p>输出结果</p> <p>如果我们运行上面的代码，那么它将生成以下输出</p> <pre>Input&nbsp;–&nbsp;List:&nbsp;2&nbsp;3&nbsp;4&nbsp;15&nbsp;9&nbsp;7&nbsp;21&nbsp;24&nbsp;13 Output&nbsp;–&nbsp;New&nbsp;List:&nbsp;2&nbsp;4&nbsp;7&nbsp;13</pre> <div></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1866.htm">100ms的SQL把服务器搞崩溃了_在线工具</a></p>
                                                        <p>下一个：<a href="/html/category/article-1868.htm">spring-kafka @KafkaListener详解与使用</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1875.htm" title="No version of NDK matched the requested version 21.1.6113669. Versions available locally: 23.1.77796">No version of NDK matched the requested version 21.1.6113669. Versions available locally: 23.1.77796</a></li>
                        <li class="py-2"><a href="/html/category/article-1903.htm" title="基于JDK的动态代理原理分析">基于JDK的动态代理原理分析</a></li>
                        <li class="py-2"><a href="/html/category/article-1901.htm" title="如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？">如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？</a></li>
                        <li class="py-2"><a href="/html/category/article-1886.htm" title="TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s">TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s</a></li>
                        <li class="py-2"><a href="/html/category/article-1909.htm" title="Redis的高并发是如何支持的">Redis的高并发是如何支持的</a></li>
                        <li class="py-2"><a href="/html/category/article-1937.htm" title="VScode离线安装插件的方法">VScode离线安装插件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1888.htm" title="pandas 分批读取大量数据">pandas 分批读取大量数据</a></li>
                        <li class="py-2"><a href="/html/category/article-1891.htm" title="八大基本数据类型及数据类型之间的转换&#8212;zixiao">八大基本数据类型及数据类型之间的转换&#8212;zixiao</a></li>
                        <li class="py-2"><a href="/html/category/article-1867.htm" title="C ++ STL中的list_remove()和list remove_if()">C ++ STL中的list_remove()和list remove_if()</a></li>
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">46</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>