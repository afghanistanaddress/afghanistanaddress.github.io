<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1870.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>SpringBoot 简洁明了将导入Excel到数据库 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">SpringBoot 简洁明了将导入Excel到数据库</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p>以下有两种构建工程看看你选择哪个</p> <p>maven依赖</p> <pre><code>&lt;dependency&gt; 	&lt;groupId&gt;org.apache.poi&lt;/groupId&gt; 	&lt;artifactId&gt;poi&lt;/artifactId&gt; 	&lt;version&gt;3.17&lt;/version&gt; &lt;/dependency&gt; 		 &lt;dependency&gt; 	&lt;groupId&gt;org.apache.poi&lt;/groupId&gt; 	&lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt; 	&lt;version&gt;3.17&lt;/version&gt; &lt;/dependency&gt;</code></pre> <p>Gradle依赖</p> <pre><code>compile group: 'org.apache.poi', name: 'poi', version: '3.17' compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'</code></pre> <p>控制层代码</p> <pre><code class="language-java">    @ApiOperation(value = "导入", notes = "导入", produces = "text/plain")     @PostMapping("/v2/payable/importOrder")     @PreAuthorize("hasRole('importOrder-payable-v2')")     public JSONResult importOrder(MultipartFile file) throws Exception {         orderService.importOrder(Long.parseLong(SecurityContextHolder.getSubject().getId()),file);         return JSONResult.ok();     }</code></pre> <p>&nbsp;</p> <p>服务层代码</p> <pre><code class="language-java">    /**      * 导入      * @param file 文件      */     void importOrder(Long userId,MultipartFile file) throws Exception;</code></pre> <p>实现层代码（这里是我多表添加操作数据）</p> <pre><code class="language-java">@Override     @Transactional     public void importOrder(Long userId, MultipartFile file) throws Exception {         //调用封装好的工具         ExcelImportUtil importUtil = new ExcelImportUtil(file);         //调用导入的方法，获取sheet表的内容         List&lt;Map&lt;String, String&gt;&gt; maps = importUtil.readExcelContent();         //获取自定义表头标题数据         Map&lt;String, Object&gt; someTitle = importUtil.readExcelSomeTitle();         //导入订单表         PayableOrder payableOrder = PayableOrder.builder()                 .entryTime(someTitle.get("date").toString())                 .remark(someTitle.get("remark").toString())                 .createTime(DateTimeUtils.dateTimeToString(LocalDateTime.now()))                 .createBy(String.valueOf(userId))                 .status(1)                 .type(1)                 .build();         //执行添加到数据库         payableOrderDao.save(payableOrder);          //获取订单号         Long id = payableOrder.getId();         //导入订单详情表         List&lt;PayableOrderDetail&gt; orderDetails = maps.stream().filter(Objects::nonNull).map(map -&gt; {             Customer customer = customerDao.findByEnCode(map.get("供应商编码"));             if (Objects.isNull(customer)) throw new HandleException("供应商不存在");             return PayableOrderDetail.builder()                     .qPayableId(id)                     .supplierCode(map.get("供应商编码"))                     .cCustomerId(customer.getId())                     .supplierName(map.get("供应商名称"))                     .registerAddr(map.get("注册地址"))                     .bankAccount(map.get("银行账号"))                     .openBank(map.get("开户行"))                     .telephone(map.get("联系方式"))                     .contact(map.get("主联系人"))                     .remark(map.get("备注"))                     .payAmount(BigDecimal.valueOf(Double.parseDouble(map.get("期初应付金额"))))                     .createTime(DateTimeUtils.dateTimeToString(LocalDateTime.now()))                     .createBy(String.valueOf(userId))                     .status(1).build();         }).collect(Collectors.toList());          //批量添加到订单详情         orderDetailDao.saveAll(orderDetails);     }</code></pre> <p>导入工具类</p> <pre><code class="language-java">package com.softwarebr.ashe.util;  import org.apache.poi.hssf.usermodel.HSSFWorkbook; import org.apache.poi.ss.usermodel.*; import org.apache.poi.xssf.usermodel.XSSFWorkbook; import org.springframework.web.multipart.MultipartFile; import java.io.InputStream; import java.text.DecimalFormat; import java.text.SimpleDateFormat; import java.util.*;  /**  * @author ZHY  * @date 2020/6/17 15:56  */ public class ExcelImportUtil {     private Workbook wb;     private Sheet sheet;     private Row row;      /**      * 读取Excel      *      * @author ZHY      */     public ExcelImportUtil(MultipartFile file) throws Exception {         String filename = file.getOriginalFilename();         String ext = filename.substring(filename.lastIndexOf("."));         InputStream is = file.getInputStream();         if (".xls".equals(ext)) {             wb = new HSSFWorkbook(is);         } else if (".xlsx".equals(ext)) {             wb = new XSSFWorkbook(is);         } else {             wb = null;         }     }      /**      * 读取Excel表格表头的内容输出      *      */     public List&lt;Map&lt;String, Object&gt;&gt; readExcelTitleOut() {         List&lt;Map&lt;String, Object&gt;&gt; list = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();         if (wb != null) {             sheet = wb.getSheetAt(0);             row = sheet.getRow(0);             // 标题总列数             int colNum = row.getPhysicalNumberOfCells();              System.out.println("colNum:" + colNum);              Map&lt;String, Object&gt; map = new LinkedHashMap&lt;String, Object&gt;();              for (int i = 0; i &lt; colNum; i++) {                 String stringCellValue = row.getCell(i).getStringCellValue();                 map.put(stringCellValue, null);             }             list.add(map);             return list;         }         return list;     }      /**      * 读取Excel表格表头      *      */     public String[] readExcelTitle() {         String[] title = {};         if (wb != null) {             sheet = wb.getSheetAt(0);             row = sheet.getRow(4);             // 标题总列数             int colNum = row.getPhysicalNumberOfCells();              System.out.println("colNum:" + colNum);              title = new String[colNum];              for (int i = 0; i &lt; colNum; i++) {                 title[i] = row.getCell(i).getStringCellValue().replaceAll("\\s+", "");             }         }         return title;     }      /**      * 读取Excel表格的某一个数值      * @return      */     public  Map&lt;String, Object&gt; readExcelSomeTitle(){         Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();         if (wb != null) {             sheet = wb.getSheetAt(0);             String title = parseExcel(sheet.getRow(2).getCell(1));             String remark = parseExcel(sheet.getRow(3).getCell(1));             map.put("date",title);             map.put("remark",remark);         }         return map;     }      /**      * 读取Excel数据内容      *      */     public List&lt;Map&lt;String, String&gt;&gt; readExcelContent() {         List&lt;Map&lt;String, String&gt;&gt; list = new ArrayList&lt;&gt;();         if (wb != null) {             //获取sheet表             sheet = wb.getSheetAt(0);             // 得到总行数             int rowNum = sheet.getLastRowNum();             //获取表头的标题             String[] readExcelTitle = readExcelTitle();             // 正文内容应该从第二行开始,第一行为表头的标题             for (int i = 5; i &lt;= rowNum; i++) {                 row = sheet.getRow(i);                 if (row == null) {                     continue;                 }                 Map&lt;String, String&gt; map = new LinkedHashMap&lt;&gt;();                 for (int j = 0; j &lt; readExcelTitle.length; j++) {                     //获取每一列的数据值                     String str = parseExcel(row.getCell(j));                     //判断对应行的列值是否为空                     if (StringUtils.isNotBlank(str)) {                         //表头的标题为键值，列值为值                         map.put(readExcelTitle[j], str);                     }                 }                 //判段添加的对象是否为空                 if (!map.isEmpty()){                     list.add(map);                 }             }         }         return list;     }      /**      *      * 根据Cell类型设置数据      *      */     private String parseExcel(Cell cell) {         String result = "";         if (cell != null) {             SimpleDateFormat sdf = null;             switch (cell.getCellTypeEnum()) {                 case NUMERIC:// 数字类型                     if (DateUtil.isCellDateFormatted(cell)) {// 处理日期格式、时间格式                         if (cell.getCellStyle().getDataFormat() == 20) {                             sdf = new SimpleDateFormat("HH:mm");                         } else {// 日期                             sdf = new SimpleDateFormat("yyyy-MM-dd");                         }                         String dateFormat = sdf.format(cell.getDateCellValue());                         result = dateFormat;                     } else if (cell.getCellStyle().getDataFormat() == 58) {                         // 处理自定义日期格式：m月d日(通过判断单元格的格式id解决，id的值是58)                         sdf = new SimpleDateFormat("yyyy-MM-dd");                         double value = cell.getNumericCellValue();                         Date date = DateUtil.getJavaDate(value);                         result = sdf.format(date);                     } else {                         double value = cell.getNumericCellValue();                         DecimalFormat format = new DecimalFormat("#.###########");                         String strVal = format.format(value);                         result = strVal;                     }                     break;                 case STRING:// String类型                     result = cell.getRichStringCellValue().toString();                     break;                 default:                     break;             }         }         return result;     } } </code></pre> <p>&nbsp;</p> <pre><code class="language-html hljs">操作的excel文件，如图：</code></pre> <p><img fetchpriority="high" decoding="async" alt="" height="643" src="http://img.555519.xyz/uploads/20221229/2a8a6aa4a20c8e42dc469379250c7bee.jpg"></p> <p>&nbsp;</p> <p>以上就是操作导入excel文件数据到数据库，我操作的是MySQL数据库，其他的数据没有试过，你们可以试试。</p> <p>不懂的可以问我，联系方式：18679691390@163.com</p> <p>&nbsp;</p> </p></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1869.htm">Python 一网打尽＜排序算法＞之从希尔排序算法的分治哲学开始</a></p>
                                                        <p>下一个：<a href="/html/category/article-1871.htm">Git基础Git创建本地版本库详解</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1875.htm" title="No version of NDK matched the requested version 21.1.6113669. Versions available locally: 23.1.77796">No version of NDK matched the requested version 21.1.6113669. Versions available locally: 23.1.77796</a></li>
                        <li class="py-2"><a href="/html/category/article-1891.htm" title="八大基本数据类型及数据类型之间的转换&#8212;zixiao">八大基本数据类型及数据类型之间的转换&#8212;zixiao</a></li>
                        <li class="py-2"><a href="/html/category/article-1907.htm" title="为MySQL创建高性能索引_Mysql_">为MySQL创建高性能索引_Mysql_</a></li>
                        <li class="py-2"><a href="/html/category/article-1898.htm" title="Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]">Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]</a></li>
                        <li class="py-2"><a href="/html/category/article-1881.htm" title="【Azure 应用服务】Azure Function 启用 Managed Identity后， Powershell Funciton出现 ERROR: ManagedIdentityCredential authentication failed">【Azure 应用服务】Azure Function 启用 Managed Identity后， Powershell Funciton出现 ERROR: ManagedIdentityCredential authentication failed</a></li>
                        <li class="py-2"><a href="/html/category/article-1890.htm" title="解决Redis并发带来的雪崩，击穿和穿透问题，以及搭建一个Redis伪集群">解决Redis并发带来的雪崩，击穿和穿透问题，以及搭建一个Redis伪集群</a></li>
                        <li class="py-2"><a href="/html/category/article-1883.htm" title="C#实现文件Move和Copy操作_C#教程_">C#实现文件Move和Copy操作_C#教程_</a></li>
                        <li class="py-2"><a href="/html/category/article-3435.htm" title="SpringMVC之@RequestMapping注解">SpringMVC之@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-1966.htm" title="JavaScript如何将数组与值是数组的对象合并方法详解">JavaScript如何将数组与值是数组的对象合并方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1937.htm" title="VScode离线安装插件的方法">VScode离线安装插件的方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>