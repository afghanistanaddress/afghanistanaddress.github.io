<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1879.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>springMVC中的@RequestMapping注解 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">springMVC中的@RequestMapping注解</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="1%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8A%9F%E8%83%BD-toc" style="margin-left:80px;">1、@RequestMapping注解的功能</p> <p id="2%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%8D%E7%BD%AE-toc" style="margin-left:80px;">2、@RequestMapping注解的位置</p> <p id="3%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84value%E5%B1%9E%E6%80%A7-toc" style="margin-left:80px;">3、@RequestMapping注解的value属性</p> <p id="4%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84method%E5%B1%9E%E6%80%A7-toc" style="margin-left:80px;">4、@RequestMapping注解的method属性</p> <p id="5%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84params%E5%B1%9E%E6%80%A7%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89-toc" style="margin-left:80px;">5、@RequestMapping注解的params属性（了解）</p> <p id="6%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84headers%E5%B1%9E%E6%80%A7%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89-toc" style="margin-left:80px;">6、@RequestMapping注解的headers属性（了解）</p> <p id="7%E3%80%81SpringMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E7%9A%84%E8%B7%AF%E5%BE%84-toc" style="margin-left:80px;">7、SpringMVC支持ant风格的路径</p> <p id="8%E3%80%81SpringMVC%E6%94%AF%E6%8C%81%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E5%8D%A0%E4%BD%8D%E7%AC%A6%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89-toc" style="margin-left:80px;">8、SpringMVC支持路径中的占位符（重点）</p> <hr id="hr-toc"/> <p><span style="color:#fe2c24;">&nbsp;杨博超老师的笔记</span></p> <h3 id="1%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8A%9F%E8%83%BD">1、@RequestMapping注解的功能</h3> <p>从注解名称上我们可以看到，@RequestMapping注解的作用就是将请求和处理请求的控制器方法关联起来，建立映射关系。</p> <p>SpringMVC 接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</p> <h3 id="2%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%8D%E7%BD%AE">2、@RequestMapping注解的位置</h3> <p>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息</p> <p>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息</p> <pre><code class="language-java">@Controller @RequestMapping("/test") public class RequestMappingController {      //此时请求映射所映射的请求的请求路径为：/test/testRequestMapping  &nbsp; &nbsp;@RequestMapping("/testRequestMapping")  &nbsp; &nbsp;public String testRequestMapping(){  &nbsp; &nbsp; &nbsp; &nbsp;return "success";  &nbsp;  }  }</code></pre> <h3 id="3%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84value%E5%B1%9E%E6%80%A7">3、@RequestMapping注解的value属性</h3> <p>@RequestMapping注解的value属性通过请求的请求地址匹配请求映射</p> <p>@RequestMapping注解的value属性是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址所对应的请求</p> <p>@RequestMapping注解的value属性必须设置，至少通过请求地址匹配请求映射</p> <pre><code class="language-html">测试@RequestMapping的value属性-->/testRequestMapping<br> 测试@RequestMapping的value属性-->/test<br></code></pre> <pre><code class="language-java">@RequestMapping(  &nbsp; &nbsp; &nbsp; &nbsp;value = {"/testRequestMapping", "/test"} ) public String testRequestMapping(){  &nbsp; &nbsp;return "success"; }</code></pre> <h3 id="4%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84method%E5%B1%9E%E6%80%A7">4、@RequestMapping注解的method属性</h3> <p>@RequestMapping注解的method属性通过请求的请求方式（get或post）匹配请求映射</p> <p>@RequestMapping注解的method属性是一个RequestMethod类型的数组，表示该请求映射能够匹配多种请求方式的请求</p> <p>若当前请求的请求地址满足请求映射的value属性，但是请求方式不满足method属性，则浏览器报错405：Request method 'POST' not supported</p> <pre><code class="language-html">测试@RequestMapping的value属性-->/test<br> <form th:action="@{/test}" method="post">  &nbsp; &nbsp;<input type="submit"> </form></code></pre> <pre><code class="language-java">@RequestMapping(  &nbsp; &nbsp; &nbsp; &nbsp;value = {"/testRequestMapping", "/test"},  &nbsp; &nbsp; &nbsp; &nbsp;method = {RequestMethod.GET, RequestMethod.POST} ) public String testRequestMapping(){  &nbsp; &nbsp;return "success"; }</code></pre> <blockquote> <p>注：</p> <p>1、对于处理指定请求方式的控制器方法，SpringMVC中提供了@RequestMapping的派生注解</p> <p>处理get请求的映射-->@GetMapping</p> <p>处理post请求的映射-->@PostMapping</p> <p>处理put请求的映射-->@PutMapping</p> <p>处理delete请求的映射-->@DeleteMapping</p> <p>2、常用的请求方式有get，post，put，delete</p> <p>但是目前浏览器只支持get和post，若在form表单提交时，为method设置了其他请求方式的字符串（put或delete），则按照默认的请求方式get处理</p> <p>若要发送put和delete请求，则需要通过spring提供的过滤器HiddenHttpMethodFilter，在RESTful部分会讲到</p> </blockquote> <h3 id="5%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84params%E5%B1%9E%E6%80%A7%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89">5、@RequestMapping注解的params属性（了解）</h3> <p>@RequestMapping注解的params属性通过请求的请求参数匹配请求映射</p> <p>@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数和请求映射的匹配关系</p> <p>"param"：要求请求映射所匹配的请求必须携带param请求参数</p> <p>"!param"：要求请求映射所匹配的请求必须不能携带param请求参数</p> <p>"param=value"：要求请求映射所匹配的请求必须携带param请求参数且param=value</p> <p>"param!=value"：要求请求映射所匹配的请求必须携带param请求参数但是param!=value</p> <pre><code class="language-html">测试@RequestMapping的params属性-->/test<br></code></pre> <pre><code class="language-java">@RequestMapping(  &nbsp; &nbsp; &nbsp; &nbsp;value = {"/testRequestMapping", "/test"}  &nbsp; &nbsp; &nbsp;  ,method = {RequestMethod.GET, RequestMethod.POST}  &nbsp; &nbsp; &nbsp;  ,params = {"username","password!=123456"} ) public String testRequestMapping(){  &nbsp; &nbsp;return "success"; }</code></pre> <blockquote> <p>注：</p> <p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足params属性，此时页面回报错400：Parameter conditions "username, password!=123456" not met for actual request parameters: username={admin}, password={123456}</p> </blockquote> <h3 id="6%E3%80%81%40RequestMapping%E6%B3%A8%E8%A7%A3%E7%9A%84headers%E5%B1%9E%E6%80%A7%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89">6、@RequestMapping注解的headers属性（了解）</h3> <p>@RequestMapping注解的headers属性通过请求的请求头信息匹配请求映射</p> <p>@RequestMapping注解的headers属性是一个字符串类型的数组，可以通过四种表达式设置请求头信息和请求映射的匹配关系</p> <p>"header"：要求请求映射所匹配的请求必须携带header请求头信息</p> <p>"!header"：要求请求映射所匹配的请求必须不能携带header请求头信息</p> <p>"header=value"：要求请求映射所匹配的请求必须携带header请求头信息且header=value</p> <p>"header!=value"：要求请求映射所匹配的请求必须携带header请求头信息且header!=value</p> <p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足headers属性，此时页面显示404错误，即资源未找到</p> <h3 id="7%E3%80%81SpringMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E7%9A%84%E8%B7%AF%E5%BE%84">7、SpringMVC支持ant风格的路径</h3> <p>？：表示任意的单个字符</p> <p>*：表示任意的0个或多个字符</p> <p>**：表示任意的一层或多层目录</p> <p>注意：在使用**时，只能使用/**/xxx的方式</p> <h3 id="8%E3%80%81SpringMVC%E6%94%AF%E6%8C%81%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E5%8D%A0%E4%BD%8D%E7%AC%A6%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89">8、SpringMVC支持路径中的占位符（重点）</h3> <p>原始方式：/deleteUser?id=1</p> <p>rest方式：/deleteUser/1</p> <p>SpringMVC路径中的占位符常用于RESTful风格中，当请求路径中将某些数据通过路径的方式传输到服务器中，就可以在相应的@RequestMapping注解的value属性中通过占位符{xxx}表示传输的数据，再通过@PathVariable注解，将占位符所表示的数据赋值给控制器方法的形参</p> <pre><code class="language-html">测试路径中的占位符-->/testRest<br></code></pre> <pre><code class="language-java">@RequestMapping("/testRest/{id}/{username}") public String testRest(@PathVariable("id") String id, @PathVariable("username") String username){  &nbsp; &nbsp;System.out.println("id:"+id+",username:"+username);  &nbsp; &nbsp;return "success"; } //最终输出的内容为-->id:1,username:admin</code></pre> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1878.htm">echart整体图形大小调整</a></p>
                                                        <p>下一个：<a href="/html/category/article-1880.htm">React&#8217;s mouseEvent doesn&#8217;t have offsetX/offsetY</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7639.htm" title="想做猪饲料代理（猪饲料怎么代理）">想做猪饲料代理（猪饲料怎么代理）</a></li>
                        <li class="py-2"><a href="/html/category/article-7685.htm" title="开个动物医院需要办理那些证件和手续呢（开动物医院需要什么）">开个动物医院需要办理那些证件和手续呢（开动物医院需要什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-7224.htm" title="开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）">开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）</a></li>
                        <li class="py-2"><a href="/html/category/article-6765.htm" title="领养边牧会对新主人忠心吗（领养边牧犬）">领养边牧会对新主人忠心吗（领养边牧犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-6581.htm" title="同城宠物狗免费领养在哪里（有没有同城领养宠物的小程序）">同城宠物狗免费领养在哪里（有没有同城领养宠物的小程序）</a></li>
                        <li class="py-2"><a href="/html/category/article-7409.htm" title="学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）">学宠物美容师怎么样,有前景吗（学宠物美容有前途吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7363.htm" title="3c认证的加热手套有哪些品牌(3c认证的加热手套有哪些牌子)">3c认证的加热手套有哪些品牌(3c认证的加热手套有哪些牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-6949.htm" title="北京宠物鸟医院（北京哪家宠物医院能看鸟）">北京宠物鸟医院（北京哪家宠物医院能看鸟）</a></li>
                        <li class="py-2"><a href="/html/category/article-7178.htm" title="大型饲料颗粒机（大型饲料颗粒机多少钱一台价格）">大型饲料颗粒机（大型饲料颗粒机多少钱一台价格）</a></li>
                        <li class="py-2"><a href="/html/category/article-7133.htm" title="猫咪疫苗可以自己打吗怎么可以自己（猫咪疫苗自己能打吗）">猫咪疫苗可以自己打吗怎么可以自己（猫咪疫苗自己能打吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>