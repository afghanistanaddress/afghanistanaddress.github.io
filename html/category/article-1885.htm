<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1885.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Java中的base64编码器_java_ - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Java中的base64编码器_java_</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<h2>简介</h2> <p>什么是Base64编码呢？在回答这个问题之前，我们需要了解一下计算机中文件的分类，对于计算机来说文件可以分为两类，一类是文本文件，一类是二进制文件。</p> <p>对于二进制文件来说，其内容是用二进制来表示的，对于人类是不可立马理解的。如果你尝试用文本编辑器打开二进制文件，可能会看到乱码。这是因为二进制文件的编码方式和文本文件的编码方式是不一样的，所以当文本编辑器尝试将二进制文件翻译成为文本内容的时候，就会出现乱码。</p> <p>对于文本文件来说，也有很多种编码方式，比如最早的ASCII编码和目前常用的UTF-8和UTF-16等编码方式。即使是文本文件，如果你使用不同的编码方式打开，也可能会看到乱码。</p> <p>所以不管是文本文件还是二进制文件也好，都需要进行编码格式的统一。也就是说写入的编码是什么样子的，那么数据读取的编码也应该和其匹配。</p> <p>Base64编码实际上就是将二进制数据编码成为可视化ASCII字符的一种编码方式。</p> <p>为什么会有这样的要求呢？</p> <p>我们知道计算机世界的发展不是一蹴而就的，它是一个慢慢成长的过程，对于字符编码来说，最早只支持ASCII编码，后面才扩展到Unicode等。所以对于很多应用来说除了ASCII编码之外的其他编码格式是不支持的，那么如何在这些系统中展示非ASCII code呢？</p> <p>解决的方式就是进行编码映射，将非ASCII的字符映射成为ASCII的字符。而base64就是这样的一种编码方式。</p> <p>常见的使用Base64的地方就是在web网页中，有时候我们需要在网页中展示图片，那么可以将图片进行base64编码，然后填充到html中。</p> <p>还有一种应用就是将文件进行base64编码，然后作为邮件的附件进行发送。</p> <h2>JAVA对base64的支持</h2> <p>既然base64编码这么好用，接下来我们来看一下JAVA中的base64实现。</p> <p>java中有一个对应的base64实现，叫做java.util.Base64。这个类是Base64的工具类，是JDK在1.8版本引入的。</p> <p>Base64中提供了三个getEncoder和getDecoder方法，通过获取对应的Encoder和Decoder，然后就可以调用Encoder的encode和decode方法对数据进行编码和解码，非常的方便。</p> <p>我们先来看一下Base64的基本使用例子：</p> <div class="ay1code"> <pre class="brush:java;"> // 使用encoder进行编码   String encodedString = Base64.getEncoder().encodeToString("what is your name baby?".getBytes("utf-8"));   System.out.println("Base64编码过后的字符串 :" + encodedString);     // 使用encoder进行解码   byte[] decodedBytes = Base64.getDecoder().decode(encodedString);     System.out.println("解码过后的字符串: " + new String(decodedBytes, "utf-8"));</pre> </div> <p>作为一个工具类，JDK中提供的Base64工具类还是很好用的。</p> <p>这里就不详细讲解它的使用，本篇文章主要分析JDK中Base64是怎么实现的。</p> <h2>JDK中Base64的分类和实现</h2> <p>JDK中Base64类有提供了三个encoder方法，分别是getEncoder,getUrlEncoder和getMimeEncoder:</p> <div class="ay1code"> <pre class="brush:java;">    public static Encoder getEncoder() {           return Encoder.RFC4648;      }        public static Encoder getUrlEncoder() {           return Encoder.RFC4648_URLSAFE;      }        public static Encoder getMimeEncoder() {          return Encoder.RFC2045;      }</pre> </div> <p>同样的，它也提供了三个对应的decoder，分别是getDecoder，getUrlDecoder，getMimeDecoder：</p> <div class="ay1code"> <pre class="brush:java;">    public static Decoder getDecoder() {           return Decoder.RFC4648;      }        public static Decoder getUrlDecoder() {           return Decoder.RFC4648_URLSAFE;      }        public static Decoder getMimeDecoder() {           return Decoder.RFC2045;      }</pre> </div> <p>从代码中可以看出，这三种编码分别对应的是RFC4648，RFC4648_URLSAFE和RFC2045。</p> <p>这三种都属于base64编码的变体，我们看下他们有什么区别：</p> <table> <tbody> <tr> <th>编码名称</th> <th>编码字符</th> <th>编码字符</th> <th>编码字符</th> </tr> <tr> <td> </td> <td>第62位</td> <td>第63位</td> <td>补全符</td> </tr> <tr> <td>RFC 2045: Base64 transfer encoding for MIME</td> <td><code>+</code></td> <td><code>/</code></td> <td> <code>=</code> mandatory</td> </tr> <tr> <td>RFC 4648: base64 (standard)</td> <td><code>+</code></td> <td><code>/</code></td> <td> <code>=</code> optional</td> </tr> <tr> <td>RFC 4648: base64url (URL- and filename-safe standard)</td> <td><code>-</code></td> <td><code>_</code></td> <td> <code>=</code> optional</td> </tr> </tbody> </table> <p>可以看到base64和Base64url的区别是第62位和第63位的编码字符不一样，而base64 for MIME跟base64的区别是补全符是否是强制的。</p> <p>另外，对于Basic和base64url来说，不会添加line separator字符，而base64 for MIME在一行超出76字符之后，会添加'\r' 和 '\n'作为line separator。</p> <p>最后，如果在解码的过程中，发现有不存于Base64映射表中的字符的处理方式也不一样，base64和Base64url会直接拒绝，而base64 for MIME则会忽略。</p> <p>base64和Base64url的区别可以通过下面两个方法来看出：</p> <div class="ay1code"> <pre class="brush:java;">        private static final char[] toBase64 = {              'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',              'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',              'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',              'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',              '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'          };</pre> </div> <div class="ay1code"> <pre class="brush:java;">        private static final char[] toBase64URL = {              'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',              'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',              'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',              'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',              '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'          };</pre> </div> <p>而对MIME来说，定义了一个一行的最大字符个数,和换行符：</p> <div class="ay1code"> <pre class="brush:java;">        private static final int MIMELINEMAX = 76;          private static final byte[] CRLF = new byte[] {'\r', '\n'};</pre> </div> <h2>Base64的高级用法</h2> <p>一般情况下我们用Base64进行编码的对象长度是固定的，我们只需要将输入对象转换成为byte数组即可调用encode或者decode的方法。</p> <p>但是在某些情况下我们需要对流数据进行转换，这时候就可以用到Base64中提供的两个对Stream进行wrap的方法：</p> <div class="ay1code"> <pre class="brush:java;">        public OutputStream wrap(OutputStream os) {              Objects.requireNonNull(os);              return new EncOutputStream(os, isURL ? toBase64URL : toBase64,                                         newline, linemax, doPadding);          }</pre> </div> <div class="ay1code"> <pre class="brush:java;">        public InputStream wrap(InputStream is) {              Objects.requireNonNull(is);              return new DecInputStream(is, isURL ? fromBase64URL : fromBase64, isMIME);          }</pre> </div> <p>这两个方法分别对应于encoder和decoder。</p> <h2>总结</h2> <p>以上就是JDK中对Base64的实现和使用，虽然base64的变种有很多种，但是JDK中的Base64只实现了其中用处最为广泛的3种。大家在使用的时候一定要区分具体是那种Base64的实现方式，以免出现问题。</p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1884.htm">Springboot：拦截器和过滤器</a></p>
                                                        <p>下一个：<a href="/html/category/article-1886.htm">TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1895.htm" title="Vue 学习  之 封装模块方法">Vue 学习  之 封装模块方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1966.htm" title="JavaScript如何将数组与值是数组的对象合并方法详解">JavaScript如何将数组与值是数组的对象合并方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1900.htm" title="网页盒子水平布局方式">网页盒子水平布局方式</a></li>
                        <li class="py-2"><a href="/html/category/article-2252.htm" title="python向hive插入数据遇到的坑">python向hive插入数据遇到的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-3133.htm" title="微服务与领域驱动设计，架构实践总结">微服务与领域驱动设计，架构实践总结</a></li>
                        <li class="py-2"><a href="/html/category/article-1897.htm" title="MySQL系列复习（9）分组查询（group by、having）">MySQL系列复习（9）分组查询（group by、having）</a></li>
                        <li class="py-2"><a href="/html/category/article-1937.htm" title="VScode离线安装插件的方法">VScode离线安装插件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4108.htm" title="C#关于在返回值为Task方法中使用Thread.Sleep引发的思考">C#关于在返回值为Task方法中使用Thread.Sleep引发的思考</a></li>
                        <li class="py-2"><a href="/html/category/article-1903.htm" title="基于JDK的动态代理原理分析">基于JDK的动态代理原理分析</a></li>
                        <li class="py-2"><a href="/html/category/article-1899.htm" title="Azure DevOps通过SSH部署上传到服务器的应用">Azure DevOps通过SSH部署上传到服务器的应用</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>