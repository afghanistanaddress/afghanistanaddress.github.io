<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1887.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Vue.Draggable 文档总结 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Vue.Draggable 文档总结</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1 id="vuedraggable学习总结">Vue.Draggable学习总结</h1> <p>Draggable为基于Sortable.js的vue组件，用以实现拖拽功能。</p> <h2 id="特性">特性</h2> <ul> <li>支持触摸设备</li> <li>支持拖拽和选择文本</li> <li>支持智能滚动</li> <li>支持不同列表之间的拖拽</li> <li>不以jQuery为基础</li> <li>和视图模型同步刷新</li> <li>和vue2的国度动画兼容</li> <li>支持撤销操作</li> <li>当需要完全控制时，可以抛出所有变化</li> <li>可以和现有的UI组件兼容</li> </ul> <h2 id="安装">安装</h2> <pre class="prettyprint"><code class="hljs cmake">npm <span class="hljs-keyword">install</span> vuedraggable</code></pre> <h2 id="引入">引入</h2> <pre class="prettyprint"><code class="language-js hljs">import draggable from <span class="hljs-string">'vuedraggable'</span></code></pre> <h2 id="基础用法">基础用法</h2> <p>定义一个json串 <code>list</code>，实现它的拖拽排序。</p> <pre class="prettyprint"><code class="language-html hljs"><span class="hljs-tag">&lt;<span class="hljs-title">template</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-title">div</span>&gt;</span>     <span class="hljs-comment">&lt;!-- 调用组件  --&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-title">draggable</span> <span class="hljs-attribute">element</span>=<span class="hljs-value">"ul"</span> <span class="hljs-attribute">v-model</span>=<span class="hljs-value">"list"</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-title">li</span> <span class="hljs-attribute">v-for</span>=<span class="hljs-value">"item in list"</span>&gt;</span>{<!-- -->{item.name}}<span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>     <span class="hljs-tag">&lt;/<span class="hljs-title">draggable</span>&gt;</span>     <span class="hljs-comment">&lt;!-- 输出list数据 --&gt;</span>     {<!-- -->{list}}   <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">template</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript"> <span class="hljs-comment">// 引入拖拽组件</span> import draggable from <span class="hljs-string">'vuedraggable'</span> export <span class="hljs-keyword">default</span> {   name: <span class="hljs-string">'demo'</span>,   components: {     <span class="hljs-comment">//调用组件</span>     draggable,   },   data () {     <span class="hljs-keyword">return</span> {       list:[         {           id: <span class="hljs-number">1</span>,           name: <span class="hljs-string">'a'</span>         },         {           id: <span class="hljs-number">2</span>,           name: <span class="hljs-string">'b'</span>         },         {           id: <span class="hljs-number">3</span>,           name: <span class="hljs-string">'c'</span>         },         {           id: <span class="hljs-number">4</span>,           name: <span class="hljs-string">'d'</span>         },         {           id: <span class="hljs-number">5</span>,           name: <span class="hljs-string">'e'</span>         },         {           id: <span class="hljs-number">6</span>,           name: <span class="hljs-string">'f'</span>         },       ]     }   }, } </span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code></pre> <h2 id="属性">属性</h2> <h3 id="value">value</h3> <p>Array，非必须，默认为null</p> <ul> <li>用于实现拖拽的list，通常和内部v-for循环的数组为同一数组。</li> <li>最好使用vuex来实现传入。</li> <li>不是直接使用，而是通过<code>v-model</code>引入。</li> </ul> <pre class="prettyprint"><code class="language-html hljs"><span class="hljs-tag">&lt;<span class="hljs-title">draggable</span> <span class="hljs-attribute">v-model</span>=<span class="hljs-value">"myArray"</span>&gt;</span></code></pre> <h3 id="list">list</h3> <p>Array，非必须，默认为null</p> <ul> <li>就是<code>value</code>的替代品。</li> <li>和<code>v-model</code>不能共用</li> <li>从表现上没有看出不同</li> </ul> <h3 id="element">element</h3> <p>String，默认div</p> <ul> <li>就是<code>&lt;draggable&gt;</code>标签在渲染后展现出来的标签类型</li> <li>也是包含拖动列表和插槽的外部标签</li> <li>可以用来兼容UI组件</li> </ul> <h3 id="options">options</h3> <p>Object</p> <ul> <li>配置项</li> <li>group: string or array 分组用的，同一组的不同list可以相互拖动</li> <li>sort: boolean 定义是否可以拖拽</li> <li>delay:number 定义鼠标选中列表单元可以开始拖动的延迟时间</li> <li>touchStartThreshold:number (不清楚)</li> <li>disabled: boolean 定义是否此sortable对象是否可用，为true时sortable对象不能拖放排序等功能</li> <li>store:</li> <li>animation: umber 单位:ms 动画时间</li> <li>handle: selector 格式为简单css选择器的字符串，使列表单元中符合选择器的元素成为拖动的手柄，只有按住拖动手柄才能使列表单元进行拖动</li> <li>filter: selector 格式为简单css选择器的字符串，定义哪些列表单元不能进行拖放，可设置为多个选择器，中间用“，”分隔</li> <li>preventOnFilter: 当拖动<code>filter</code>时是否触发<code>event.preventDefault()</code>默认触发</li> <li>draggable: selector 格式为简单css选择器的字符串，定义哪些列表单元可以进行拖放</li> <li>ghostClass: selector 格式为简单css选择器的字符串，当拖动列表单元时会生成一个副本作为影子单元来模拟被拖动单元排序的情况，此配置项就是来给这个影子单元添加一个class，我们可以通过这种方式来给影子元素进行编辑样式</li> <li>chosenClass: selector 格式为简单css选择器的字符串，目标被选中时添加</li> <li>dragClass:selector 格式为简单css选择器的字符串，目标拖动过程中添加</li> <li>forceFallback: boolean 如果设置为true时，将不使用原生的html5的拖放，可以修改一些拖放中元素的样式等</li> <li>fallbackClass： string 当forceFallback设置为true时，拖放过程中鼠标附着单元的样式</li> <li>dataIdAttr： <code>data-id</code> </li> <li>scroll：boolean当排序的容器是个可滚动的区域，拖放可以引起区域滚动</li> <li>scrollFn：function(offsetX, offsetY, originalEvent, touchEvt, hoverTargetEl) { … } 用于自定义滚动条的适配</li> <li>scrollSensitivity: number 就是鼠标靠近边缘多远开始滚动默认30</li> <li>scrollSpeed: number 滚动速度</li> </ul> <p>函数配置</p> <ul> <li>setData: 设置值时的回调函数</li> <li>onChoose: 选择单元时的回调函数</li> <li>onStart: 开始拖动时的回调函数</li> <li>onEnd: 拖动结束时的回调函数</li> <li>onAdd: 添加单元时的回调函数</li> <li>onUpdate: 排序发生变化时的回调函数</li> <li>onRemove: 单元被移动到另一个列表时的回调函数</li> <li>onFilter: 尝试选择一个被filter过滤的单元的回调函数</li> <li>onMove: 移动单元时的回调函数</li> <li>onClone: clone时的回调函数</li> <li>以上函数对象的属性：  <ul> <li>to: 移动到的列表的容器</li> <li>from：来源列表容器</li> <li>item: 被移动的单元</li> <li>clone: 副本的单元</li> <li>oldIndex：移动前的序号</li> <li>newIndex：移动后的序号</li> </ul> </li> </ul> <h3 id="clone">clone</h3> <p>function,默认值: 无处理</p> <ul> <li>这一项要配合着<code>options</code>的<code>group</code>项的<code>pull</code>项处理，当<code>pull:'clone</code>时的拖拽的回调函数’</li> <li>就是克隆的意思。</li> <li>可以理解为正常的拖拽变成了复制。</li> <li>当为<code>true</code>时克隆</li> </ul> <h3 id="move">move</h3> <p>function,默认值:null</p> <ul> <li>就是拖拽项时调用的函数</li> <li>用来确定拖拽是否生效</li> <li>返回null时可以生效</li> <li>可以通过函数判断</li> <li>有一个参数:<code>evt</code>  <ul> <li> <code>evt</code>为object</li> <li>draggedContext: 被拖拽元素的上下文  <ul> <li>index:拖拽元素的指针</li> <li>element: 拖拽数据本身</li> <li>futureIndex: 拖动后的index</li> </ul> </li> <li>relatedContext: 拖入区域的上下文  <ul> <li>index: 目标元素的index</li> <li>element:目标数据本身</li> <li>list: 拖入的列表</li> <li>component:目标组件</li> </ul> </li> </ul> </li> </ul> <pre class="prettyprint"><code class="language-html hljs"><span class="hljs-tag">&lt;<span class="hljs-title">draggable</span> <span class="hljs-attribute">element</span>=<span class="hljs-value">"ul"</span> <span class="hljs-attribute">v-model</span>=<span class="hljs-value">"list"</span> <span class="hljs-attribute">:move</span>=<span class="hljs-value">'allow'</span>&gt;</span> ... methods: {   allow(evt) {     console.log(evt.draggedContext.index)     console.log(evt.draggedContext.element)     console.log(evt.draggedContext.futureIndex)     console.log(evt.relatedContext.index)     console.log(evt.relatedContext.element)     console.log(evt.relatedContext.list)     console.log(evt.relatedContext.component)     return (evt.draggedContext.element.name!== 'b')   } }</code></pre> <h3 id="componentdata">componentData</h3> <p>Object,默认值:null</p> <ul> <li>用来结合UI组件的，可以理解为代理了UI组件的定制信息</li> <li>包含两项:<code>props</code>和<code>on</code>  <ul> <li> <code>props</code>用来代理UI组件需要绑定的属性（:）</li> <li> <code>on</code>用来代理UI组件需要绑定的事件（@）</li> </ul> </li> </ul> <pre class="prettyprint"><code class="language-html hljs"><span class="hljs-tag">&lt;<span class="hljs-title">draggable</span> <span class="hljs-attribute">element</span>=<span class="hljs-value">"el-collapse"</span> <span class="hljs-attribute">:list</span>=<span class="hljs-value">"list"</span> <span class="hljs-attribute">:component-data</span>=<span class="hljs-value">"getComponentData()"</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-title">el-collapse-item</span> <span class="hljs-attribute">v-for</span>=<span class="hljs-value">"e in list"</span> <span class="hljs-attribute">:title</span>=<span class="hljs-value">"e.title"</span> <span class="hljs-attribute">:name</span>=<span class="hljs-value">"e.name"</span> <span class="hljs-attribute">:key</span>=<span class="hljs-value">"e.name"</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-title">div</span>&gt;</span>{<!-- -->{e.description}}<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-title">el-collapse-item</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">draggable</span>&gt;</span></code></pre> <pre class="prettyprint"><code class="language-js hljs">methods: {   handleChange() {     console.log(<span class="hljs-string">'changed'</span>);   },   inputChanged(value) {     <span class="hljs-keyword">this</span>.activeNames = value;   },   getComponentData() {     <span class="hljs-keyword">return</span> {       on: {         change: <span class="hljs-keyword">this</span>.handleChange,         input: <span class="hljs-keyword">this</span>.inputChanged       },       props: {         value: <span class="hljs-keyword">this</span>.activeNames       }     };   } }</code></pre> <h2 id="事件">事件</h2> <p>有以下几种</p> <pre class="prettyprint"><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">start</span>, <span class="hljs-keyword">add</span>, remove, <span class="hljs-keyword">update</span>, <span class="hljs-keyword">end</span>, choose, sort, filter, clone</span></code></pre> <p>参数带有如下属性：</p> <ul> <li>add: 包含被添加到列表的元素  <ul> <li>newIndex: 添加后的新索引</li> <li>element: 被添加的元素</li> </ul> </li> <li>removed: 从列表中移除的元素  <ul> <li>oldIndex: 移除前的索引</li> <li>element: 被移除的元素</li> </ul> </li> <li>moved：内部移动的  <ul> <li>newIndex: 改变后的索引</li> <li>oldIndex: 改变前的索引</li> <li>element: 被移动的元素</li> </ul> </li> </ul> <h2 id="插槽">插槽</h2> <p>提供一个footer插槽，在排序列表之下。 <br /> 永远位于最下方。</p> <pre class="prettyprint"><code class="language-html hljs"><span class="hljs-tag">&lt;<span class="hljs-title">draggable</span> <span class="hljs-attribute">v-model</span>=<span class="hljs-value">"myArray"</span> <span class="hljs-attribute">:options</span>=<span class="hljs-value">"{draggable:'.item'}"</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">v-for</span>=<span class="hljs-value">"element in myArray"</span> <span class="hljs-attribute">:key</span>=<span class="hljs-value">"element.id"</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"item"</span>&gt;</span>         {<!-- -->{element.name}}     <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-title">button</span> <span class="hljs-attribute">slot</span>=<span class="hljs-value">"footer"</span> @<span class="hljs-attribute">click</span>=<span class="hljs-value">"addPeople"</span>&gt;</span>Add<span class="hljs-tag">&lt;/<span class="hljs-title">button</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">draggable</span>&gt;</span></code></pre> </p></div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1886.htm">TensorFlow运行出错：UnicodeEncodeError: &#8216;utf-8&#8217; codec can&#8217;t encode character &#8216;\udcce&#8217; in position 2559: s</a></p>
                                                        <p>下一个：<a href="/html/category/article-1888.htm">pandas 分批读取大量数据</a></p>
                                                    </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1896.htm" title="一、重写了equals为什么还要重写hashcode">一、重写了equals为什么还要重写hashcode</a></li>
                        <li class="py-2"><a href="/html/category/article-1862.htm" title="将无效字符串作为参数传递给STR_TO_DATE()函数时，MySQL将返回什么？">将无效字符串作为参数传递给STR_TO_DATE()函数时，MySQL将返回什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-1880.htm" title="React&#8217;s mouseEvent doesn&#8217;t have offsetX/offsetY">React&#8217;s mouseEvent doesn&#8217;t have offsetX/offsetY</a></li>
                        <li class="py-2"><a href="/html/category/article-1885.htm" title="Java中的base64编码器_java_">Java中的base64编码器_java_</a></li>
                        <li class="py-2"><a href="/html/category/article-1878.htm" title="echart整体图形大小调整">echart整体图形大小调整</a></li>
                        <li class="py-2"><a href="/html/category/article-1882.htm" title="yum安装nginx后报错nginx: [error] open() “/run/nginx.pid“ failed">yum安装nginx后报错nginx: [error] open() “/run/nginx.pid“ failed</a></li>
                        <li class="py-2"><a href="/html/category/article-1861.htm" title="如何从javascript中的集合中删除所有元素？">如何从javascript中的集合中删除所有元素？</a></li>
                        <li class="py-2"><a href="/html/category/article-1910.htm" title="[转载] Python中format函数用法">[转载] Python中format函数用法</a></li>
                        <li class="py-2"><a href="/html/category/article-1909.htm" title="Redis的高并发是如何支持的">Redis的高并发是如何支持的</a></li>
                        <li class="py-2"><a href="/html/category/article-1877.htm" title="Python  一网打尽&lt;排序算法&gt;之堆排序算法中的树">Python  一网打尽&lt;排序算法&gt;之堆排序算法中的树</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>