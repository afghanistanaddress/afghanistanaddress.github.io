<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1951.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>设计模式学习笔记（十三）组合模式及其在树形结构中的应用 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">设计模式学习笔记（十三）组合模式及其在树形结构中的应用</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p>组合（Composite）模式，又叫做树形模式，主要用来处理树形结构数据。是将一组对象组织成树形结构，以表示一种“部分-整体”的层次结构。让客户端可以统一单个对象和组合对象的处理逻辑。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b9ea23635622a47e04c77ada11664e47.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <h2 id="一组合模式介绍">一、组合模式介绍</h2> <p>组合模式通过以树形结构来表示“部分-整体”，使得用户对叶对象和组合对象的使用具有一致性。也就是说在组合模式中，整个树形结构的对象都属于同一种类型，用户可以对叶对象和组合对象统一处理。</p> <h3 id="11-组合模式分类">1.1 组合模式分类</h3> <p>组合模式主要有透明式和安全式两种分类，下面来分别说明</p> <h4 id="111-透明式组合模式">1.1.1 透明式组合模式</h4> <p>在该方式中，抽象构件声明了所有子类中的全部方法，这样实现抽象构件接口的所有子类都具备了全部方法，这样的好处是叶节点和枝节点对于外界没有任何区别，它们具备了完全一致的接口。但是对于叶节点有些本身不具备的方法，就可能会有安全隐患（空指针异常等）。其结构类图如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/36eb1e1a737c38d428af17278929841c.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <ul> <li><code>Component</code>：抽象构件，为叶节点和树枝节点声明公共接口，以及访问和管理子类的接口</li> <li><code>Composite</code>：树枝构件，组合中的分支节点对象，作用是存储和管理子部件</li> <li><code>Leaf</code>：树叶构件，组合中的叶节点对象，用于继承和实现抽象构件</li> <li><code>Client</code>：客户端</li> </ul> <h4 id="112-安全式组合模式">1.1.2 安全式组合模式</h4> <p>前面提到透明式组合模式中，因为抽象构件声明所有子类方法，有可能会造成安全问题。所以在安全式中，将管理叶节点的方法转移到树枝构件中，抽象构件和树叶构件没有对子对象的管理方法，这样就避免了透明式组合模式中的安全问题。但是由于树叶和树枝构件有不同的接口，因此在使用时，就不能将两种构件一概而论，对于客户端调用方而言，就失去了透明性。其结构类图如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8d531fdd757268a9e70925616f3756fc.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <ul> <li><code>Component</code>：抽象构件，为叶节点和树枝节点声明公共接口，没有访问和管理子类的接口</li> <li><code>Composite</code>：树枝构件，组合中的分支节点对象，作用是存储和管理子部件</li> <li><code>Leaf</code>：树叶构件，组合中的叶节点对象，没有对子类的管理方法</li> <li><code>Client</code>：客户端</li> </ul> <h3 id="12-组合模式实现">1.2 组合模式实现</h3> <p>根据上面的类图，可以实现如下代码：</p> <h4 id="121-透明式组合模式实现">1.2.1 透明式组合模式实现</h4> <pre><code class="language-java">/**  * @description: 透明式抽象构件  * @author: wjw  * @date: 2022/4/3  */ public interface Component {      /**公共操作方法**/    void operation();      /**      * 添加构件      * @param c 组合模式中的构件      */     void add(Component c);      /**      * 移除构件      * @param c 组合模式中的构件      */     void remove(Component c);      /**      * 获得子对象      * @param t 子对象序号      * @return  子对象      */     Component getChild(int t);  }  /**  * @description: 树枝节点  * @author: wjw  * @date: 2022/4/3  */ public class Composite implements Component{      private ArrayList&lt;Component&gt; children = new ArrayList&lt;&gt;();      @Override     public void operation() {         for (Component child : children) {             child.operation();         }     }      @Override     public void add(Component c) {         children.add(c);     }      @Override     public void remove(Component c) {         children.remove(c);     }      @Override     public Component getChild(int t) {         return children.get(t);     } }  /**  * @description: 树叶节点  * @author: wjw  * @date: 2022/4/3  */ public class Leaf implements Component{     private String name;      public Leaf(String name) {         this.name = name;     }      @Override     public void operation() {         System.out.println("我是树叶节点:" + name);     }      @Override     public void add(Component c) {      }      @Override     public void remove(Component c) {      }      @Override     public Component getChild(int t) {         return null;     } } /**  * @description: 客户端类  * @author: wjw  * @date: 2022/4/3  */ public class Client {     public static void main(String[] args) {         Component component = new Composite();         Component leaf1 = new Leaf("1");         Component leaf2 = new Leaf("2");         component.add(leaf1);         component.add(leaf2);         component.operation();         component.getChild(1).operation();         //这里树叶构件能调用add方法就会造成安全隐患         leaf1.add(leaf1);     } }</code></pre> <p>客户端运行结果：</p> <pre><code>我是树叶节点:1 我是树叶节点:2 我是树叶节点:2</code></pre> <h4 id="122-安全式组合模式实现">1.2.2 安全式组合模式实现</h4> <pre><code class="language-java">/**  * @description: 安全式抽象构件  * @author: wjw  * @date: 2022/4/3  */ public interface Component {      /**公共操作方法**/    void operation(); }  /**  * @description: 树枝节点  * @author: wjw  * @date: 2022/4/3  */ public class Composite implements Component{      private ArrayList&lt;Component&gt; children = new ArrayList&lt;&gt;();      @Override     public void operation() {         for (Component child : children) {             child.operation();         }     }       public void add(Component c) {         children.add(c);     }       public void remove(Component c) {         children.remove(c);     }       public Component getChild(int t) {         return children.get(t);     } }  /**  * @description: 树叶节点  * @author: wjw  * @date: 2022/4/3  */ public class Leaf implements Component{     private String name;      public Leaf(String name) {         this.name = name;     }      @Override     public void operation() {         System.out.println("我是树叶节点:" + name);     }  }  /**  * @description: 客户端类  * @author: wjw  * @date: 2022/4/3  */ public class Client {     public static void main(String[] args) {         Composite composite = new Composite();         Leaf leaf1 = new Leaf("1");         Leaf leaf2 = new Leaf("2");         composite.add(leaf1);         composite.add(leaf2);         composite.operation();     } }</code></pre> <p>客户端测试结果：</p> <pre><code>我是树叶节点:1 我是树叶节点:2</code></pre> <h2 id="二组合模式应用场景">二、组合模式应用场景</h2> <p>组合模式常见的应用场景主要是出现树形结构的地方，比如文件目录，公司人员架构图等等</p> <h3 id="21-公司人员架构">2.1 公司人员架构</h3> <p>比如按照部门和员工组织成树形结构，可以统一处理薪资：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/88eb4c6b528e1e1747186cc6559c4f98.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <pre><code class="language-java">/**  * @description: 人力资源抽象构件  * @author: wjw  * @date: 2022/4/3  */ public abstract class HumanResource {     protected long id;     protected double salary;      public HumanResource(long id) {         this.id = id;     }      public long getId() {         return id;     }      /**      * 计算工资      * @return 工资结果      */     public abstract double calculateSalary(); }  /**  * @description: 部门树枝构件  * @author: wjw  * @date: 2022/4/3  */ public class Department extends HumanResource{      private List&lt;HumanResource&gt; humanResources = new ArrayList&lt;&gt;();      public Department(long id) {         super(id);     }      @Override     public double calculateSalary() {         double totalSalary = 0;         for (HumanResource humanResource : humanResources) {             totalSalary += humanResource.calculateSalary();         }         this.salary = totalSalary;         return totalSalary;     }      public void addHumanResource(HumanResource humanResource) {         humanResources.add(humanResource);     } } /**  * @description: 员工树叶构件  * @author: wjw  * @date: 2022/4/3  */ public class Employee extends HumanResource{      public Employee(long id, double salary) {         super(id);         this.salary = salary;     }      @Override     public double calculateSalary() {         return salary;     } }</code></pre> <h2 id="参考资料">参考资料</h2> <p>《设计模式之美》</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://c.biancheng.net/view/1373.html"  target="_blank" rel="nofollow">http://c.biancheng.net/view/1373.html</a></p> <p>《Java 设计模式》</p> <p>《设计模式：可复用面向对象软件的基础》</p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1938.htm">JavaScript数字数组的均等分割方法详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-1952.htm">深入理解Spring的@Order注解和Ordered接口</a></p>
                                                    </div>
                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-1881.htm">【Azure 应用服务】Azure Function 启用 Managed Identity后， Powershell Funciton出现 ERROR: ManagedIdentityCredential authentication failed</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1874.htm">Vue中的插槽</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1863.htm">为vscode开发一款svn右键菜单扩展</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1851.htm">PHP可见性模式</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1816.htm">Sentinel基础应用详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1805.htm">【异常报错】com.rabbitmq.client.ShutdownSignalException: channel error； protocol method: #method＜channel.c</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1794.htm">vue使用trim修饰符去掉空格</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1764.htm">android 自定义单指旋转转盘 二（类似抽奖转盘）</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1723.htm">springboot读取resources下文件方式</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1715.htm">C#把EXCEL数据转换成DataTable_C#教程_</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4454.htm" title="闲鱼无货源怎么弄（闲鱼无货源怎么卖货）">闲鱼无货源怎么弄（闲鱼无货源怎么卖货）</a></li>
                        <li class="py-2"><a href="/html/category/article-3768.htm" title="Springboot过滤器和拦截器的区别">Springboot过滤器和拦截器的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1892.htm" title="如何将CONCAT()函数应用于MySQL表的列？">如何将CONCAT()函数应用于MySQL表的列？</a></li>
                        <li class="py-2"><a href="/html/category/article-1893.htm" title="JavaScript中querySelector和getElementByld(getXXXBy XX)的区别">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1966.htm" title="JavaScript如何将数组与值是数组的对象合并方法详解">JavaScript如何将数组与值是数组的对象合并方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1891.htm" title="八大基本数据类型及数据类型之间的转换&#8212;zixiao">八大基本数据类型及数据类型之间的转换&#8212;zixiao</a></li>
                        <li class="py-2"><a href="/html/category/article-4079.htm" title="vue使用canvas绘制圆环_vue.js_">vue使用canvas绘制圆环_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-4305.htm" title="同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）">同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）</a></li>
                        <li class="py-2"><a href="/html/category/article-1902.htm" title="树的同构（java实现）">树的同构（java实现）</a></li>
                        <li class="py-2"><a href="/html/category/article-1894.htm" title="小程序自定义导航栏组件">小程序自定义导航栏组件</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>