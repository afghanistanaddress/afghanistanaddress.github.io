<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-1965.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>设置网页脚本动态顺序加载 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">设置网页脚本动态顺序加载</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h3>介绍</h3> <p>  最近为了提升页面加载速度，寻找了一下解决方案，其中方案之一就是让页面脚本动态顺序加载，以下介绍该方案的原理以及实现。<br />   众所周知，浏览器加载 JavaScript 脚本，主要通过<code><script></code>元素完成。正常的网页加载流程是这样的。浏览器加载网页的流程一般如下：</p> <ol> <li>浏览器一边下载 HTML 网页，一边开始解析。也就是说，不等到下载完，就开始解析。</li> <li>解析过程中，浏览器发现<code><script></code>元素，就暂停解析，把网页渲染的控制权转交给 JavaScript 引擎。</li> <li>如果<code><script></code>元素引用了外部脚本，就下载该脚本再执行，否则就直接执行代码。</li> <li>JavaScript 引擎执行完毕，控制权交还渲染引擎，恢复往下解析 HTML 网页。</li> </ol> <p>  加载外部脚本时，浏览器会暂停页面渲染，等待脚本下载并执行完成后，再继续渲染。原因是 JavaScript 代码可以修改 DOM，所以必须把控制权让给它，否则会导致复杂的线程竞赛的问题。<br />   如果我们可以让外部脚本动态加载，自然提高了页面加载速度；</p> <h3>脚本的动态加载</h3> <p>  通过动态生成<code><script></code>元素，生成后再插入到页面当中，可实现脚本的动态加载。比如页面需要动态加载a.js和b.js；代码如下：</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span><span class="token string">'a.js'</span><span class="token punctuation">,</span><span class="token string">'b.js'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">var</span> script<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   script<span class="token punctuation">.</span>src<span class="token operator">=</span> src<span class="token punctuation">;</span>   document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>  以上方法动态生成的script标签不会阻塞页面渲染，不会造成浏览器假死。但若多个脚本之间约定需要顺序执行；这种方法无法保证脚本的执行顺序，哪个脚本文件先下载完成，就先执行哪个。以下给出动态顺序加载解决方案；</p> <h3>脚本的动态顺序加载</h3> <p>  如果多个脚本之间有执行顺序，可以设置async属性为false。代码如下：</p> <pre><code class="prism language-typescript"><span class="token punctuation">[</span><span class="token string">'a.js'</span><span class="token punctuation">,</span><span class="token string">'b.js'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">var</span> script<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   script<span class="token punctuation">.</span>src<span class="token operator">=</span> src<span class="token punctuation">;</span>   script<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>   document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>  上面的代码不会阻塞页面渲染，而且可以保证b.js在a.js后面执行。不过需要注意的是，在这段代码后面加载的脚本，会因此都等待b.js执行完成后再执行。若想将脚本文件放最后执行，则可将这部分代码放在脚本最后。<br />   其次，若想为动态加载的脚本指定回调函数，可以借助<code>onload</code>方法；写法如下：</p> <pre><code class="prism language-typescript"><span class="token keyword">function</span><span class="token function">loadScript</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> done<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">var</span> js<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   js<span class="token punctuation">.</span>src<span class="token operator">=</span> src<span class="token punctuation">;</span>   js<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//回调函数</span><span class="token punctuation">}</span><span class="token punctuation">;</span>   js<span class="token punctuation">.</span><span class="token function-variable function">onerror</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Failed to load script '</span><span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>   document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>js<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <blockquote> <p>参考网址：<br /> https://www.wangdoc.com/javascript/bom/engine.html#%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E</p> </blockquote> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1952.htm">深入理解Spring的@Order注解和Ordered接口</a></p>
                                                        <p>下一个：<a href="/html/category/article-1966.htm">JavaScript如何将数组与值是数组的对象合并方法详解</a></p>
                                                    </div>
                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-1862.htm">将无效字符串作为参数传递给STR_TO_DATE()函数时，MySQL将返回什么？</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1790.htm">数据结构详解·一树的初步</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1767.htm">Python while循环如何工作？</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1764.htm">android 自定义单指旋转转盘 二（类似抽奖转盘）</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1757.htm">React 中事件的类型定义</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1756.htm">如何根据不在结果集中的列对MySQL输出进行排序？</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1748.htm">Redis6通信协议升级至RESP3，一口气看完13种新数据类型</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1707.htm">站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1673.htm">MySQL Binlog解析</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1670.htm">Oject类之equals方法</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4108.htm" title="C#关于在返回值为Task方法中使用Thread.Sleep引发的思考">C#关于在返回值为Task方法中使用Thread.Sleep引发的思考</a></li>
                        <li class="py-2"><a href="/html/category/article-4561.htm" title="自从养了狗之后运气很不好（狗死了为什么三年内不养狗）">自从养了狗之后运气很不好（狗死了为什么三年内不养狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-4334.htm" title="和田宠物医院污水处理方案 和田宠物医院污水处理方案公示">和田宠物医院污水处理方案 和田宠物医院污水处理方案公示</a></li>
                        <li class="py-2"><a href="/html/category/article-3768.htm" title="Springboot过滤器和拦截器的区别">Springboot过滤器和拦截器的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-3133.htm" title="微服务与领域驱动设计，架构实践总结">微服务与领域驱动设计，架构实践总结</a></li>
                        <li class="py-2"><a href="/html/category/article-5582.htm" title="偷奸耍滑的下场&#x1f92d;&#x1f92d;#军旅剧">偷奸耍滑的下场&#x1f92d;&#x1f92d;#军旅剧</a></li>
                        <li class="py-2"><a href="/html/category/article-4415.htm" title="最好的电磁炉牌子是哪个牌子(最好的电磁炉牌子是哪个品牌)">最好的电磁炉牌子是哪个牌子(最好的电磁炉牌子是哪个品牌)</a></li>
                        <li class="py-2"><a href="/html/category/article-4305.htm" title="同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）">同城领养猫咪的软件哪个好（58同城免费领养猫咪送到家）</a></li>
                        <li class="py-2"><a href="/html/category/article-4490.htm" title="动物疫苗在哪打的针图片视频（动物注射疫苗注射哪里）">动物疫苗在哪打的针图片视频（动物注射疫苗注射哪里）</a></li>
                        <li class="py-2"><a href="/html/category/article-2835.htm" title="在C ++中验证堆栈序列">在C ++中验证堆栈序列</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>