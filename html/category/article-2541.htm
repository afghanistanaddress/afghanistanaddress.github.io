<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-2541.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Spring Cloud Feign 分析之FeignClient注解实现版本兼容 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Spring Cloud Feign 分析之FeignClient注解实现版本兼容</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <blockquote> <p>使用过Spring Cloud Netflix组件的同学都知道，Netflix组件的版本兼容性几乎等于零，特别是大版本变化简直就是噩梦，所以本节主要讲解如何实现Feign的版本兼容，如何兼容SpringBoot1.x、SpringBoot2.x版本中的Feign使用！这样我们在SpringBoot1.x版本使用@FeignClient在后续升级到SpringBoot2.x之后也不需要我们进行单独修改，毕竟现在微服务众多，全部重新使用SpringBoot2.x版本的FeignClient也是一件不小的事情，毕竟你改了代码那就可能出现问题。所以这一节我们主要提供注解版本的兼容方式(基本零修改),顺带分析下FeignClientsRegistrar部分原理！</p> </blockquote> <hr/> <h3>@EnableFeignClients注解</h3> <pre><code>@Retention(RetentionPolicy.RUNTIME) @Target(ElementType.TYPE) @Documented @Import(FeignClientsRegistrar.class) public @interface EnableFeignClients {     String[] value() default {};     String[] basePackages() default {};     Class<?>[] basePackageClasses() default {};     Class<?>[] defaultConfiguration() default {};     Class<?>[] clients() default {}; }</code></pre> <p>这里我们先看看FeignClient默认实现，通过在启动类上面注解这个类即可开启FeignClient客户端，那么这里我们看看原始FeignClientsRegistrar做了什么事情，为什么就不能兼容以前的版本呢？</p> <hr/> <h3>FeignClientsRegistrar#registerDefaultConfiguration</h3> <pre><code>class FeignClientsRegistrar implements ImportBeanDefinitionRegistrar, ResourceLoaderAware, EnvironmentAware {     ......     @Override     public void registerBeanDefinitions(AnnotationMetadata metadata,             BeanDefinitionRegistry registry) {         registerDefaultConfiguration(metadata, registry);         registerFeignClients(metadata, registry);     }     //根据@EnableFeignClients中参数defaultConfiguration注册FeignClient的默认配置(FeignClientsConfiguration)     private void registerDefaultConfiguration(AnnotationMetadata metadata,             BeanDefinitionRegistry registry) {         //注意这里的获取的EnableFeignClients.class.getName()这个属性         //我们后面要做自定义注解的映射         Map<String, Object> defaultAttrs = metadata                 .getAnnotationAttributes(EnableFeignClients.class.getName(), true);         if (defaultAttrs != null && defaultAttrs.containsKey("defaultConfiguration")) {             String name;             if (metadata.hasEnclosingClass()) {                 name = "default." + metadata.getEnclosingClassName();             }             else {                 name = "default." + metadata.getClassName();             }             registerClientConfiguration(registry, name,                     defaultAttrs.get("defaultConfiguration"));         }     }     ...... }</code></pre> <p>这里我们简单的讲解下，从@EnableFeignClients注解中获取defaultConfiguration参数并生产默认配置，其中这个地方关注点metadata.getAnnotationAttributes(EnableFeignClients.class.getName(), true),后面我们的自定义注解会和这个形成映射关系</p> <hr/> <h3>FeignClientsRegistrar#registerFeignClients</h3> <pre><code>class FeignClientsRegistrar implements ImportBeanDefinitionRegistrar, ResourceLoaderAware, EnvironmentAware {     ......     @Override     public void registerBeanDefinitions(AnnotationMetadata metadata,             BeanDefinitionRegistry registry) {         registerDefaultConfiguration(metadata, registry);         registerFeignClients(metadata, registry);     }     //注册@FeignClient类到IOC容器中     public void registerFeignClients(AnnotationMetadata metadata,             BeanDefinitionRegistry registry) {          LinkedHashSet<BeanDefinition> candidateComponents = new LinkedHashSet<>();         Map<String, Object> attrs = metadata                 .getAnnotationAttributes(EnableFeignClients.class.getName());         final Class<?>[] clients = attrs == null ? null                 : (Class<?>[]) attrs.get("clients");         if (clients == null || clients.length == 0) {             //获取扫描器，             ClassPathScanningCandidateComponentProvider scanner = getScanner();             scanner.setResourceLoader(this.resourceLoader);             //扫描org.springframework.cloud.openfeign.FeignClient注解类             scanner.addIncludeFilter(new AnnotationTypeFilter(FeignClient.class));             Set<String> basePackages = getBasePackages(metadata);             for (String basePackage : basePackages) {                 //添加满足条件的BeanDefinition                 candidateComponents.addAll(scanner.findCandidateComponents(basePackage));             }         }         else {             for (Class<?> clazz : clients) {                 candidateComponents.add(new AnnotatedGenericBeanDefinition(clazz));             }         }         for (BeanDefinition candidateComponent : candidateComponents) {             if (candidateComponent instanceof AnnotatedBeanDefinition) {                 AnnotatedBeanDefinition beanDefinition = (AnnotatedBeanDefinition) candidateComponent;                 AnnotationMetadata annotationMetadata = beanDefinition.getMetadata();                 Assert.isTrue(annotationMetadata.isInterface(),                         "@FeignClient can only be specified on an interface");                 //获取org.springframework.cloud.openfeign.FeignClient对应的属性                 Map<String, Object> attributes = annotationMetadata                         .getAnnotationAttributes(FeignClient.class.getCanonicalName());                  String name = getClientName(attributes);                 registerClientConfiguration(registry, name,                         attributes.get("configuration"));                 //注册到IOC容器                 registerFeignClient(registry, annotationMetadata, attributes);             }         }     } }</code></pre> <p>这个地方我们也简单的解释下具体做了哪些事情</p> <ol> <li>扫描标注了org.springframework.cloud.openfeign.FeignClient注解类</li> <li>通过basePackages路径添加添加满足条件的BeanDefinition</li> <li>通过BeanDefinition集合获取org.springframework.cloud.openfeign.FeignClient注解对应的属性</li> <li>注册Bean到IOC容器中</li> </ol> <hr/> <h3>FeignClient注解实现版本兼容</h3> <pre><code>package org.springframework.cloud.netflix.feign;  @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @org.springframework.cloud.openfeign.FeignClient public @interface FeignClient {      /**      * The name of the service with optional protocol prefix. Synonym for {@link #name()      * name}. A name must be specified for all clients, whether or not a url is provided.      * Can be specified as property key, eg: ${propertyKey}.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "name")     String value() default "";      /**      * The service id with optional protocol prefix. Synonym for {@link #value() value}.      *      * @deprecated use {@link #name() name} instead      */     @Deprecated     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "serviceId")     String serviceId() default "";      /**      * The service id with optional protocol prefix. Synonym for {@link #value() value}.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "value")     String name() default "";      /**      * Sets the <code>@Qualifier</code> value for the feign client.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "qualifier")     String qualifier() default "";      /**      * An absolute URL or resolvable hostname (the protocol is optional).      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "url")     String url() default "";      /**      * Whether 404s should be decoded instead of throwing FeignExceptions      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "decode404")     boolean decode404() default false;      /**      * A custom <code>@Configuration</code> for the feign client. Can contain override      * <code>@Bean</code> definition for the pieces that make up the client, for instance      * {@link feign.codec.Decoder}, {@link feign.codec.Encoder}, {@link feign.Contract}.      *      * @see FeignClientsConfiguration for the defaults      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "configuration")     Class<?>[] configuration() default {};      /**      * Fallback class for the specified Feign client interface. The fallback class must      * implement the interface annotated by this annotation and be a valid spring bean.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "fallback")     Class<?> fallback() default void.class;      /**      * Define a fallback factory for the specified Feign client interface. The fallback      * factory must produce instances of fallback classes that implement the interface      * annotated by {@link FeignClient}. The fallback factory must be a valid spring      * bean.      *      * @see feign.hystrix.FallbackFactory for details.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "fallbackFactory")     Class<?> fallbackFactory() default void.class;      /**      * Path prefix to be used by all method-level mappings. Can be used with or without      * <code>@RibbonClient</code>.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "path")     String path() default "";      /**      * Whether to mark the feign proxy as a primary bean. Defaults to false.      */     @AliasFor(annotation = org.springframework.cloud.openfeign.FeignClient.class, attribute = "primary")     boolean primary() default true; }</code></pre> <p>这里我们采用路径覆盖大法，我们重新定义一个org.springframework.cloud.netflix.feign这个包名，然后定义一个FeignClient注解类，然后我们在这个类上在引入一个注解@org.springframework.cloud.openfeign.FeignClient，把SpringBoot2.x版本的FeignClient引入进来，这样我们就实现了版本兼容，我们以前的SpringBoot1.x版本的可以不用修改就可以实现版本兼容。然后在启动类上面使用标准的@EnableFeignClients注解</p> <h3>注意事项</h3> <pre><code>spring:   main:     allow-bean-definition-overriding: true</code></pre> <p>在SpringBoot2.1之前，这个开关默认是打开的，及可以重复定义Bean，但是在SpringBoot2.1之后这个配置默认是false，所以如果我们的SpringBoot版本为2.1之后的，那么这个参数需要设置为true，及允许后面的Bean可以覆盖之前相同名称的Bean，因为这个地方registerClientConfiguration会重复定义Bean，建议根据情况配置，笔者这里的业务默认都打开了的，毕竟我们的FeignClient配置是一样的，所以允许重复定义。</p> <hr/> <blockquote> <p>已经讲解到这里了，这一节我们通过路径覆盖大法，重写老版本的netflix.FeignClient注解在其之上加上新版本的openfeign.FeignClient注解来实现兼容，下一节我们将通过继承FeignClientsRegistrar来实现的方式，这种方式的实现能让我们更加清楚的了解到@FeignClient的注册方式，如果觉得总结不错就点赞关注吧！</p> </blockquote> <p> 原文链接：https://www.jianshu.com/p/e319a7a550a2</p> <p>相关资源：</p> <p>GitOps 初探 - Dcsdn</p> <p>行业分类-设备装置-一种用于数据库运维的移动平台及其使用方法 - Dcsdn</p> <p>redis（哨兵模式配置） - Dcsdn</p> <p>Redis数据的导出和导入 - Dcsdn</p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2252.htm">python向hive插入数据遇到的坑</a></p>
                                                        <p>下一个：<a href="/html/category/article-2542.htm">素数最多为n</a></p>
                                                    </div>
                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-1896.htm">一、重写了equals为什么还要重写hashcode</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1864.htm">springboot基础(6):整合ActiveMQ</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1856.htm">Nacos配置中心集群原理及源码分析</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1853.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1809.htm">C#过滤DataTable中空数据和重复数据的示例代码</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1773.htm">Numpy 高效的运算工具</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1765.htm">Mysql模糊查询区分大小写</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1752.htm">SpringSecurity核心功能详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1694.htm">Spring MVC启动原理详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1678.htm">在Spring配置文件中自定义标签如何实现</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6160.htm" title="饲料加盟免费代理鱼饲料（鱼饲料加工厂加盟）">饲料加盟免费代理鱼饲料（鱼饲料加工厂加盟）</a></li>
                        <li class="py-2"><a href="/html/category/article-4414.htm" title="动物疫苗研究进展论文（动物疫苗发展前景）">动物疫苗研究进展论文（动物疫苗发展前景）</a></li>
                        <li class="py-2"><a href="/html/category/article-7224.htm" title="开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）">开动物医院的条件和要求有哪些（开办一间动物医院需要什么资质）</a></li>
                        <li class="py-2"><a href="/html/category/article-6902.htm" title="猫主动爬你身上说明了什么不是主人（猫主动爬你身上说明了什么不是主人的表现）">猫主动爬你身上说明了什么不是主人（猫主动爬你身上说明了什么不是主人的表现）</a></li>
                        <li class="py-2"><a href="/html/category/article-4380.htm" title="12种最适合学生养的宠物便宜（学生能养的宠物）">12种最适合学生养的宠物便宜（学生能养的宠物）</a></li>
                        <li class="py-2"><a href="/html/category/article-4415.htm" title="最好的电磁炉牌子是哪个牌子(最好的电磁炉牌子是哪个品牌)">最好的电磁炉牌子是哪个牌子(最好的电磁炉牌子是哪个品牌)</a></li>
                        <li class="py-2"><a href="/html/category/article-6995.htm" title="宠物粮食生产配方表最新（宠物粮的配方）">宠物粮食生产配方表最新（宠物粮的配方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6029.htm" title="重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）">重庆有宠物领养中心吗（重庆有宠物领养中心吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-6072.htm" title="紫菜饭团的做法（紫菜饭团的做法和配料）">紫菜饭团的做法（紫菜饭团的做法和配料）</a></li>
                        <li class="py-2"><a href="/html/category/article-7133.htm" title="猫咪疫苗可以自己打吗怎么可以自己（猫咪疫苗自己能打吗）">猫咪疫苗可以自己打吗怎么可以自己（猫咪疫苗自己能打吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>