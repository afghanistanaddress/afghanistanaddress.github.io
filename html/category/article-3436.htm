<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://afghanistanaddress.github.io/html/category/article-3436.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志 - Afghanistan Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/afghanistanaddress/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/animate/animate.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/maicons.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/afghanistanaddress/theme.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?07d6804a416dbd216ab0e3d3e283ddad";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                                <a href="/" class="navbar-brand">Afghanistan Address</a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/html/category/" class="nav-link">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/html/category/">文章分类</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                          				  				  				<p><span style="font-size: 18px"><strong>1、概述</strong></span></p> <p>最近因项目需要统计服务的负载情况及机器的负载情况，但是项目里面却没有相关统计而服务所在的机器也没有相关的监控，因为工期原因就选择了相对轻量级的prometheus方案。其中windows_exporter用来采集机器的负载情况，如CPU、内存、磁盘io、网络等基础信息，使用mtail来采集应用日志统计服务情况（需要业务系统有基础的日志，如请求发起，是否正常结束等，或者通过nginx等中间件的日志来统计也行），如QPS、TPS、请求数、成功率、异常率等，使用prometheus来统计分析相应的指标及设置报警规则等，如通过请求总数来计算QPS等。</p> <p><strong><span style="font-size: 18px">2、windows_exporter配置启动</span></strong></p> <p>建议下载最新版本，最新版本<span style="color: rgba(255, 0, 0, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/prometheus-community/windows_exporter/releases"  target="_blank" rel="nofollow"><span style="color: rgba(255, 0, 0, 1)">下载地址</span></a></span><br />，我下载的版本为windows_exporter-0.18.1-386.exe，将其解压到任意目录下，进入将其在后台启动：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/1b642253293f593d7bc56f64f7633b05.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p>其中链接Metrics为采集到的指标（metrics）如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3d7d34bef5b6c85fad6cafd32492911f.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p><strong><span style="font-size: 18px">3.mtail配置启动</span></strong></p> <p>mtail是谷歌基于golang开发的一款日志收集工具，用于从应用程序日志中提取白盒监视数据以收集在时间序列数据库中。<br />建议下载最新版本，最新版下载地址<span style="color: rgba(255, 0, 0, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/google/mtail/releases"  target="_blank" rel="nofollow"><span style="color: rgba(255, 0, 0, 1)">请戳此处</span></a></span>，我下载的版本为mtail_3.0.0-rc48_Linux_arm64.tar.gz，此版本是可执行二进制文件，移动至/usr/local/sbin下即可使用。</p> <p><em>查看mtail版本（验证matail命令是否可用）：<br /></em></p> <div class="cnblogs_code"> <pre>mtail -version</pre> </div> <p>输出如下：</p> <div class="cnblogs_code"> <pre>mtail version<span style="color: rgba(128, 0, 128, 1)">3.0</span>.<span style="color: rgba(128, 0, 128, 1)">0</span>-rc48 git revision e19766e45ca2dedf34794fea51444c7963a7c3d6 go version go1.<span style="color: rgba(128, 0, 128, 1)">17.5</span> go arch<span style="color: rgba(128, 0, 128, 1)">386</span> go os linux</pre> </div> <p>mtail启动命令如下：</p> <div class="cnblogs_code"> <pre>nohup mtail -port<span style="color: rgba(128, 0, 128, 1)">8080</span> -logtostderr -progs /etc/mtail/access.mtail -logs /xxx/xxx.log &amp;<span style="color: rgba(0, 0, 0, 1)">  #8080端口可以自定义，也可同时启动多个mtail监控多个日志文件。</span></pre> </div> <p>-progs参数需要以.mtail结尾，脚本内容为需要从日志中提取的指标，具体格式脚本写法及例子请参考<span style="color: rgba(255, 0, 0, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/google/mtail/tree/master/examples"  target="_blank" rel="nofollow"><span style="color: rgba(255, 0, 0, 1)">此链接</span></a></span>。<br />例子中access.mtail的内容如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">counter apache_http_requests_total by request_method, http_version, status_code counter apache_http_bytes_total by request_method, http_version, status_code gauge apache_http_response_time by remote_host, request_method, request_uri, status_code gauge apache_http_response_size by remote_host, request_method, request_uri, status_code   histogram apache_http_request_time_millseconds_bucket buckets</span><span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>,<span style="color: rgba(128, 0, 128, 1)">4</span>,<span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)"> by status_code</span>/^/ + /(?P&lt;remote_host&gt;[<span style="color: rgba(128, 0, 128, 1)">0</span>-9A-Za-z\.:-]+) / + # %<span style="color: rgba(0, 0, 0, 1)">h</span>/(?P&lt;remote_logname&gt;[<span style="color: rgba(128, 0, 128, 1)">0</span>-9A-Za-z-]+) / + # %<span style="color: rgba(0, 0, 0, 1)">l</span>/(?P&lt;remote_username&gt;[<span style="color: rgba(128, 0, 128, 1)">0</span>-9A-Za-z-]+) / + # %<span style="color: rgba(0, 0, 0, 1)">u</span>/\[(?P&lt;timestamp&gt;\d{<span style="color: rgba(128, 0, 128, 1)">2</span>}\/\<span style="color: rgba(0, 0, 255, 1)">w</span>{<span style="color: rgba(128, 0, 128, 1)">3</span>}\/\d{<span style="color: rgba(128, 0, 128, 1)">4</span>}:\d{<span style="color: rgba(128, 0, 128, 1)">2</span>}:\d{<span style="color: rgba(128, 0, 128, 1)">2</span>}:\d{<span style="color: rgba(128, 0, 128, 1)">2</span>} (\+|-)\d{<span style="color: rgba(128, 0, 128, 1)">4</span>})\] / + # %<span style="color: rgba(0, 0, 0, 1)">u</span>/<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;request_method&gt;[A-Z]+) (?P&lt;request_uri&gt;\S+) (?P&lt;http_version&gt;HTTP\/[0-9\.]+)</span><span style="color: rgba(128, 0, 0, 1)">"</span> / + # \<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%r\"</span> /(?P&lt;status_code&gt;\d{<span style="color: rgba(128, 0, 128, 1)">3</span>}) / + # %&gt;<span style="color: rgba(0, 0, 0, 1)">s</span>/((?P&lt;response_size&gt;\d+)|-) / + # %<span style="color: rgba(0, 0, 0, 1)">b</span>/(?P&lt;response_time&gt;\d+) / + # %<span style="color: rgba(0, 0, 0, 1)">D</span>/<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;referer&gt;\S+)</span><span style="color: rgba(128, 0, 0, 1)">"</span> / + # \<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%{Referer}i\"</span> /<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;user_agent&gt;[[:print:]]+)</span><span style="color: rgba(128, 0, 0, 1)">"</span>/ + # \<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%{User-agent}i\"</span> /$/<span style="color: rgba(0, 0, 0, 1)"> {   strptime($timestamp,</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">02/Jan/2006:15:04:05 -0700</span><span style="color: rgba(128, 0, 0, 1)">"</span>)<span style="color: rgba(0, 0, 0, 1)">     apache_http_requests_total[$request_method][$http_version][$status_code]</span>++<span style="color: rgba(0, 0, 0, 1)">   $response_size</span>&gt;<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)"> {       apache_http_bytes_total[$request_method][$http_version][$status_code]</span>+=<span style="color: rgba(0, 0, 0, 1)"> $response_size       apache_http_response_size[$remote_host][$request_method][$request_uri][$status_code]</span>+=<span style="color: rgba(0, 0, 0, 1)"> $response_size   }   apache_http_response_time[$remote_host][$request_method][$request_uri][$status_code]</span>=<span style="color: rgba(0, 0, 0, 1)"> $response_time</span><span style="color: rgba(0, 0, 0, 1)">   apache_http_request_time_millseconds_bucket[$status_code]</span>=<span style="color: rgba(0, 0, 0, 1)"> $response_time }   getfilename()</span>!~ /access_log.?log/<span style="color: rgba(0, 0, 0, 1)"> {   stop }</span></pre> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">counter media_request_total</span>/receive http request path is/<span style="color: rgba(0, 0, 0, 1)"> {   media_request_total</span>++<span style="color: rgba(0, 0, 0, 1)"> }<br/><span style="color: rgba(255, 102, 0, 1)">#第一段代码是监控apache日志，第一阶段测试可用此段配置。</span></span></pre> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">counter app_http_requests_total by uri, request_method,http_status<span style="color: rgba(255, 102, 0, 1)">#该段代码为获取网关（geteway）日志代码</span> gauge app_http_requests_time by uri, request_method, http_status  histogram app_http_request_time_millseconds_bucket buckets</span><span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>,<span style="color: rgba(128, 0, 128, 1)">4</span>,<span style="color: rgba(128, 0, 128, 1)">8</span><span style="color: rgba(0, 0, 0, 1)"> by uri, request_method, http_status</span>/`<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;request_method&gt;[A-Z]+) (?P&lt;uri&gt;[\/a-zA-Z0-9-_]+)(?:\??)(?:\S*) (?P&lt;http_version&gt;HTTP\/[0-9\.]+)</span><span style="color: rgba(128, 0, 0, 1)">"</span>/ + /`<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;http_user_agent&gt;.+)</span><span style="color: rgba(128, 0, 0, 1)">"</span>/ + /`(?P&lt;http_status&gt;\d{<span style="color: rgba(128, 0, 128, 1)">3</span>})/ + /`(?P&lt;remote_addr&gt;/ + /\[((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})(\.((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})){<span style="color: rgba(128, 0, 128, 1)">3</span>}\])/ + /`(?P&lt;http_x_log_uid&gt;\W+)/ + /`<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">(?P&lt;http_referer&gt;\W+)</span><span style="color: rgba(128, 0, 0, 1)">"</span>/ + /`(?P&lt;request_time&gt;\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,}\.\d{<span style="color: rgba(128, 0, 128, 1)">3</span>})/ + /`(?P&lt;body_bytes_sent&gt;\d+)`/ + /(?P&lt;http_x_forwarded_for&gt;\S+)/ + /`(?P&lt;http_host&gt;((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})(\.((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})){<span style="color: rgba(128, 0, 128, 1)">3</span>})/ + /`(?P&lt;domain&gt;.+)/ + /`(?P&lt;http_cookie&gt;.+)/ + /`(?P&lt;upstream_addr&gt;\[((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})(\.((<span style="color: rgba(128, 0, 128, 1)">2</span>(<span style="color: rgba(128, 0, 128, 1)">5</span>[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">5</span>]|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">4</span>]\d))|[<span style="color: rgba(128, 0, 128, 1)">0</span>-<span style="color: rgba(128, 0, 128, 1)">1</span>]?\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 128, 1)">2</span>})){<span style="color: rgba(128, 0, 128, 1)">3</span>}:\d{<span style="color: rgba(128, 0, 128, 1)">4</span>}\])/ + /`(?P&lt;upstream_response_time&gt;(\d{<span style="color: rgba(128, 0, 128, 1)">1</span>,}\.\d{<span style="color: rgba(128, 0, 128, 1)">3</span>}))/ + /`xd$/<span style="color: rgba(0, 0, 0, 1)">{</span>/\/coco-server\/v1\/users\<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">{</span><span style="color: rgba(0, 0, 0, 1)">       }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> {     app_http_requests_total[$uri][$request_method][$http_status]</span>++<span style="color: rgba(0, 0, 0, 1)">     app_http_requests_time[$uri][$request_method][$http_status]</span>=<span style="color: rgba(0, 0, 0, 1)"> $request_time     app_http_request_time_millseconds_bucket[$uri][$request_method][$http_status]</span>=<span style="color: rgba(0, 0, 0, 1)"> $request_time   } }</span></pre> </div> <p>查看mtail信息，访问http://ip:3903：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d2b9a2f95349dbf59db8dd286e28e9d7.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p><span style="color: rgba(255, 102, 0, 1)"><strong>这里需要注意的是：若监控apache日志，需配置好第一段代码运行后触发apache（重启）产生新日志才能被监控到。</strong></span></p> <p><em></em></p> <p><strong><span style="font-size: 18px">4.prometheus配置启动</span></strong></p> <p><em>建议下载最新版本，最新版下载地址<span style="color: rgba(255, 0, 0, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://prometheus.io/download/"  target="_blank" rel="nofollow"><span style="color: rgba(255, 0, 0, 1)">请戳此处</span></a></span>，我下载的版本为</em>prometheus-2.34.0.windows-amd64.zip<em id="__mceDel">，将其解压到任意目录下，进入目录修改配置文件prometheus.yml添加windows_exporter和matail 的采集路径，prometheus.yml文件配置如下：</em></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># my global config global:   scrape_interval: 15s # Set the scrape interval to every</span><span style="color: rgba(128, 0, 128, 1)">15</span> seconds. Default is every<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> minute.   evaluation_interval: 15s # Evaluate rules every</span><span style="color: rgba(128, 0, 128, 1)">15</span> seconds. The default is every<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)"> minute.   # scrape_timeout is set to the global default (10s).  # Alertmanager configuration alerting:   alertmanagers:</span>-<span style="color: rgba(0, 0, 0, 1)"> static_configs:</span>-<span style="color: rgba(0, 0, 0, 1)"> targets:</span>- alertmanager:<span style="color: rgba(128, 0, 128, 1)">9093</span><span style="color: rgba(0, 0, 0, 1)">  # Load rules once and periodically evaluate them according to the global</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">evaluation_interval</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">. rule_files:</span>-<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">rules/*_rules.yml</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">      #告警规则yml文件   #</span>-<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">second_rules.yml</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">  # A scrape configuration containing exactly one endpoint to scrape: # Here it</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">s Prometheus itself.</span><span style="color: rgba(0, 0, 0, 1)">scrape_configs:   # The job name is added as a label `job</span>=&lt;job_name&gt;<span style="color: rgba(0, 0, 0, 1)">` to any timeseries scraped from this config.</span>- job_name:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">prometheus</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">      # metrics_path defaults to</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">/metrics</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">     # scheme defaults to</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">http</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">.      static_configs:</span>- targets: [<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">localhost:9090</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">]</span>- job_name:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">node_exporter</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">     scrape_interval: 5s       #每五秒检查一次应用进程     metrics_path:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/metrics</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">       #指标路径     static_configs:</span>- targets: [<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">localhost:9182</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">]</span>- job_name:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">alertmanager</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">     scrape_interval: 5s      static_configs:</span>- targets: [<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">localhost:9093</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">]</span>- job_name:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">mtail</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">     scrape_interval: 5s       static_configs:</span>- targets: [<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">xx.xx.xx.xx:8080</span><span style="color: rgba(128, 0, 0, 1)">"</span>]</pre> </div> <p>prometheus默认端口为9090，通过网页访问http://ip:9090/：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/feb11ef10883af7671c9573d165b8dda.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p>&nbsp;如需配置告警，需在目录下新建rules文件夹，告警配置如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">groups</span><span style="color: rgba(0, 0, 0, 1)">:</span>- name: node-<span style="color: rgba(0, 0, 0, 1)">up     # 分组名称   rules:           # 规则设置</span>- alert: node-<span style="color: rgba(0, 0, 0, 1)">up     #告警名称</span><span style="color: rgba(0, 0, 255, 1)">expr</span>: up{job=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">windows_exporter</span><span style="color: rgba(128, 0, 0, 1)">"</span>} ==<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">        # 表达式，查询式语句查询up的值是否等于0，如果等于则告警</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)">: 15s        # 告警持续时间     labels:       severity:</span><span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">       team: node     annotations:    # 注解       summary:</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{{ $labels.instance }} 已停止运行超过 15s！</span><span style="color: rgba(128, 0, 0, 1)">"</span></pre> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e9ade018838406cf03a697b33cb66cec.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p><strong><span style="font-size: 18px">5、alertmanager配置</span></strong></p> <p><em><em>建议下载最新版本，最新版下载地址<span style="color: rgba(255, 0, 0, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://prometheus.io/download/"  target="_blank" rel="nofollow"><span style="color: rgba(255, 0, 0, 1)">请戳此处</span></a></span>，</em>Alertmanager的配置有两个地方，一个是在Prometheus server端进行配置告警节点，指定匹配告警规则文件路径，以及监控alertmanager本身。另一个直接配置alertmanager自身的配置，在alertmanager.yml进行配置。<br /></em></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">global:   resolve_timeout: 5m   smtp_smarthost:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">smtp.qq.com:465</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">   smtp_from:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">xxxxxxxxx@qq.com</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">   smtp_auth_username:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">xxxxxxxxx@qq.com</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">   smtp_auth_password:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">xxxxxxxxx</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">    # 16位qq邮箱授权码作为密码   smtp_require_tls:</span><span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">  route:   group_by: [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">alertname</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">]   group_wait: 10s   group_interval: 10s   repeat_interval: 1h   receiver:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">email</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">    # 选用邮箱告警发送  receivers:</span>- name:<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">email</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">   email_configs:</span>- to:<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">xxxxxxxxx@qq.com</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">  inhibit_rules:</span>-<span style="color: rgba(0, 0, 0, 1)"> source_match:       severity:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">critical</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">     target_match:       severity:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">warning</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">     equal: [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">alertname</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">dev</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">instance</span><span style="color: rgba(128, 0, 0, 1)">'</span>]</pre> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/24587170b7ae817ec88f0d9ef34c94fa.jpg" alt="记-Windows环境下Prometheus+alertmanager+windows_exporter+mtail监控部署提起网关日志"></p> <p><strong><span style="font-size: 18px">6.总结</span></strong><br />此套监控的解决方案优点在于完全对业务系统解耦，并且对业务系统透明，唯一需要的就是业务系统的日志所在路径。<br />而此套系统的关键点在于mtail脚本编写和mtail采集到的数据最终使用promQL分析，mtail脚本需要知道业务系统的日志是否满足监控系统的需求，如果不满足还是需要改动业务代码添加相应的日志。而promQL则需要掌握相关的语法规则及内置函数，只要掌握了这两个关键点，整套系统就搞定了。</p> <p><em id="__mceDel"><em id="__mceDel"></em></em></p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-3435.htm">SpringMVC之@RequestMapping注解</a></p>
                                                        <p>下一个：<a href="/html/category/article-3741.htm">Java中数组的定义与使用(一)</a></p>
                                                    </div>
                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-1966.htm">JavaScript如何将数组与值是数组的对象合并方法详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1896.htm">一、重写了equals为什么还要重写hashcode</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1843.htm">Echarts饼图 改变大小与位置</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1842.htm">Springboot过滤器和拦截器实现</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1821.htm">SpringCloud系列之分布式请求链路跟踪(Sleuth)</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1775.htm">win11系统怎么查看显卡信息</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1755.htm">Docker基础数据卷容器的说明与共享数据原理详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1749.htm">RenderDoc图形调试器详细使用教程(基于DirectX11)</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1664.htm">k8s入门之PV和PVC</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-1659.htm">JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1900.htm" title="网页盒子水平布局方式">网页盒子水平布局方式</a></li>
                        <li class="py-2"><a href="/html/category/article-4304.htm" title="有什么出售宠物的app（有没有专业出售宠物的平台）">有什么出售宠物的app（有没有专业出售宠物的平台）</a></li>
                        <li class="py-2"><a href="/html/category/article-1893.htm" title="JavaScript中querySelector和getElementByld(getXXXBy XX)的区别">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-1923.htm" title="layUI利用JQuery设置select下拉列表的值重新渲染">layUI利用JQuery设置select下拉列表的值重新渲染</a></li>
                        <li class="py-2"><a href="/html/category/article-3741.htm" title="Java中数组的定义与使用(一)">Java中数组的定义与使用(一)</a></li>
                        <li class="py-2"><a href="/html/category/article-3134.htm" title="SpringMVC-@RequestMapping注解">SpringMVC-@RequestMapping注解</a></li>
                        <li class="py-2"><a href="/html/category/article-1898.htm" title="Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]">Kotlin 标准函数和静态方法[第一行代码 Kotlin 学习笔记]</a></li>
                        <li class="py-2"><a href="/html/category/article-1906.htm" title="Java Random随机数">Java Random随机数</a></li>
                        <li class="py-2"><a href="/html/category/article-1896.htm" title="一、重写了equals为什么还要重写hashcode">一、重写了equals为什么还要重写hashcode</a></li>
                        <li class="py-2"><a href="/html/category/article-1901.htm" title="如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？">如何在MySQL中将算术运算符（+，-，*，/）与INTERVAL关键字的单位值一起使用？</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                        Afghanistan Address 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/jquery-3.5.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/wow/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/google-maps.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/afghanistanaddress/theme.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>